{"db":[{"meta":{"exported_on":1420328569345,"version":"003"},"data":{"posts":[{"id":2,"uuid":"ddd69955-798d-4355-8bf3-f11d02c2aac1","title":"What books have influenced Jay Wacker?","slug":"what-books-have-influenced-jay-wacker","markdown":"<strong>Dreams of a Final Theory,</strong> Steven Weinberg:<strong> </strong><a href=\"https://itunes.apple.com/us/book/dreams-of-a-final-theory/id422536005?mt=11\">iTunes</a>, <a href=\"http://www.amazon.com/Dreams-Final-Theory-Scientists-Ultimate/dp/0679744088/ref=sr_1_1?ie=UTF8&amp;qid=1325798748&amp;sr=8-1\">Amazon</a>\r\n\r\n<strong>The Selfish Gene, </strong>Richard Dawkins: <a href=\"http://www.amazon.com/The-Selfish-Gene-Edition---Introduction/dp/0199291152/ref=sr_1_1?ie=UTF8&amp;qid=1351822635&amp;sr=8-1&amp;keywords=selfish+gene\">Amazon</a>","html":"<p><strong>Dreams of a Final Theory,</strong> Steven Weinberg:<strong> </strong><a href=\"https://itunes.apple.com/us/book/dreams-of-a-final-theory/id422536005?mt=11\">iTunes</a>, <a href=\"http://www.amazon.com/Dreams-Final-Theory-Scientists-Ultimate/dp/0679744088/ref=sr_1_1?ie=UTF8&amp;qid=1325798748&amp;sr=8-1\">Amazon</a></p>\n\n<p><strong>The Selfish Gene, </strong>Richard Dawkins: <a href=\"http://www.amazon.com/The-Selfish-Gene-Edition---Introduction/dp/0199291152/ref=sr_1_1?ie=UTF8&amp;qid=1351822635&amp;sr=8-1&amp;keywords=selfish+gene\">Amazon</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1351822391000,"created_by":1,"updated_at":1365803575000,"updated_by":1,"published_at":1351822391000,"published_by":1},{"id":3,"uuid":"df3413dd-cdb8-45ec-9849-e1f474a93e0f","title":"Thinner and lighter","slug":"thinner-and-lighter","markdown":"[drop_caps]T[/drop_caps]here is a new trend in tech. Going thinner and lighter, and incredibly so. Almost every product line is aspiring to converge towards this goal. There is also no denying who is leading the charge here. That fruit company.\r\n\r\niOS devices have always aspired to be as thin and light as possible with the technology at hand. However, this trend is now showing up in Apple's OSX powered devices as well. With the release of the Retina MacBook Pro, Apple unveiled a portable computer unprecedented in its capabilities and aesthetics. Many \"compromises\" were made to achieve, what has been called, a few millimeters of thinness. The biggest uproar was about the repairability and post-manufacturing upgradability of the device. Lo and behold, a few months later Apple has followed suit with a new line of iMacs.\r\n\r\nThe new iMacs are incredible, and literally so. There is no parallel to the design. The aesthetics are stunning, the compromises are astounding. The device is barely upgradable and ditches the optical drive. It features laptop hardware and skids past the much powerful desktop guts. Much effort went into enabling the display's thinness which, again, stands against durability. The iMac is not supposed to be handled or, even, touched. Still, it lost 6lbs. It's always plugged in and hence, does not need to conserve much energy. Still, it sips on power. Then why go so thin? Why not let the iMac be the bulky desktop that sits in a corner and does all your bidding with the force of a thousand processors? It's safe to assume that the iMac invalidates all those obvious arguments that support the efforts and justify the compromises made towards minimizing the footprint of every portable apple device. There is something else under the hood. Something else that is driving Apple to making these devices so minimal. But what?\r\n\r\nLets digress a little. In the recent years, Apple has been accused of looking past its \"artsy\" audience and into the deep pockets of \"regular\" consumers. The release of Final Cut Pro X is just one of the occurrences that are being read as the signs of Apple skidding away from artists and professionals. I'm certain, this new iMac and the duke-nukem-forever Mac Pro lineup will be added to the list. However, more artists, more creators are using Apple devices now than they ever were. Almost every aspiring journalist or songwriter or guitarist or painter or coder or designer or student has or desires to buy something Apple. Pure marketing? Well MS is pouring 1.2 billion into marketing Surface and Windows 8. I don't see much happening of it. Then what gives? Why are more artists attracted to this company that is allegedly distancing itself from the entire clan of artisans?\r\n\r\nLet's think these two things together: the mystery of the disappearing bulk from Apple's devices and the contradiction of this company distancing itself from the artists who are increasingly drawn to it. What does a thinner and lighter iMac does that previous generations failed to accomplish? Well to begin with, it's much thinner. But how does that matter from a practical standpoint? Isn't that a disadvantage from the aspects of upgradability? The thing is, the creative mind is not practical. Were it so, it'd never think of things as crazy as flying gadgets or time-traveling frizzy-haired Dolorean-driving scientists. Every thing about creativity is impractical. The deviants find inspiration in the most unbelievable of things. Oh wait, that's what the iMac is, *unbelievable*. That's what the iPad mini is, *incredible*. That's what the iPhone 5's lightness is, *incredulous*. And that's what the Retina Display MacBooks are, *unrealistic*. These are things that don't seem possible until they are. There is an increasing number of reviews expressing that there is no way to express these devices in words and that the incredulity can be experienced only by touching them, by lifting them with bare hands, by staring at them in amazement.\r\n\r\nLet's tie the knots, shall we? The iMac is disappearing to show the artists what they are making. It's transcending its state of being a \"thing\". When an artist does become aware of its existence, the realization is of amazement which provokes a desire to touch, to use, and to create. Then the glass-aluminum form disappears again and ideas prevail. The incredible effort that went towards bringing those pixels a millimeter closer to the surface makes ideas expressed in glowing dots seem a lot more real, in fact, surreal. It's crazy that something so thin can be so powerful. It's also crazy that so naive-seeming ideas can change the world. There is a parallel and Apple is putting incredible force in creating it.\r\n\r\nThere is a reason I double-quoted the word \"compromises\" in the second paragraph. It's not that they are not real or I have any doubts that they reduce the usability of these devices, atleast for the time being. Absence of an optical drive from the iMac or user-replaceable RAM modules from the Retina MacBooks does affect users, for sure. But how much? Does it weight against the inspiration that these incredible devices are? Is it worth more than the singularity of the sculptor and the chisel that these devices are inching towards? Is it more valuable than an iPad mini being so very portable that it is with you the moment that idea of a lifetime presents itself? And we all know how predictable the nature of ideas is! These are not compromises. They are enablers.\r\n\r\nI do not expect tech press to understand this. In my last article I expressed concerns about the divergence between true perception of technology by users and the way it is being presented on blogs. There is a way to explain it now. Most Tech journalists are seldom artists or creators themselves. I have a prejudice that i still have to justify; I believe that those who can't, talk. To expand a little, I look at most tech journalists as the people who can't create technology, science, art and hence, they talk. Failing to realize the almost sacred bond between tools and the artist, these \"journalists\" objectify technology as the sum of it's parts. They cry over specs, not what the congregation of those specs enables. They review gadgets, not extensions of the creative self. They sell page-views, not the promise of creativity. There is no doubt that the dissonance exists.\r\n\r\nTechnology is not an aspect of our lives. It is the definition of who we are and what we aspire to become. It is our urge to go beyond what evolution has limited us to. It is us, as our better selves.","html":"<p>[drop<em>caps]T[/drop</em>caps]here is a new trend in tech. Going thinner and lighter, and incredibly so. Almost every product line is aspiring to converge towards this goal. There is also no denying who is leading the charge here. That fruit company.</p>\n\n<p>iOS devices have always aspired to be as thin and light as possible with the technology at hand. However, this trend is now showing up in Apple's OSX powered devices as well. With the release of the Retina MacBook Pro, Apple unveiled a portable computer unprecedented in its capabilities and aesthetics. Many \"compromises\" were made to achieve, what has been called, a few millimeters of thinness. The biggest uproar was about the repairability and post-manufacturing upgradability of the device. Lo and behold, a few months later Apple has followed suit with a new line of iMacs.</p>\n\n<p>The new iMacs are incredible, and literally so. There is no parallel to the design. The aesthetics are stunning, the compromises are astounding. The device is barely upgradable and ditches the optical drive. It features laptop hardware and skids past the much powerful desktop guts. Much effort went into enabling the display's thinness which, again, stands against durability. The iMac is not supposed to be handled or, even, touched. Still, it lost 6lbs. It's always plugged in and hence, does not need to conserve much energy. Still, it sips on power. Then why go so thin? Why not let the iMac be the bulky desktop that sits in a corner and does all your bidding with the force of a thousand processors? It's safe to assume that the iMac invalidates all those obvious arguments that support the efforts and justify the compromises made towards minimizing the footprint of every portable apple device. There is something else under the hood. Something else that is driving Apple to making these devices so minimal. But what?</p>\n\n<p>Lets digress a little. In the recent years, Apple has been accused of looking past its \"artsy\" audience and into the deep pockets of \"regular\" consumers. The release of Final Cut Pro X is just one of the occurrences that are being read as the signs of Apple skidding away from artists and professionals. I'm certain, this new iMac and the duke-nukem-forever Mac Pro lineup will be added to the list. However, more artists, more creators are using Apple devices now than they ever were. Almost every aspiring journalist or songwriter or guitarist or painter or coder or designer or student has or desires to buy something Apple. Pure marketing? Well MS is pouring 1.2 billion into marketing Surface and Windows 8. I don't see much happening of it. Then what gives? Why are more artists attracted to this company that is allegedly distancing itself from the entire clan of artisans?</p>\n\n<p>Let's think these two things together: the mystery of the disappearing bulk from Apple's devices and the contradiction of this company distancing itself from the artists who are increasingly drawn to it. What does a thinner and lighter iMac does that previous generations failed to accomplish? Well to begin with, it's much thinner. But how does that matter from a practical standpoint? Isn't that a disadvantage from the aspects of upgradability? The thing is, the creative mind is not practical. Were it so, it'd never think of things as crazy as flying gadgets or time-traveling frizzy-haired Dolorean-driving scientists. Every thing about creativity is impractical. The deviants find inspiration in the most unbelievable of things. Oh wait, that's what the iMac is, <em>unbelievable</em>. That's what the iPad mini is, <em>incredible</em>. That's what the iPhone 5's lightness is, <em>incredulous</em>. And that's what the Retina Display MacBooks are, <em>unrealistic</em>. These are things that don't seem possible until they are. There is an increasing number of reviews expressing that there is no way to express these devices in words and that the incredulity can be experienced only by touching them, by lifting them with bare hands, by staring at them in amazement.</p>\n\n<p>Let's tie the knots, shall we? The iMac is disappearing to show the artists what they are making. It's transcending its state of being a \"thing\". When an artist does become aware of its existence, the realization is of amazement which provokes a desire to touch, to use, and to create. Then the glass-aluminum form disappears again and ideas prevail. The incredible effort that went towards bringing those pixels a millimeter closer to the surface makes ideas expressed in glowing dots seem a lot more real, in fact, surreal. It's crazy that something so thin can be so powerful. It's also crazy that so naive-seeming ideas can change the world. There is a parallel and Apple is putting incredible force in creating it.</p>\n\n<p>There is a reason I double-quoted the word \"compromises\" in the second paragraph. It's not that they are not real or I have any doubts that they reduce the usability of these devices, atleast for the time being. Absence of an optical drive from the iMac or user-replaceable RAM modules from the Retina MacBooks does affect users, for sure. But how much? Does it weight against the inspiration that these incredible devices are? Is it worth more than the singularity of the sculptor and the chisel that these devices are inching towards? Is it more valuable than an iPad mini being so very portable that it is with you the moment that idea of a lifetime presents itself? And we all know how predictable the nature of ideas is! These are not compromises. They are enablers.</p>\n\n<p>I do not expect tech press to understand this. In my last article I expressed concerns about the divergence between true perception of technology by users and the way it is being presented on blogs. There is a way to explain it now. Most Tech journalists are seldom artists or creators themselves. I have a prejudice that i still have to justify; I believe that those who can't, talk. To expand a little, I look at most tech journalists as the people who can't create technology, science, art and hence, they talk. Failing to realize the almost sacred bond between tools and the artist, these \"journalists\" objectify technology as the sum of it's parts. They cry over specs, not what the congregation of those specs enables. They review gadgets, not extensions of the creative self. They sell page-views, not the promise of creativity. There is no doubt that the dissonance exists.</p>\n\n<p>Technology is not an aspect of our lives. It is the definition of who we are and what we aspire to become. It is our urge to go beyond what evolution has limited us to. It is us, as our better selves.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1351823678000,"created_by":1,"updated_at":1365452550000,"updated_by":1,"published_at":1351823678000,"published_by":1},{"id":4,"uuid":"2c579521-90e5-4dee-8412-1c1e33bc5838","title":"Apple and gravitational lensing","slug":"apple-and-gravitational-lensing","markdown":"[drop_caps]A[/drop_caps]pple garners more attention than any Hollywood celebrity or any single entity of our era. Maybe it's just a biased perception as I very deliberately avoid any and all kinds of celebrity gossips and read a little too much of Apple news. But, it's not entirely an illusion. Even the tiniest little bit that concerns the company can be found on the front pages of newspapers around the globe, at least in the developed and the developing world.\r\n\r\nThis is great for the company. One can't even begin to quantify the monetary value of such media coverage. Before a product launches, the speculation and rumormongering escalate to such levels that even \"normal\" people know when a new iPhone or iPad is coming out. They might even have a cursory idea of what to expect. This is unprecedented.\r\n\r\nThere is a very neat consequence of General relativity, called Gravitational Lensing. To summarize: light coming from a distant star bends around a massive object, like a black-hole or a huge aggregate of dark matter. When the bent light reaches us, we, assuming that light traces straight paths, believe that the star is somewhere else on the horizon than it actually is. The gist of the analogy that I'm trying to construct here is that light bends due to mass and presents us with a distorted version of reality.\r\n\r\n<a href=\"http://res.cloudinary.com/daectagjz/image/upload/v1412562556/Gravitational-lensing-galaxyApril12_2010-1024x768_xnf9ko.jpg\"><img class=\"alignnone size-full wp-image-48\" alt=\"Gravitational-lensing-galaxyApril12_2010-1024x768\" src=\"http://res.cloudinary.com/daectagjz/image/upload/v1412562556/Gravitational-lensing-galaxyApril12_2010-1024x768_xnf9ko.jpg\" width=\"1024\" height=\"768\" /></a>\r\n\r\nAttached to Apple's glam is a shadow that has only grown darker over time. Thousands and thousands of bloggers, analysts and vocal commenters focus all of their energy on covering Apple. This mass of attention serves a purpose analogous to a gravitational lens and distorts the reality that reaches people. Inconsequential happenings become headlines. Every product launch in recent history has been declared a failure by these self-proclaimed \"pundits\", curtesy of such non-occurrences as dropping a bar of cellular signal, a purple flare in the otherwise amazing camera, a slight heating of the back of some product or the ever-disappointing failure on Apple's part to meet \"expectations\". However, sales stay unaffected. The moment people hold these devices in their hands and use them for a while, those blog posts start to appear as utter nonsense. This trend speaks of the disconnect between the presented and actual realities of Apple.\r\n\r\nTech media and its belief that Apple's doomsday stories are a swift ticket to fame and page-views is detrimental to this one-of-a-kind company and more so, tech media itself. Journalists are trained to stay unbiased and present the most neutral picture possible. But most tech \"journalists\" appear to be far from this ideal. Cyclic conclusions, unfounded arguments and disproportionate criticism are rampant across thousands of posts that follow any product release. Opinions and editorials sound like illogical rants. Specimina of pure stupidity.\r\n\r\nIn the Wintel era, most electronics were marketed to geeks and bore inscrutable product numbers, followed by, detailed technical specifications. This made no sense at all to regular consumers. To make purchasing decisions, people relied on reviewers to explain how particular aspects of a product affected them and were they of any value. Apple, in it's multitude of ad campaigns, took the onus of educating the customers themselves and conveying a very different idea: how the product felt, worked and could be used. This has largely eliminated the \"please explain me what the hell this means\" value of reviews. As far as Apple devices are concerned, people ask for them by name. If they need help in deciding which one of the various models to buy, they trust their friends or the Apple-store staff. Thus, tech sites have lost an important role and are incessantly attempting to fulfill that void by taking the sensationalist route. Making scandals out of little defects, writing a few words wrapped within bold headlines and disproportionately criticizing Apple for incompetency has become the new norm.\r\n\r\nI believe that there is so much to be learnt from Apple. There are so many things that they get right and put incredible amount of thought into making their products. There is no company that cares more, for its products or customers. It would only be logical if tech media took some those lessons and cared to deliver a transparent and logical story to their readers or it's their readership to lose.","html":"<p>[drop<em>caps]A[/drop</em>caps]pple garners more attention than any Hollywood celebrity or any single entity of our era. Maybe it's just a biased perception as I very deliberately avoid any and all kinds of celebrity gossips and read a little too much of Apple news. But, it's not entirely an illusion. Even the tiniest little bit that concerns the company can be found on the front pages of newspapers around the globe, at least in the developed and the developing world.</p>\n\n<p>This is great for the company. One can't even begin to quantify the monetary value of such media coverage. Before a product launches, the speculation and rumormongering escalate to such levels that even \"normal\" people know when a new iPhone or iPad is coming out. They might even have a cursory idea of what to expect. This is unprecedented.</p>\n\n<p>There is a very neat consequence of General relativity, called Gravitational Lensing. To summarize: light coming from a distant star bends around a massive object, like a black-hole or a huge aggregate of dark matter. When the bent light reaches us, we, assuming that light traces straight paths, believe that the star is somewhere else on the horizon than it actually is. The gist of the analogy that I'm trying to construct here is that light bends due to mass and presents us with a distorted version of reality.</p>\n\n<p><a href=\"http://res.cloudinary.com/daectagjz/image/upload/v1412562556/Gravitational-lensing-galaxyApril12_2010-1024x768_xnf9ko.jpg\"><img class=\"alignnone size-full wp-image-48\" alt=\"Gravitational-lensing-galaxyApril12_2010-1024x768\" src=\"http://res.cloudinary.com/daectagjz/image/upload/v1412562556/Gravitational-lensing-galaxyApril12_2010-1024x768_xnf9ko.jpg\" width=\"1024\" height=\"768\" /></a></p>\n\n<p>Attached to Apple's glam is a shadow that has only grown darker over time. Thousands and thousands of bloggers, analysts and vocal commenters focus all of their energy on covering Apple. This mass of attention serves a purpose analogous to a gravitational lens and distorts the reality that reaches people. Inconsequential happenings become headlines. Every product launch in recent history has been declared a failure by these self-proclaimed \"pundits\", curtesy of such non-occurrences as dropping a bar of cellular signal, a purple flare in the otherwise amazing camera, a slight heating of the back of some product or the ever-disappointing failure on Apple's part to meet \"expectations\". However, sales stay unaffected. The moment people hold these devices in their hands and use them for a while, those blog posts start to appear as utter nonsense. This trend speaks of the disconnect between the presented and actual realities of Apple.</p>\n\n<p>Tech media and its belief that Apple's doomsday stories are a swift ticket to fame and page-views is detrimental to this one-of-a-kind company and more so, tech media itself. Journalists are trained to stay unbiased and present the most neutral picture possible. But most tech \"journalists\" appear to be far from this ideal. Cyclic conclusions, unfounded arguments and disproportionate criticism are rampant across thousands of posts that follow any product release. Opinions and editorials sound like illogical rants. Specimina of pure stupidity.</p>\n\n<p>In the Wintel era, most electronics were marketed to geeks and bore inscrutable product numbers, followed by, detailed technical specifications. This made no sense at all to regular consumers. To make purchasing decisions, people relied on reviewers to explain how particular aspects of a product affected them and were they of any value. Apple, in it's multitude of ad campaigns, took the onus of educating the customers themselves and conveying a very different idea: how the product felt, worked and could be used. This has largely eliminated the \"please explain me what the hell this means\" value of reviews. As far as Apple devices are concerned, people ask for them by name. If they need help in deciding which one of the various models to buy, they trust their friends or the Apple-store staff. Thus, tech sites have lost an important role and are incessantly attempting to fulfill that void by taking the sensationalist route. Making scandals out of little defects, writing a few words wrapped within bold headlines and disproportionately criticizing Apple for incompetency has become the new norm.</p>\n\n<p>I believe that there is so much to be learnt from Apple. There are so many things that they get right and put incredible amount of thought into making their products. There is no company that cares more, for its products or customers. It would only be logical if tech media took some those lessons and cared to deliver a transparent and logical story to their readers or it's their readership to lose.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1351824025000,"created_by":1,"updated_at":1412544556000,"updated_by":1,"published_at":1351824025000,"published_by":1},{"id":5,"uuid":"d0d8f81d-3c75-4cdd-9911-22f54297a46c","title":"Neil deGrasse Tyson's must reads","slug":"neil-degrasse-tysons-must-reads","markdown":"Neil deGrasse Tyson lists books that one must read to gain understanding of our culture and universe. <a href=\"http://www.openculture.com/2011/12/neil_degrasse_tyson_8_books_every_intelligent_person_should_read.html\">Open Culture</a>.\r\n\r\nOn my read list:\r\n<ul>\r\n\t<li>The System of the World by Isaac Newton (<a href=\"http://www.archive.org/stream/newtonspmathema00newtrich/newtonspmathema00newtrich_djvu.txt\">eBook</a>)</li>\r\n\t<li>The Age of Reason by Thomas Paine (<a href=\"http://www.gutenberg.org/ebooks/3743\">eBook</a> - <a href=\"http://www.archive.org/details/age_reason_0910_librivox\">Audio Book</a>)</li>\r\n\t<li>The Wealth of Nations by Adam Smith (<a href=\"http://www.gutenberg.org/ebooks/3300\">eBook</a> - <a href=\"http://www.archive.org/details/wealth_nations01_se\">Audio Book</a>)</li>\r\n</ul>\r\nFind the amazing Tyson on <a href=\"https://mobile.twitter.com/neiltyson\">Twitter</a>, <a href=\"http://www.reddit.com/user/neiltyson\">Reddit</a> and <a href=\"http://www.startalkradio.net/\">Star Talk Radio</a>.\r\n\r\nAlso dive into Open Culture's amazing collection of free and out of copyright ebooks of seminal works <a href=\"http://www.openculture.com/free_ebooks\">here</a>.","html":"<p>Neil deGrasse Tyson lists books that one must read to gain understanding of our culture and universe. <a href=\"http://www.openculture.com/2011/12/neil_degrasse_tyson_8_books_every_intelligent_person_should_read.html\">Open Culture</a>.</p>\n\n<p>On my read list:  </p>\n\n<ul>  \n    <li>The System of the World by Isaac Newton (<a href=\"http://www.archive.org/stream/newtonspmathema00newtrich/newtonspmathema00newtrich_djvu.txt\">eBook</a>)</li>\n    <li>The Age of Reason by Thomas Paine (<a href=\"http://www.gutenberg.org/ebooks/3743\">eBook</a> - <a href=\"http://www.archive.org/details/age_reason_0910_librivox\">Audio Book</a>)</li>\n    <li>The Wealth of Nations by Adam Smith (<a href=\"http://www.gutenberg.org/ebooks/3300\">eBook</a> - <a href=\"http://www.archive.org/details/wealth_nations01_se\">Audio Book</a>)</li>\n</ul>  \n\n<p>Find the amazing Tyson on <a href=\"https://mobile.twitter.com/neiltyson\">Twitter</a>, <a href=\"http://www.reddit.com/user/neiltyson\">Reddit</a> and <a href=\"http://www.startalkradio.net/\">Star Talk Radio</a>.</p>\n\n<p>Also dive into Open Culture's amazing collection of free and out of copyright ebooks of seminal works <a href=\"http://www.openculture.com/free_ebooks\">here</a>.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1351970846000,"created_by":1,"updated_at":1365500404000,"updated_by":1,"published_at":1351970846000,"published_by":1},{"id":6,"uuid":"2eb977fa-3527-4a76-8629-47244bda1490","title":"Reading List","slug":"reading-list","markdown":"<ul>\r\n<li>  <strong>The Age of Reason,</strong> Thomas Paine: <a href=\"http://www.gutenberg.org/ebooks/3743\">eBook</a>, <a href=\"http://www.archive.org/details/age_reason_0910_librivox\">Audio Book</a></li>\r\n<li>  <strong>The Wealth of Nations,</strong> Adam Smith: <a href=\"http://www.gutenberg.org/ebooks/3300\">eBook</a>, <a href=\"http://www.archive.org/details/wealth_nations01_se\">Audio Book</a></li>\r\n<li>  <strong>Dreams of a Final Theory,</strong> Steven Weinberg: <a href=\"https://itunes.apple.com/us/book/dreams-of-a-final-theory/id422536005?mt=11\">iTunes</a>, <a href=\"http://www.amazon.com/Dreams-Final-Theory-Scientists-Ultimate/dp/0679744088/ref=sr_1_1?ie=UTF8&amp;qid=1325798748&amp;sr=8-1\">Amazon</a></li>\r\n<li>  <strong>The Selfish Gene,</strong>Richard Dawkins: <a href=\"http://www.amazon.com/The-Selfish-Gene-Edition---Introduction/dp/0199291152/ref=sr_1_1?ie=UTF8&amp;qid=1351822635&amp;sr=8-1&amp;keywords=selfish+gene\">Amazon</a></li>\r\n<li>  <strong>The Nature of Space and Time,</strong> Stephen Hawking and Roger Penrose: <a href=\"http://www.amazon.com/Nature-Space-Time-Stephen-Hawking/dp/0691037914\">Amazon</a></li>\r\n<li>  <strong>QED,</strong> Richard Feynmann</li>\r\n</ul>","html":"<ul>  \n<li>  <strong>The Age of Reason,</strong> Thomas Paine: <a href=\"http://www.gutenberg.org/ebooks/3743\">eBook</a>, <a href=\"http://www.archive.org/details/age_reason_0910_librivox\">Audio Book</a></li>  \n<li>  <strong>The Wealth of Nations,</strong> Adam Smith: <a href=\"http://www.gutenberg.org/ebooks/3300\">eBook</a>, <a href=\"http://www.archive.org/details/wealth_nations01_se\">Audio Book</a></li>  \n<li>  <strong>Dreams of a Final Theory,</strong> Steven Weinberg: <a href=\"https://itunes.apple.com/us/book/dreams-of-a-final-theory/id422536005?mt=11\">iTunes</a>, <a href=\"http://www.amazon.com/Dreams-Final-Theory-Scientists-Ultimate/dp/0679744088/ref=sr_1_1?ie=UTF8&amp;qid=1325798748&amp;sr=8-1\">Amazon</a></li>  \n<li>  <strong>The Selfish Gene,</strong>Richard Dawkins: <a href=\"http://www.amazon.com/The-Selfish-Gene-Edition---Introduction/dp/0199291152/ref=sr_1_1?ie=UTF8&amp;qid=1351822635&amp;sr=8-1&amp;keywords=selfish+gene\">Amazon</a></li>  \n<li>  <strong>The Nature of Space and Time,</strong> Stephen Hawking and Roger Penrose: <a href=\"http://www.amazon.com/Nature-Space-Time-Stephen-Hawking/dp/0691037914\">Amazon</a></li>  \n<li>  <strong>QED,</strong> Richard Feynmann</li>  \n</ul>","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1351987230000,"created_by":1,"updated_at":1365534500000,"updated_by":1,"published_at":1351987230000,"published_by":1},{"id":7,"uuid":"88a820b0-57a5-4426-992c-fe1f4e02d286","title":"Mind Meld","slug":"hailing-frequencies","markdown":"","html":"","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1365427837000,"created_by":1,"updated_at":1365433782000,"updated_by":1,"published_at":1365427837000,"published_by":1},{"id":9,"uuid":"c49492cb-ab31-4dcc-b18f-fedbfeb5407a","title":"CSS Media Queries for iOS devices","slug":"css-media-queries-for-ios-devices","markdown":"Very handy CSS Media Queries for iOS devices.","html":"<p>Very handy CSS Media Queries for iOS devices.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1365461922000,"created_by":1,"updated_at":1365686986000,"updated_by":1,"published_at":1365461922000,"published_by":1},{"id":10,"uuid":"a1aad872-2933-447f-8399-a9dca1fdfdd7","title":"First App","slug":"chapter-1-first-app","markdown":"<p>Two basic questions when writing an app:\r\n1. Creating objects and configuring them\r\n2. Managing user interaction.</p>\r\n\r\n<h3>Terms and ideas:</h3>\r\n\r\n<ul>\r\n<li>Anything that can appear to the user is a <strong>view</strong>.</li>\r\n<li>The iOS SDK is an object-oriented library, and views are represented by objects.</li>\r\n<li>Each view is an instance of one of several subclasses of the <strong>UIView</strong> class.</li>\r\n<li>Xcode’s interface builder is different. It is an <strong>object editor</strong>: you create and configure view objects and then save them into an archive. The archive is a <strong>XIB</strong> (pronounced “zib”) file.</li>\r\n<li><strong>A XIB file is an XML representation of the archived objects</strong>. When you build a project, the <strong>XIB file is compiled into a NIB file</strong>. Developers work with XIB files (they’re easier to edit), and applications use NIB files (they’re smaller and easier to parse). However, most iOS developers use the words XIB and NIB interchangeably.</li>\r\n<li>The <strong>bundle</strong> is a directory containing the application’s executable and any resources the executable uses.</li>\r\n<li>Objects are archived into XIB files → coplied into NIB files → copied into the application bundle on Build → Loaded and read on execution.</li>\r\n<li><strong>VeiwController</strong>: Object responsible for managing the events that occur on the interfce.</li>\r\n<li>Model-View-Controller pattern: every object you create is exactly one of the following: a <strong>model object</strong>, a <strong>view object</strong>, or a <strong>controller object</strong>.\r\n\r\n<ul>\r\n<li>View objects are visible to the user.</li>\r\n<li>Model objects hold data and know nothing about the user interface. Model objects typically use standard collection classes (<strong>NSArray</strong>, <strong>NSDictionary</strong>, <strong>NSSet</strong>) and standard value types (<strong>NSString</strong>, <strong>NSDate</strong>, <strong>NSNumber</strong>).</li>\r\n<li>Controllers are the managers in an application. They keep the view and model objects in sync, control the “flow” of the application, and save the model objects out to the filesystem.</li>\r\n</ul></li>\r\n<li><strong>IBAction</strong> and <strong>IBOutlet</strong> allow to connect controller and view objects in the XIB file.\r\n\r\n<ul>\r\n<li>the pointers that appear in the connections panel are the ones that you decorated with IBOutlet in QuizViewController.h.</li>\r\n</ul></li>\r\n<li>A <strong>connection</strong> lets one object know where another object is in memory so that the two objects can work together.</li>\r\n<li>The object that is sent the message is called the <strong>target</strong>.</li>\r\n<li>The message is called the <strong>action</strong>, and it is the name of the method that tapping the button should trigger</li>\r\n<li>Methods and instance variables are declared in the header file (.h), but the actual code for the methods is placed in the implementation file (.m)</li>\r\n<li>View objects are typically created in XIB files, and model objects are always created programmatically.</li>\r\n</ul>\r\n","html":"<p>Two basic questions when writing an app:  \n1. Creating objects and configuring them  \n2. Managing user interaction.</p>\n\n<h3>Terms and ideas:</h3>\n\n<ul>  \n<li>Anything that can appear to the user is a <strong>view</strong>.</li>  \n<li>The iOS SDK is an object-oriented library, and views are represented by objects.</li>  \n<li>Each view is an instance of one of several subclasses of the <strong>UIView</strong> class.</li>  \n<li>Xcode’s interface builder is different. It is an <strong>object editor</strong>: you create and configure view objects and then save them into an archive. The archive is a <strong>XIB</strong> (pronounced “zib”) file.</li>  \n<li><strong>A XIB file is an XML representation of the archived objects</strong>. When you build a project, the <strong>XIB file is compiled into a NIB file</strong>. Developers work with XIB files (they’re easier to edit), and applications use NIB files (they’re smaller and easier to parse). However, most iOS developers use the words XIB and NIB interchangeably.</li>  \n<li>The <strong>bundle</strong> is a directory containing the application’s executable and any resources the executable uses.</li>  \n<li>Objects are archived into XIB files → coplied into NIB files → copied into the application bundle on Build → Loaded and read on execution.</li>  \n<li><strong>VeiwController</strong>: Object responsible for managing the events that occur on the interfce.</li>  \n<li>Model-View-Controller pattern: every object you create is exactly one of the following: a <strong>model object</strong>, a <strong>view object</strong>, or a <strong>controller object</strong>.\n\n<ul>  \n<li>View objects are visible to the user.</li>  \n<li>Model objects hold data and know nothing about the user interface. Model objects typically use standard collection classes (<strong>NSArray</strong>, <strong>NSDictionary</strong>, <strong>NSSet</strong>) and standard value types (<strong>NSString</strong>, <strong>NSDate</strong>, <strong>NSNumber</strong>).</li>  \n<li>Controllers are the managers in an application. They keep the view and model objects in sync, control the “flow” of the application, and save the model objects out to the filesystem.</li>  \n</ul></li>  \n<li><strong>IBAction</strong> and <strong>IBOutlet</strong> allow to connect controller and view objects in the XIB file.\n\n<ul>  \n<li>the pointers that appear in the connections panel are the ones that you decorated with IBOutlet in QuizViewController.h.</li>  \n</ul></li>  \n<li>A <strong>connection</strong> lets one object know where another object is in memory so that the two objects can work together.</li>  \n<li>The object that is sent the message is called the <strong>target</strong>.</li>  \n<li>The message is called the <strong>action</strong>, and it is the name of the method that tapping the button should trigger</li>  \n<li>Methods and instance variables are declared in the header file (.h), but the actual code for the methods is placed in the implementation file (.m)</li>  \n<li>View objects are typically created in XIB files, and model objects are always created programmatically.</li>  \n</ul>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1365515473000,"created_by":1,"updated_at":1365515948000,"updated_by":1,"published_at":1365515473000,"published_by":1},{"id":11,"uuid":"76ef4673-ccd9-4151-9753-9b312f38d1d2","title":"iOS Notes","slug":"ios-notes","markdown":"These are my notes from <a href=\"http://www.bignerdranch.com/book/ios_programming_the_big_nerd_ranch_guide_rd_edition_\">Big Nerd Ranch iOS programming</a>. It's a work in progress.\r\n[catlist id=9]","html":"<p>These are my notes from <a href=\"http://www.bignerdranch.com/book/ios_programming_the_big_nerd_ranch_guide_rd_edition_\">Big Nerd Ranch iOS programming</a>. It's a work in progress. <br />\n[catlist id=9]</p>","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1365515590000,"created_by":1,"updated_at":1365792591000,"updated_by":1,"published_at":1365515590000,"published_by":1},{"id":12,"uuid":"33f05524-fc26-4d56-8a1c-f7e1f545c7d0","title":"Obj-C","slug":"chapter-2-obj-c","markdown":"<h4>Objects</h4>\r\n\r\n<ul>\r\n<li>Each instance of a class becomes an object that holds it&#8217;s own data.</li>\r\n<li>An instance of a class, an object, has its <strong>instance variables</strong>.</li>\r\n<li><strong>Methods</strong> are functions associated with objects and they have access to instance variables. Their structure is:\r\n\r\n<ul>\r\n<li>Return type</li>\r\n<li>Name</li>\r\n<li>Parameters it expects</li>\r\n<li><ul>\r\n<li>(NSString *) setItemName: (NSString *)str;</li>\r\n</ul></li>\r\n</ul></li>\r\n<li>An instruction that makes an object execute a method is a <strong>message</strong>.</li>\r\n<li>an object (class instance) is declared using a <strong>pointer</strong> that points to a location in the momory where the object is actually stored.\r\n\r\n<ul>\r\n<li>Class *classInstance; // Creates a(n instance) variable that point to an Object, but doesn&#8217;t create the object itself.</li>\r\n</ul></li>\r\n<li>To create an object, you send an alloc message to a class.\r\n\r\n<ul>\r\n<li>Class *classInstance = [Class alloc]; // This syntax creates a class and then creates a pointer to it with the name &#8220;classInstance&#8221;.</li>\r\n</ul></li>\r\n<li>The first message you always send to a newly allocated instance is an initialization message as an instance isn&#8217;t valid until initialized.\r\n\r\n<ul>\r\n<li>Class *classInstance = [[Class alloc] init];</li>\r\n</ul></li>\r\n</ul>\r\n\r\n<h4>Anatomy of a Message:</h4>\r\n\r\n<ul>\r\n<li>A message is always contained in square brackets.</li>\r\n<li>Parts of a message:\r\n\r\n<ul>\r\n<li>Reciever: A pointer to the <em>object</em> recieving the message</li>\r\n<li>Selector: The name of the <em>method</em> that is supposed to be executed</li>\r\n<li>Arguments: The values that are to be supplied as the <em>parameters</em> of the method.</li>\r\n<li>[recievingObject methodName:argument];</li>\r\n</ul></li>\r\n<li>Multiple Arguments: Each argument is paired with a label in the selector, and each label ends with a colon.\r\n\r\n<ul>\r\n<li>[recievingObject methodName:argument1 sameMethod:argument2]</li>\r\n<li>For every pair of square brackets, there is only one message being sent. Even if it has two labels, it is still only one message, and sending that message results in <strong>only one method being executed</strong>.</li>\r\n</ul></li>\r\n<li>A <strong>method</strong> is a chunk of code that can be executed, and a <strong>message</strong> is the act of asking a class or object to execute a method.</li>\r\n</ul>\r\n\r\n<h4>Destroying Objcts</h4>\r\n\r\n<ul>\r\n<li>Objects can be destroyed by setting their pointer to <strong>nil</strong>.\r\n\r\n<ul>\r\n<li>classIntance = nil;</li>\r\n</ul></li>\r\n<li>A pointer with the value &#8220;nil&#8221; is used to represent the absence of an object.</li>\r\n</ul>\r\n\r\n<h4>Creating Strings</h4>\r\n\r\n<ul>\r\n<li>When you want a hard-coded string, you prefix a character string with an @ symbol. This creates an instance of NSString that holds the character string.</li>\r\n<li><strong>Format Strings</strong>: NSLog takes variable number of arguments:\r\n\r\n<ul>\r\n<li>The first argument <strong>must</strong> be an NSString <em>format string</em>, followed by arguments that refer to the tokens.</li>\r\n<li>%d: double</li>\r\n<li>%f: float</li>\r\n<li>%c: char</li>\r\n<li><strong>%@</strong>: Any object\r\n\r\n<ul>\r\n<li>When %@ is encountered in the format string, instead of the token being replaced by the corresponding argument, that argument is sent the message <em>description</em>. The description method returns an NSString that replaces the token. Because the argument is sent a message, that argument must be an object.</li>\r\n</ul></li>\r\n</ul></li>\r\n</ul>\r\n\r\n<h4>NSArray and NSMutableArray</h4>\r\n\r\n<ul>\r\n<li>An array is an <strong>ordered</strong> list of objects, which can be accessed using an <strong>index</strong>.</li>\r\n<li>an NSArray is <strong>immutable</strong>, that is nothing can be added/removed once the array has been initialized.</li>\r\n<li><strong>NSMutableArray</strong>, a subclass of NSArray, allows edits.</li>\r\n<li>An array does not actually contain the objects that belong to it; instead it holds a pointer to each object. So array can only hold references to Obj-C objects and can have different types of objects.\r\n\r\n<ul>\r\n<li>An array or any other object does hold <strong>static variables</strong> like <em>int</em>, etc in their heap.</li>\r\n</ul></li>\r\n<li><strong>count</strong>: Message to enqire an array of the number of objects it is storing.</li>\r\n<li><strong>NSNull</strong>: You cannot add nil to an array. If you need to add “holes” to an array, you must use NSNull. NSNull is an object that represents nil and is used specifically for this task.\r\n\r\n<ul>\r\n<li>[array addObject:[NSNull null]];</li>\r\n</ul></li>\r\n<li><strong>objectAtIndex:</strong>- Used to retrieve object-pointers at specific indices.\r\n\r\n<ul>\r\n<li>NSString *objectName = [array objectAtIndex:0]</li>\r\n</ul></li>\r\n</ul>\r\n\r\n<h4>Subclasses</h4>\r\n\r\n<ul>\r\n<li>Every class in Obj-C has exactly one superclass.</li>\r\n<li><strong>Root Class: NSObject</strong>. Every object inherits 3 methods from NSObject:\r\n\r\n<ul>\r\n<li>alloc</li>\r\n<li>init</li>\r\n<li>description</li>\r\n</ul></li>\r\n<li>A subclass adds methods and instance variables to extend the behavior of its superclass.</li>\r\n<li>A subclass can also overide the methods of its superclass.\r\n\r\n<ul>\r\n<li>Subclasses override the default behavior of description method, which is to return the name of the object&#8217;s class and its address in memory. They make description supply more relevant information about their instances.\r\n\r\n<ul>\r\n<li>NSString returns the string itself</li>\r\n<li>NSArray returns the description of every object in the instance as a string.</li>\r\n</ul></li>\r\n</ul></li>\r\n<li><strong>Header File</strong>: (.h) Starts with <strong>@interface</strong> Classnae and superclass name</li>\r\n<li>@interface ClassName : SuperClassName</li>\r\n<li>Used to declare\r\n\r\n<ul>\r\n<li>The name of the new class</li>\r\n<li>Its superclass</li>\r\n<li>Instance variables</li>\r\n<li>Methods</li>\r\n</ul></li>\r\n<li><strong>Implementation File</strong>: (.m) Contains the code for the methods of the class.\r\n\r\n<ul>\r\n<li>At the top, the associated headr file is imported</li>\r\n<li><strong>#import &#8220;ClassName.h&#8221;</strong></li>\r\n</ul></li>\r\n<li>Objective-C retains all the keywords of the C language, and additional <strong>keywords specific to Objective-C are distinguishable by the @ prefix</strong>.</li>\r\n<li>To declare a class in Objective-C,\r\n\r\n<ul>\r\n<li>Use the keyword <strong>@interface</strong> followed by the name of this new class. After a colon comes the name of the superclass.</li>\r\n<li>@interface NewClass: SuperClass</li>\r\n<li>The @end directive indicates that the class has been fully declared.</li>\r\n</ul></li>\r\n<li><strong>Instance Variables</strong>\r\n\r\n<ul>\r\n<li>Declared inside of curly braces immediately after class declaration</li>\r\n<li>Non-pointer instance variables are stored inside the object itself.</li>\r\n</ul></li>\r\n</ul>\r\n\r\n<h4>Accessor Methods:</h4>\r\n\r\n<ul>\r\n<li>Accessor methods are needed to interact with instance variables in messages.</li>\r\n<li>Methods that <strong>set and get</strong> instance variables are called Accessor Methods.\r\n\r\n<ul>\r\n<li><strong>Setters</strong></li>\r\n<li><strong>Getters</strong></li>\r\n</ul></li>\r\n<li>The name of a setter method is set plus the name of the instance variable it is changing.</li>\r\n<li>The name of the getter method is just the name of the instance variable.</li>\r\n<li>Impleemting Accessors:\r\n\r\n<ul>\r\n<li>In the implementation file, the header file is imported.</li>\r\n<li>Implementation block begins with <strong>@implementation</strong> keyword followed by the name of the class that is being implemented.</li>\r\n<li>All of the method definitions in the implementation file are inside the implementation block, terminated by the @end keyword.</li>\r\n<li>The setter methods assign the appropriate instance variable to point at the incoming object.</li>\r\n<li>The getter methods return a pointer to the object the instance variable points at.</li>\r\n</ul></li>\r\n<li>-(void) setInstanceVarName: (NSString *) name { instanceVarName = name; }</li>\r\n<li>-(NSString *) instanceVarName { return instanceVarName; }</li>\r\n</ul>\r\n\r\n<h4>Instance Methods</h4>\r\n\r\n<ul>\r\n<li>When a method is overidden, it doesn&#8217;t need to be declared in the header file as it&#8217;s imported with the superclass.\r\n\r\n<ul>\r\n<li>To override a method, just implement it in the implemenation file.</li>\r\n</ul></li>\r\n<li>Remember, an NSLog with %@ as the token will print the description of the corresponding argument\r\n\r\n<ul>\r\n<li>NSLog(@&#8220;%@&#8221;, objectName);</li>\r\n<li>A string could be declared using just the @ keyword\r\n\r\n<ul>\r\n<li>[p setSerialNumber:@&#8220;A1B2C&#8221;];</li>\r\n</ul></li>\r\n</ul></li>\r\n</ul>\r\n\r\n<h4>Initializers</h4>\r\n\r\n<ul>\r\n<li><strong>alloc</strong>: Allocates memeory and creates an instance(object), returning it&#8217;s pointer.</li>\r\n<li><strong>init</strong>: Gives instance varaibles their initial values.</li>\r\n<li><strong>Initializers</strong>: Initialization methods that take arguments to initialize their objects&#8217; instance vars.</li>\r\n<li><p><strong>Each initializer name, conventionally, begins with the word <em>init</em>.</strong></p>\r\n\r\n<h5>Designated Initializer:</h5></li>\r\n<li>An initializer method, of the multiple ones which a class can have, that makes sure every instance var of an object is valid.</li>\r\n<li>Designated initializers have parameters for the most important and frequently used instance vars of a class.</li>\r\n<li><ul>\r\n<li>(id) initWithItemName: (NSString *)name valueInDollars: (int) value serialNumber: (NSString *)sNumber;</li>\r\n</ul>\r\n\r\n<ul>\r\n<li>Name of the method (Selector): initWithItemName:valueInDollars:serialNumber</li>\r\n<li>Labels of the selector: initWithItemName, valueInDollars, serialNumber</li>\r\n<li>three parameters : name, value, sNumber.</li>\r\n</ul></li>\r\n<li><strong>- (id)</strong> : The return type <em>id</em> is a <strong>POINTER to any object</strong>. Returns a pointer to the appropriate object.\r\n\r\n<ul>\r\n<li><strong>init</strong> methods are always declared to return id.</li>\r\n</ul></li>\r\n<li><strong>isa pointer</strong>: Stores the class of the bobject, thus making it aware of what\r\n\r\n<ul>\r\n<li>Every object (class instance) has the <em>isa</em> instance var.</li>\r\n<li>When an instance is created by sending a class the <em>[alloc]</em> message, the class sets the <em>isa</em> var of the onstance(object) to point back to the class.</li>\r\n</ul></li>\r\n<li><strong>Implementing the designated initializer</strong>:\r\n\r\n<ul>\r\n<li>First thing: Call the superclass&#8217;s designated initializer using <em>super</em>.</li>\r\n<li>Last thing: Return a pointer to the successfully initialied object using <em>self</em>.</li>\r\n</ul></li>\r\n<li><strong>self</strong>: Self is an <strong>implicit local var</strong>.\r\n\r\n<ul>\r\n<li>It doesn&#8217;t need declaration</li>\r\n<li>It&#8217;s automatically pointed to <em>the object that was sent the message</em>.\r\n\r\n<ul>\r\n<li>[self methodName]; //self points to the object within which it was sent the message.</li>\r\n</ul></li>\r\n<li>It&#8217;s used so that <em>an object can send a message to itself</em>.</li>\r\n</ul></li>\r\n<li><strong>super</strong>: A compiler directive in Obj-C\r\n\r\n<ul>\r\n<li>Usually when you send a message to an object, the search for a method of that name starts in the object’s class. If there is no such method, the search continues in the superclass of the object. The search will continue up the inheritance hierarchy until a suitable method is found. (If it gets to the top of the hierarchy and no method is found, an exception is thrown.)</li>\r\n<li>When you send a message to <em>super</em>, you are sending a message to self, but <strong>the search for the method skips the object’s class and starts at the superclass.</strong></li>\r\n</ul></li>\r\n<li>Check with <em>if (self) { }</em> that the superclass&#8217; initializer succeeded.</li>\r\n<li>Rules about initializers:\r\n\r\n<ul>\r\n<li>A class inherits all initializers from its superclass and can add as many as it wants for its own purposes.</li>\r\n<li>Each class picks one initializer as its designated initializer.</li>\r\n<li>The designated initializer calls the superclass’s designated initializer.\r\n\r\n<ul>\r\n<li>self = [super init]</li>\r\n</ul></li>\r\n<li>Any other initializer a class has calls the class’s designated initializer.</li>\r\n<li><strong>If a class declares a designated initializer that is different from its superclass, the superclass’s designated initializer must be overridden to call the new designated initializer.</strong></li>\r\n</ul></li>\r\n</ul>\r\n\r\n<h4>Class Methods</h4>\r\n\r\n<ul>\r\n<li>There are 2 kinds of methods:\r\n\r\n<ul>\r\n<li><strong>Classs methods</strong>: are sent to classes, like <em>alloc</em></li>\r\n<li><strong>Instance Methods</strong>: are sent to class instances (objects), like <em>init</em></li>\r\n</ul></li>\r\n<li>Class methods typically either <strong>create new instances of the class</strong> or <strong>retrieve some global property of the class</strong>.</li>\r\n<li>Class methods do not operate on an instance or have any access to instance vars.</li>\r\n<li><strong>An instance method uses the - character just before the return type, and a class method uses the + character.</strong></li>\r\n<li>The order of the declarations for the methods:\r\n\r\n<ul>\r\n<li><strong>Class methods</strong></li>\r\n<li><strong>Initializers</strong></li>\r\n<li><strong>other methods</strong></li>\r\n</ul></li>\r\n<li>rand() % [arrayName count] // would generate random indices for the array.</li>\r\n<li><strong>NSInteger</strong> is not a class or object but a type definition for <strong>long</strong>.\r\n\r\n<ul>\r\n<li>NSInteger vs int: http://stackoverflow.com/questions/4445173/when-to-use-nsinteger-vs-int</li>\r\n</ul></li>\r\n<li><strong>Generaring random chars</strong>:\r\n\r\n<ul>\r\n<li>&#8216;0&#8217; + rand() % 10 //generates numbers as chars</li>\r\n<li>&#8216;A&#8217; + rand() % 26, //generates alphabet as chars</li>\r\n</ul></li>\r\n<li><strong>Convenience methods</strong>: Class methods which return an object of the type of the class itself.\r\n\r\n<ul>\r\n<li><em>self</em> used in class methods refers to the class itself instead of an instance.</li>\r\n<li>Convinience methods should use <em>self</em> instead of the Class name to allow reuse in subclasses.</li>\r\n</ul></li>\r\n</ul>\r\n\r\n<h4>Exceptions and Unrecognized Selectors</h4>\r\n\r\n<ul>\r\n<li>When a message is sent to an object that doesn&#8217;t respond to the message, the application will throw an <strong>exception</strong>.</li>\r\n<li><strong>Exceptions</strong> are also known as <strong>run-time errors</strong> because they occur once your application is running</li>\r\n<li><strong>Compile-time errors</strong> show up when your application is being built, or compiled.</li>\r\n</ul>\r\n\r\n<h4>Fast Enumeration</h4>\r\n\r\n<pre><code>for (BNRItem *item in items)\r\n    {\r\n    NSLog(@&quot;%@&quot;, item);\r\n    }\r\n</code></pre>\r\n\r\n<h4>More</h4>\r\n\r\n<ul>\r\n<li><strong>Namespace collision</strong>: Error when two classes have the smae name.</li>\r\n</ul>","html":"<h4>Objects</h4>\n\n<ul>  \n<li>Each instance of a class becomes an object that holds it&#8217;s own data.</li>  \n<li>An instance of a class, an object, has its <strong>instance variables</strong>.</li>  \n<li><strong>Methods</strong> are functions associated with objects and they have access to instance variables. Their structure is:\n\n<ul>  \n<li>Return type</li>  \n<li>Name</li>  \n<li>Parameters it expects</li>  \n<li><ul>  \n<li>(NSString *) setItemName: (NSString *)str;</li>  \n</ul></li>  \n</ul></li>  \n<li>An instruction that makes an object execute a method is a <strong>message</strong>.</li>  \n<li>an object (class instance) is declared using a <strong>pointer</strong> that points to a location in the momory where the object is actually stored.\n\n<ul>  \n<li>Class *classInstance; // Creates a(n instance) variable that point to an Object, but doesn&#8217;t create the object itself.</li>  \n</ul></li>  \n<li>To create an object, you send an alloc message to a class.\n\n<ul>  \n<li>Class *classInstance = [Class alloc]; // This syntax creates a class and then creates a pointer to it with the name &#8220;classInstance&#8221;.</li>  \n</ul></li>  \n<li>The first message you always send to a newly allocated instance is an initialization message as an instance isn&#8217;t valid until initialized.\n\n<ul>  \n<li>Class *classInstance = [[Class alloc] init];</li>  \n</ul></li>  \n</ul>\n\n<h4>Anatomy of a Message:</h4>\n\n<ul>  \n<li>A message is always contained in square brackets.</li>  \n<li>Parts of a message:\n\n<ul>  \n<li>Reciever: A pointer to the <em>object</em> recieving the message</li>  \n<li>Selector: The name of the <em>method</em> that is supposed to be executed</li>  \n<li>Arguments: The values that are to be supplied as the <em>parameters</em> of the method.</li>  \n<li>[recievingObject methodName:argument];</li>  \n</ul></li>  \n<li>Multiple Arguments: Each argument is paired with a label in the selector, and each label ends with a colon.\n\n<ul>  \n<li>[recievingObject methodName:argument1 sameMethod:argument2]</li>  \n<li>For every pair of square brackets, there is only one message being sent. Even if it has two labels, it is still only one message, and sending that message results in <strong>only one method being executed</strong>.</li>  \n</ul></li>  \n<li>A <strong>method</strong> is a chunk of code that can be executed, and a <strong>message</strong> is the act of asking a class or object to execute a method.</li>  \n</ul>\n\n<h4>Destroying Objcts</h4>\n\n<ul>  \n<li>Objects can be destroyed by setting their pointer to <strong>nil</strong>.\n\n<ul>  \n<li>classIntance = nil;</li>  \n</ul></li>  \n<li>A pointer with the value &#8220;nil&#8221; is used to represent the absence of an object.</li>  \n</ul>\n\n<h4>Creating Strings</h4>\n\n<ul>  \n<li>When you want a hard-coded string, you prefix a character string with an @ symbol. This creates an instance of NSString that holds the character string.</li>  \n<li><strong>Format Strings</strong>: NSLog takes variable number of arguments:\n\n<ul>  \n<li>The first argument <strong>must</strong> be an NSString <em>format string</em>, followed by arguments that refer to the tokens.</li>  \n<li>%d: double</li>  \n<li>%f: float</li>  \n<li>%c: char</li>  \n<li><strong>%@</strong>: Any object\n\n<ul>  \n<li>When %@ is encountered in the format string, instead of the token being replaced by the corresponding argument, that argument is sent the message <em>description</em>. The description method returns an NSString that replaces the token. Because the argument is sent a message, that argument must be an object.</li>  \n</ul></li>  \n</ul></li>  \n</ul>\n\n<h4>NSArray and NSMutableArray</h4>\n\n<ul>  \n<li>An array is an <strong>ordered</strong> list of objects, which can be accessed using an <strong>index</strong>.</li>  \n<li>an NSArray is <strong>immutable</strong>, that is nothing can be added/removed once the array has been initialized.</li>  \n<li><strong>NSMutableArray</strong>, a subclass of NSArray, allows edits.</li>  \n<li>An array does not actually contain the objects that belong to it; instead it holds a pointer to each object. So array can only hold references to Obj-C objects and can have different types of objects.\n\n<ul>  \n<li>An array or any other object does hold <strong>static variables</strong> like <em>int</em>, etc in their heap.</li>  \n</ul></li>  \n<li><strong>count</strong>: Message to enqire an array of the number of objects it is storing.</li>  \n<li><strong>NSNull</strong>: You cannot add nil to an array. If you need to add “holes” to an array, you must use NSNull. NSNull is an object that represents nil and is used specifically for this task.\n\n<ul>  \n<li>[array addObject:[NSNull null]];</li>  \n</ul></li>  \n<li><strong>objectAtIndex:</strong>- Used to retrieve object-pointers at specific indices.\n\n<ul>  \n<li>NSString *objectName = [array objectAtIndex:0]</li>  \n</ul></li>  \n</ul>\n\n<h4>Subclasses</h4>\n\n<ul>  \n<li>Every class in Obj-C has exactly one superclass.</li>  \n<li><strong>Root Class: NSObject</strong>. Every object inherits 3 methods from NSObject:\n\n<ul>  \n<li>alloc</li>  \n<li>init</li>  \n<li>description</li>  \n</ul></li>  \n<li>A subclass adds methods and instance variables to extend the behavior of its superclass.</li>  \n<li>A subclass can also overide the methods of its superclass.\n\n<ul>  \n<li>Subclasses override the default behavior of description method, which is to return the name of the object&#8217;s class and its address in memory. They make description supply more relevant information about their instances.\n\n<ul>  \n<li>NSString returns the string itself</li>  \n<li>NSArray returns the description of every object in the instance as a string.</li>  \n</ul></li>  \n</ul></li>  \n<li><strong>Header File</strong>: (.h) Starts with <strong>@interface</strong> Classnae and superclass name</li>  \n<li>@interface ClassName : SuperClassName</li>  \n<li>Used to declare\n\n<ul>  \n<li>The name of the new class</li>  \n<li>Its superclass</li>  \n<li>Instance variables</li>  \n<li>Methods</li>  \n</ul></li>  \n<li><strong>Implementation File</strong>: (.m) Contains the code for the methods of the class.\n\n<ul>  \n<li>At the top, the associated headr file is imported</li>  \n<li><strong>#import &#8220;ClassName.h&#8221;</strong></li>  \n</ul></li>  \n<li>Objective-C retains all the keywords of the C language, and additional <strong>keywords specific to Objective-C are distinguishable by the @ prefix</strong>.</li>  \n<li>To declare a class in Objective-C,\n\n<ul>  \n<li>Use the keyword <strong>@interface</strong> followed by the name of this new class. After a colon comes the name of the superclass.</li>  \n<li>@interface NewClass: SuperClass</li>  \n<li>The @end directive indicates that the class has been fully declared.</li>  \n</ul></li>  \n<li><strong>Instance Variables</strong>\n\n<ul>  \n<li>Declared inside of curly braces immediately after class declaration</li>  \n<li>Non-pointer instance variables are stored inside the object itself.</li>  \n</ul></li>  \n</ul>\n\n<h4>Accessor Methods:</h4>\n\n<ul>  \n<li>Accessor methods are needed to interact with instance variables in messages.</li>  \n<li>Methods that <strong>set and get</strong> instance variables are called Accessor Methods.\n\n<ul>  \n<li><strong>Setters</strong></li>  \n<li><strong>Getters</strong></li>  \n</ul></li>  \n<li>The name of a setter method is set plus the name of the instance variable it is changing.</li>  \n<li>The name of the getter method is just the name of the instance variable.</li>  \n<li>Impleemting Accessors:\n\n<ul>  \n<li>In the implementation file, the header file is imported.</li>  \n<li>Implementation block begins with <strong>@implementation</strong> keyword followed by the name of the class that is being implemented.</li>  \n<li>All of the method definitions in the implementation file are inside the implementation block, terminated by the @end keyword.</li>  \n<li>The setter methods assign the appropriate instance variable to point at the incoming object.</li>  \n<li>The getter methods return a pointer to the object the instance variable points at.</li>  \n</ul></li>  \n<li>-(void) setInstanceVarName: (NSString *) name { instanceVarName = name; }</li>  \n<li>-(NSString *) instanceVarName { return instanceVarName; }</li>  \n</ul>\n\n<h4>Instance Methods</h4>\n\n<ul>  \n<li>When a method is overidden, it doesn&#8217;t need to be declared in the header file as it&#8217;s imported with the superclass.\n\n<ul>  \n<li>To override a method, just implement it in the implemenation file.</li>  \n</ul></li>  \n<li>Remember, an NSLog with %@ as the token will print the description of the corresponding argument\n\n<ul>  \n<li>NSLog(@&#8220;%@&#8221;, objectName);</li>  \n<li>A string could be declared using just the @ keyword\n\n<ul>  \n<li>[p setSerialNumber:@&#8220;A1B2C&#8221;];</li>  \n</ul></li>  \n</ul></li>  \n</ul>\n\n<h4>Initializers</h4>\n\n<ul>  \n<li><strong>alloc</strong>: Allocates memeory and creates an instance(object), returning it&#8217;s pointer.</li>  \n<li><strong>init</strong>: Gives instance varaibles their initial values.</li>  \n<li><strong>Initializers</strong>: Initialization methods that take arguments to initialize their objects&#8217; instance vars.</li>  \n<li><p><strong>Each initializer name, conventionally, begins with the word <em>init</em>.</strong></p>\n\n<h5>Designated Initializer:</h5></li>  \n<li>An initializer method, of the multiple ones which a class can have, that makes sure every instance var of an object is valid.</li>  \n<li>Designated initializers have parameters for the most important and frequently used instance vars of a class.</li>  \n<li><ul>  \n<li>(id) initWithItemName: (NSString *)name valueInDollars: (int) value serialNumber: (NSString *)sNumber;</li>  \n</ul>\n\n<ul>  \n<li>Name of the method (Selector): initWithItemName:valueInDollars:serialNumber</li>  \n<li>Labels of the selector: initWithItemName, valueInDollars, serialNumber</li>  \n<li>three parameters : name, value, sNumber.</li>  \n</ul></li>  \n<li><strong>- (id)</strong> : The return type <em>id</em> is a <strong>POINTER to any object</strong>. Returns a pointer to the appropriate object.\n\n<ul>  \n<li><strong>init</strong> methods are always declared to return id.</li>  \n</ul></li>  \n<li><strong>isa pointer</strong>: Stores the class of the bobject, thus making it aware of what\n\n<ul>  \n<li>Every object (class instance) has the <em>isa</em> instance var.</li>  \n<li>When an instance is created by sending a class the <em>[alloc]</em> message, the class sets the <em>isa</em> var of the onstance(object) to point back to the class.</li>  \n</ul></li>  \n<li><strong>Implementing the designated initializer</strong>:\n\n<ul>  \n<li>First thing: Call the superclass&#8217;s designated initializer using <em>super</em>.</li>  \n<li>Last thing: Return a pointer to the successfully initialied object using <em>self</em>.</li>  \n</ul></li>  \n<li><strong>self</strong>: Self is an <strong>implicit local var</strong>.\n\n<ul>  \n<li>It doesn&#8217;t need declaration</li>  \n<li>It&#8217;s automatically pointed to <em>the object that was sent the message</em>.\n\n<ul>  \n<li>[self methodName]; //self points to the object within which it was sent the message.</li>  \n</ul></li>  \n<li>It&#8217;s used so that <em>an object can send a message to itself</em>.</li>  \n</ul></li>  \n<li><strong>super</strong>: A compiler directive in Obj-C\n\n<ul>  \n<li>Usually when you send a message to an object, the search for a method of that name starts in the object’s class. If there is no such method, the search continues in the superclass of the object. The search will continue up the inheritance hierarchy until a suitable method is found. (If it gets to the top of the hierarchy and no method is found, an exception is thrown.)</li>  \n<li>When you send a message to <em>super</em>, you are sending a message to self, but <strong>the search for the method skips the object’s class and starts at the superclass.</strong></li>  \n</ul></li>  \n<li>Check with <em>if (self) { }</em> that the superclass&#8217; initializer succeeded.</li>  \n<li>Rules about initializers:\n\n<ul>  \n<li>A class inherits all initializers from its superclass and can add as many as it wants for its own purposes.</li>  \n<li>Each class picks one initializer as its designated initializer.</li>  \n<li>The designated initializer calls the superclass’s designated initializer.\n\n<ul>  \n<li>self = [super init]</li>  \n</ul></li>  \n<li>Any other initializer a class has calls the class’s designated initializer.</li>  \n<li><strong>If a class declares a designated initializer that is different from its superclass, the superclass’s designated initializer must be overridden to call the new designated initializer.</strong></li>  \n</ul></li>  \n</ul>\n\n<h4>Class Methods</h4>\n\n<ul>  \n<li>There are 2 kinds of methods:\n\n<ul>  \n<li><strong>Classs methods</strong>: are sent to classes, like <em>alloc</em></li>  \n<li><strong>Instance Methods</strong>: are sent to class instances (objects), like <em>init</em></li>  \n</ul></li>  \n<li>Class methods typically either <strong>create new instances of the class</strong> or <strong>retrieve some global property of the class</strong>.</li>  \n<li>Class methods do not operate on an instance or have any access to instance vars.</li>  \n<li><strong>An instance method uses the - character just before the return type, and a class method uses the + character.</strong></li>  \n<li>The order of the declarations for the methods:\n\n<ul>  \n<li><strong>Class methods</strong></li>  \n<li><strong>Initializers</strong></li>  \n<li><strong>other methods</strong></li>  \n</ul></li>  \n<li>rand() % [arrayName count] // would generate random indices for the array.</li>  \n<li><strong>NSInteger</strong> is not a class or object but a type definition for <strong>long</strong>.\n\n<ul>  \n<li>NSInteger vs int: <a href='http://stackoverflow.com/questions/4445173/when-to-use-nsinteger-vs-int'>http://stackoverflow.com/questions/4445173/when-to-use-nsinteger-vs-int</a></li>  \n</ul></li>  \n<li><strong>Generaring random chars</strong>:\n\n<ul>  \n<li>&#8216;0&#8217; + rand() % 10 //generates numbers as chars</li>  \n<li>&#8216;A&#8217; + rand() % 26, //generates alphabet as chars</li>  \n</ul></li>  \n<li><strong>Convenience methods</strong>: Class methods which return an object of the type of the class itself.\n\n<ul>  \n<li><em>self</em> used in class methods refers to the class itself instead of an instance.</li>  \n<li>Convinience methods should use <em>self</em> instead of the Class name to allow reuse in subclasses.</li>  \n</ul></li>  \n</ul>\n\n<h4>Exceptions and Unrecognized Selectors</h4>\n\n<ul>  \n<li>When a message is sent to an object that doesn&#8217;t respond to the message, the application will throw an <strong>exception</strong>.</li>  \n<li><strong>Exceptions</strong> are also known as <strong>run-time errors</strong> because they occur once your application is running</li>  \n<li><strong>Compile-time errors</strong> show up when your application is being built, or compiled.</li>  \n</ul>\n\n<h4>Fast Enumeration</h4>\n\n<pre><code>for (BNRItem *item in items)\n    {\n    NSLog(@&quot;%@&quot;, item);\n    }\n</code></pre>\n\n<h4>More</h4>\n\n<ul>  \n<li><strong>Namespace collision</strong>: Error when two classes have the smae name.</li>  \n</ul>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1365515675000,"created_by":1,"updated_at":1365517960000,"updated_by":1,"published_at":1365515675000,"published_by":1},{"id":13,"uuid":"69e4ded6-361a-428f-8a23-2eb409be19c4","title":"ARC","slug":"chapter-3-arc","markdown":"<h4>The Heap</h4>\r\n\r\n<ul>\r\n<li><strong>The Heap</strong>: All Obj-C objects are stored in a <em>part of memory</em> called the heap.\r\n\r\n<ul>\r\n<li><em>alloc</em> allocates space in the heap to store instance vars.</li>\r\n</ul></li>\r\n<li><strong>NSDate</strong>: Has 2 instance vars <strong>12 bytes</strong>:\r\n\r\n<ul>\r\n<li><em>isa</em>: stores a pointer to the class of the NSDate instance. <strong>4 bytes</strong></li>\r\n<li><em>double</em>: Stores the numer of seconds elapsed since initialization. <strong>8 bytes</strong></li>\r\n</ul></li>\r\n<li>Pointers are 4 bytes.</li>\r\n<li>Objects never live inside one another; they exist separately on the heap. Instead, objects keep references to other objects as needed.</li>\r\n</ul>\r\n\r\n<h4>The Stack</h4>\r\n\r\n<ul>\r\n<li><strong>Frame</strong>: When a method or function is executed, it allocates a chunk of memory from the stack. That chunk is called a frame.\r\n\r\n<ul>\r\n<li>It <strong>stores the values for vars declared inside the method</strong>.</li>\r\n<li>A var declared inside a method is called a <strong>local variable</strong>.</li>\r\n<li>when a method calls another menthod, a frame is created for the target method, <strong><em>stacked</em></strong> on top on the original method.</li>\r\n</ul></li>\r\n</ul>\r\n\r\n<h4>Pointer Variables and Object Ownership</h4>\r\n\r\n<ul>\r\n<li>Pointer vars convey <strong>ownership</strong>\r\n\r\n<ul>\r\n<li>When a method (or function) has a local variable that points to an object, that method is said to own the object being pointed to.</li>\r\n<li>When an object has an instance variable that points to another object, the object with the pointer is said to own the object being pointed to.</li>\r\n</ul></li>\r\n</ul>\r\n\r\n<h4>Memory Management</h4>\r\n\r\n<ul>\r\n<li>Heap memeory is limited. Hence, unused objects must be destroyed and the heap must be freed for other runtime objects.\r\n\r\n<ul>\r\n<li><strong>Memeory Leak</strong>: An object that has <strong><em>no owners</em></strong> cannot be sent messages to and hence, is useless. It should be destroyed.</li>\r\n<li><strong>Premature Dellocation</strong>: If an object with atleast one owner is destroyed, when the owner sends a message to the non-existent object, the app will crash.</li>\r\n</ul></li>\r\n</ul>\r\n\r\n<h4>ARC</h4>\r\n\r\n<ul>\r\n<li><strong>ARC</strong> = <strong>A</strong>utomatic <strong>R</strong>eference <strong>C</strong>ounting.</li>\r\n<li>Destroys objects without owners. Which can happen when:\r\n\r\n<ul>\r\n<li>A var that pointed to the object now points to another object</li>\r\n<li>The var is ser to <em>nil</em> (whi stands for the absence of an object)</li>\r\n<li>The var itself is destroyed.</li>\r\n</ul></li>\r\n</ul>\r\n\r\n<h4>Strong and Weak References</h4>\r\n\r\n<ul>\r\n<li>When a var points to an object, whether as an instance var or a local var within a method/function, it&#8217;s called an <strong>strong reference</strong>.</li>\r\n<li>A var that <strong>does not take ownership of the object it points to</strong> is said to <strong>weak reference</strong> the object.</li>\r\n<li><strong>Retain Cycle</strong>: When two or more objects own eachother, they will never be destroyed and will be retained in the heap even when every other object releases its ownership of these objects.\r\n\r\n<ul>\r\n<li>A retain cycle is a memory leak that cannot be managed by ARC.</li>\r\n<li><a href=\"https://dl.dropbox.com/u/3698938/Screen%20Shot%202013-03-26%20at%2011.08.25%20AM.png\">Retain Cycle</a></li>\r\n</ul></li>\r\n<li>To address a retain cycle, one of the pointers between the objects has to be a <em>weak reference</em>.\r\n\r\n<ul>\r\n<li>To decide between the pointers, construct a parent-child relationship between the objects.</li>\r\n<li>The parent has a strong reference to the child, while the child has a weak refernce for the parent.</li>\r\n</ul></li>\r\n<li>To declare a variable as a weak reference, use the <strong>__weak</strong> <em>attribute</em> in the declaration of the var in the header file.\r\n\r\n<ul>\r\n<li>__weak BNRItem *container;</li>\r\n</ul></li>\r\n<li>Weak references know when the object they reference to are destroyed and automatically set the pointer to <em>nil</em>.</li>\r\n<li><strong>__unsafe_unretained</strong> attribute: Creates weak references without the ability of setting pointers to destroyed objects to <em>nil</em>.</li>\r\n</ul>\r\n\r\n<h4>Properties</h4>\r\n\r\n<ul>\r\n<li>Properties are concise alternatives to accessor methods.</li>\r\n<li>A property is declared in the interface of a class (.h).</li>\r\n<li>*<strong>@property NSString <em>itemName;</em></strong> is equivalent to:\r\n\r\n<ul>\r\n<li>*-(void) setItemName: (NSString <em>) str;</em></li>\r\n<li>*(NSString <em>) itemName;</em></li>\r\n</ul></li>\r\n<li>When a property is declared, it implicitly declares the corresponding setter and getter methods.</li>\r\n</ul>\r\n\r\n<h5>Attributes</h5>\r\n\r\n<ul>\r\n<li><strong>Attributes</strong> are used in property declarations to alter the behavior of accessor methods.</li>\r\n<li>The attributes are declared in parentheses after the @property directive.\r\n\r\n<ul>\r\n<li>@property (nonatomic, readwrite, strong) NSString *itemName;</li>\r\n</ul></li>\r\n<li>There are <strong>three attributes</strong> with each having 2/3 options.</li>\r\n<li><strong>First Attribute</strong>: Concerns itself with multithreaded applications. Has 2 options\r\n\r\n<ul>\r\n<li><strong>atomic</strong>: <strong>Default</strong>.</li>\r\n<li><strong>nonatomic</strong>: Most often used. <strong>NOT the default</strong>, so have to explicitly declare everytime.</li>\r\n</ul></li>\r\n<li><strong>Second Attribute</strong>: For deciding whether both the accessor methods are needed or just the getter.</li>\r\n<li><strong>readwrite</strong>: <strong><em>Default</em></strong> Declares both, the setter and the getter, mothods.\r\n\r\n<ul>\r\n<li><strong>readonly</strong>: Declares only the getter method. So, when only a getter method is needed, like with NSDate, etc., the second property is declared &#8220;readonly&#8221;.</li>\r\n</ul></li>\r\n<li><strong>Third Attribute</strong>: Describes <strong>memeory management</strong>.\r\n\r\n<ul>\r\n<li><strong>assign</strong>: <strong><em>default</em></strong>, used for properties which are not pointers but int, double, etc.</li>\r\n<li><strong>strong</strong>: Creates a strong reference to the objec the pointer points to.</li>\r\n<li><strong>weak</strong>: Creates a weak reference to the object the pointer points to.</li>\r\n</ul></li>\r\n</ul>\r\n\r\n<h4>Synthesizing properties</h4>\r\n\r\n<ul>\r\n<li>Properties can be synthesized in the <em>implementation</em> file to generate the code for accessor methods.</li>\r\n<li><strong>@synthesize</strong> directive is used to synthesize the properties in the implementation files.</li>\r\n<li>Any implementation added after synthesizing a property, overrides the synthesized version.</li>\r\n<li><strong>If no instance vars are declared, synthesizing the property will create vars of the same name. Thus, declaring instance vars is redundant.</strong></li>\r\n</ul>","html":"<h4>The Heap</h4>\n\n<ul>  \n<li><strong>The Heap</strong>: All Obj-C objects are stored in a <em>part of memory</em> called the heap.\n\n<ul>  \n<li><em>alloc</em> allocates space in the heap to store instance vars.</li>  \n</ul></li>  \n<li><strong>NSDate</strong>: Has 2 instance vars <strong>12 bytes</strong>:\n\n<ul>  \n<li><em>isa</em>: stores a pointer to the class of the NSDate instance. <strong>4 bytes</strong></li>  \n<li><em>double</em>: Stores the numer of seconds elapsed since initialization. <strong>8 bytes</strong></li>  \n</ul></li>  \n<li>Pointers are 4 bytes.</li>  \n<li>Objects never live inside one another; they exist separately on the heap. Instead, objects keep references to other objects as needed.</li>  \n</ul>\n\n<h4>The Stack</h4>\n\n<ul>  \n<li><strong>Frame</strong>: When a method or function is executed, it allocates a chunk of memory from the stack. That chunk is called a frame.\n\n<ul>  \n<li>It <strong>stores the values for vars declared inside the method</strong>.</li>  \n<li>A var declared inside a method is called a <strong>local variable</strong>.</li>  \n<li>when a method calls another menthod, a frame is created for the target method, <strong><em>stacked</em></strong> on top on the original method.</li>  \n</ul></li>  \n</ul>\n\n<h4>Pointer Variables and Object Ownership</h4>\n\n<ul>  \n<li>Pointer vars convey <strong>ownership</strong>\n\n<ul>  \n<li>When a method (or function) has a local variable that points to an object, that method is said to own the object being pointed to.</li>  \n<li>When an object has an instance variable that points to another object, the object with the pointer is said to own the object being pointed to.</li>  \n</ul></li>  \n</ul>\n\n<h4>Memory Management</h4>\n\n<ul>  \n<li>Heap memeory is limited. Hence, unused objects must be destroyed and the heap must be freed for other runtime objects.\n\n<ul>  \n<li><strong>Memeory Leak</strong>: An object that has <strong><em>no owners</em></strong> cannot be sent messages to and hence, is useless. It should be destroyed.</li>  \n<li><strong>Premature Dellocation</strong>: If an object with atleast one owner is destroyed, when the owner sends a message to the non-existent object, the app will crash.</li>  \n</ul></li>  \n</ul>\n\n<h4>ARC</h4>\n\n<ul>  \n<li><strong>ARC</strong> = <strong>A</strong>utomatic <strong>R</strong>eference <strong>C</strong>ounting.</li>  \n<li>Destroys objects without owners. Which can happen when:\n\n<ul>  \n<li>A var that pointed to the object now points to another object</li>  \n<li>The var is ser to <em>nil</em> (whi stands for the absence of an object)</li>  \n<li>The var itself is destroyed.</li>  \n</ul></li>  \n</ul>\n\n<h4>Strong and Weak References</h4>\n\n<ul>  \n<li>When a var points to an object, whether as an instance var or a local var within a method/function, it&#8217;s called an <strong>strong reference</strong>.</li>  \n<li>A var that <strong>does not take ownership of the object it points to</strong> is said to <strong>weak reference</strong> the object.</li>  \n<li><strong>Retain Cycle</strong>: When two or more objects own eachother, they will never be destroyed and will be retained in the heap even when every other object releases its ownership of these objects.\n\n<ul>  \n<li>A retain cycle is a memory leak that cannot be managed by ARC.</li>  \n<li><a href=\"https://dl.dropbox.com/u/3698938/Screen%20Shot%202013-03-26%20at%2011.08.25%20AM.png\">Retain Cycle</a></li>  \n</ul></li>  \n<li>To address a retain cycle, one of the pointers between the objects has to be a <em>weak reference</em>.\n\n<ul>  \n<li>To decide between the pointers, construct a parent-child relationship between the objects.</li>  \n<li>The parent has a strong reference to the child, while the child has a weak refernce for the parent.</li>  \n</ul></li>  \n<li>To declare a variable as a weak reference, use the <strong>__weak</strong> <em>attribute</em> in the declaration of the var in the header file.\n\n<ul>  \n<li>__weak BNRItem *container;</li>  \n</ul></li>  \n<li>Weak references know when the object they reference to are destroyed and automatically set the pointer to <em>nil</em>.</li>  \n<li><strong>__unsafe_unretained</strong> attribute: Creates weak references without the ability of setting pointers to destroyed objects to <em>nil</em>.</li>  \n</ul>\n\n<h4>Properties</h4>\n\n<ul>  \n<li>Properties are concise alternatives to accessor methods.</li>  \n<li>A property is declared in the interface of a class (.h).</li>  \n<li>*<strong>@property NSString <em>itemName;</em></strong> is equivalent to:\n\n<ul>  \n<li>*-(void) setItemName: (NSString <em>) str;</em></li>  \n<li>*(NSString <em>) itemName;</em></li>  \n</ul></li>  \n<li>When a property is declared, it implicitly declares the corresponding setter and getter methods.</li>  \n</ul>\n\n<h5>Attributes</h5>\n\n<ul>  \n<li><strong>Attributes</strong> are used in property declarations to alter the behavior of accessor methods.</li>  \n<li>The attributes are declared in parentheses after the @property directive.\n\n<ul>  \n<li>@property (nonatomic, readwrite, strong) NSString *itemName;</li>  \n</ul></li>  \n<li>There are <strong>three attributes</strong> with each having 2/3 options.</li>  \n<li><strong>First Attribute</strong>: Concerns itself with multithreaded applications. Has 2 options\n\n<ul>  \n<li><strong>atomic</strong>: <strong>Default</strong>.</li>  \n<li><strong>nonatomic</strong>: Most often used. <strong>NOT the default</strong>, so have to explicitly declare everytime.</li>  \n</ul></li>  \n<li><strong>Second Attribute</strong>: For deciding whether both the accessor methods are needed or just the getter.</li>  \n<li><strong>readwrite</strong>: <strong><em>Default</em></strong> Declares both, the setter and the getter, mothods.\n\n<ul>  \n<li><strong>readonly</strong>: Declares only the getter method. So, when only a getter method is needed, like with NSDate, etc., the second property is declared &#8220;readonly&#8221;.</li>  \n</ul></li>  \n<li><strong>Third Attribute</strong>: Describes <strong>memeory management</strong>.\n\n<ul>  \n<li><strong>assign</strong>: <strong><em>default</em></strong>, used for properties which are not pointers but int, double, etc.</li>  \n<li><strong>strong</strong>: Creates a strong reference to the objec the pointer points to.</li>  \n<li><strong>weak</strong>: Creates a weak reference to the object the pointer points to.</li>  \n</ul></li>  \n</ul>\n\n<h4>Synthesizing properties</h4>\n\n<ul>  \n<li>Properties can be synthesized in the <em>implementation</em> file to generate the code for accessor methods.</li>  \n<li><strong>@synthesize</strong> directive is used to synthesize the properties in the implementation files.</li>  \n<li>Any implementation added after synthesizing a property, overrides the synthesized version.</li>  \n<li><strong>If no instance vars are declared, synthesizing the property will create vars of the same name. Thus, declaring instance vars is redundant.</strong></li>  \n</ul>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1365515725000,"created_by":1,"updated_at":1365516303000,"updated_by":1,"published_at":1365515725000,"published_by":1},{"id":14,"uuid":"47ca81e1-58f5-46bb-bd10-c9ff6e1e4e01","title":"MapKit","slug":"chapter-5-mapkit","markdown":"<h4>MapKit Framework</h4>\r\n\r\n<ul>\r\n<li>The MapKit framework is responsible for the UI and interactions of the map.</li>\r\n<li>Instances of <code>MKMapView</code> display a map, track touches and display annotations.</li>\r\n<li><strong>IBOutlet</strong> means you will create objects in a XIB file.</li>\r\n</ul>\r\n\r\n<h4>MapView Delegate</h4>\r\n\r\n<ul>\r\n<li><code>MKMapView</code>&#8217;s instances know how to use Core Location to determine user&#8217;s location.\r\n\r\n<ul>\r\n<li>Set <code>showsUserLocation</code> property of <code>MKMapView</code> to <code>YES</code></li>\r\n</ul></li>\r\n<li><p>After the interface is loaded, the ViewController is sent the message <code>viewDidLoad</code>, following which, <code>MKMapView</code> can be asked to update its location.</p>\r\n\r\n<pre><code>-(void) viewDidLoad\r\n{\r\n  [worldView setShowsUserLocation:YES];\r\n}\r\n</code></pre></li>\r\n</ul>\r\n\r\n<h4>Documentation</h4>\r\n\r\n<ul>\r\n<li>The documentation is divided into 4 parts:\r\n\r\n<ul>\r\n<li>API Reference</li>\r\n<li>System guides</li>\r\n<li>Tools Guides</li>\r\n<li>Sample Code</li>\r\n</ul></li>\r\n<li><p>In the <code>mapView:didUpdateUserLocation:</code> method, a pointer to an <code>MKUserLocation</code> instance is available.</p>\r\n\r\n<h5>Zooming In</h5></li>\r\n<li><code>MKMapView</code> has a <code>region</code> property that zooms in on the coordinates supplied: <code>setRegion:animated</code>.\r\n\r\n<ul>\r\n<li><code>region</code> is an <code>MKCoordinateRegion</code> <strong>structure</strong> holding:\r\n\r\n<ul>\r\n<li><code>CLLocationCoordinate2D</code></li>\r\n<li><code>MKCoordinateSpan</code></li>\r\n</ul></li>\r\n<li>The function <code>MKCoordinateRegionMakeWithDistance ();</code> takes in <code>CLLocationCoordinate2D</code> and 2 <code>CLLocationDistance</code> distances (m) to set the region.</li>\r\n<li>To find the coordinates, we use <code>MKUserLocation</code> returned by <code>mapView:didUpdateUserLocation:</code>.\r\n\r\n<ul>\r\n<li><code>MKUserLocation</code> has a <code>location</code> property that returns <code>CLLocation</code>.</li>\r\n<li><code>CLLocation</code> has a <code>coordinate</code> property that returns an <code>CLLocationCoordinate2D</code>.\r\n\r\n<ul>\r\n<li>So, to get coordinates and set a <code>region</code>:\r\n~~~\r\n-(void) mapView:(MKMapView *)mapView didUpdateUserLocation:(MKUserLocation *)userLocation\r\n{\r\nCLLocation loc = [userLocation location];\r\nCLLocationCoordinate2D coordinates =[loc coordinate];\r\n}\r\n~~~\r\n~~~\r\nMKCoordinateRegion MKCoordinateRegionMakeWithDistance(coordinates, 250, 250);\r\n~~~</li>\r\n</ul></li>\r\n</ul></li>\r\n</ul></li>\r\n<li><strong>Alternatively</strong>\r\n\r\n<ul>\r\n<li><code>MKUserLocation</code> conforms to the <code>MKAnnotation</code> protocol.</li>\r\n<li><code>MKAnnotation</code> declares a <code>coordinate</code> property that returns a <code>CLLocationCoordinate2d</code> structure, which can be used directly in `MKCoordinateRegionMakeWithDistance&#8217; function. Like:\r\n~~~\r\n-(void) mapView:(MKMapView *)mapView didUpdateUserLocation:(MKUserLocation *)userLocation\r\n{\r\nCLLocationCoordinate2D coordinates = [userLocation coordinate];\r\nMKCoordinateRegion MKCoordinateRegionMakeWithDistance (coordinates, 250, 250);\r\n[worldView setRegion:region animated:YES];\r\n}\r\n~~~</li>\r\n</ul></li>\r\n</ul>\r\n\r\n<h4>MKNotation</h4>\r\n\r\n<ul>\r\n<li><code>MKNotation</code> is not a delegate protocol.</li>\r\n<li><strong>It declares a set of methods that are useful to any class that wants to display instances of itself on a map view.</strong></li>\r\n<li>When an object conforming to <code>MKAnnotation</code> is added to an <code>MKMapView</code>, an instance of <code>MKAnnotationView</code> (or one of its subclasses) is created and added to the map view.</li>\r\n<li>The <code>MKAnnotation</code> protocol, like all protocols, <strong>only dictates method signatures</strong>. As long as the signatures match exactly, the conforming class can implement them however it wants.</li>\r\n</ul>\r\n\r\n<h4>Text Editing</h4>\r\n\r\n<ul>\r\n<li><code>UIResponder</code> is a class in the <code>UIKit</code> framework.</li>\r\n<li>A <strong>responder</strong> is responsible for receiving and handling events that are associated with it.</li>\r\n<li><code>UIView</code> is a subclass of UIResponder and can receive events.</li>\r\n<li><strong>First Responder</strong> handles events which are not associated with a position on the screen. Like shakes.</li>\r\n<li><code>UITextField</code> is a responder.\r\n\r\n<ul>\r\n<li>When a <code>UITextfield</code> is tapped, it becomes the first responder.</li>\r\n<li>As long as the text field is the first responder, a keyboard stays on the screen.</li>\r\n<li>When a <code>resignFirstResponder</code> message is sent to it, it gives up its first responder status and the keyboard goes away.</li>\r\n</ul></li>\r\n<li>Note that <strong>when importing files, you put quotation marks around header files</strong> you create and <strong>angled brackets around header files from frameworks</strong>.\r\n\r\n<ul>\r\n<li><p>Angled brackets tell the compiler, “Only look in the system libraries for this file.”</p></li>\r\n<li><p>Quotation marks say, “Look in the directory for this project first, and if you don’t find something, then look in the system libraries.”</p></li>\r\n</ul>\r\n*</li>\r\n</ul>\r\n","html":"<h4>MapKit Framework</h4>\n\n<ul>  \n<li>The MapKit framework is responsible for the UI and interactions of the map.</li>  \n<li>Instances of <code>MKMapView</code> display a map, track touches and display annotations.</li>  \n<li><strong>IBOutlet</strong> means you will create objects in a XIB file.</li>  \n</ul>\n\n<h4>MapView Delegate</h4>\n\n<ul>  \n<li><code>MKMapView</code>&#8217;s instances know how to use Core Location to determine user&#8217;s location.\n\n<ul>  \n<li>Set <code>showsUserLocation</code> property of <code>MKMapView</code> to <code>YES</code></li>  \n</ul></li>  \n<li><p>After the interface is loaded, the ViewController is sent the message <code>viewDidLoad</code>, following which, <code>MKMapView</code> can be asked to update its location.</p>\n\n\n\n<pre><code>-(void) viewDidLoad\n{\n  [worldView setShowsUserLocation:YES];\n}\n</code></pre></li>\n</ul>\n\n<h4>Documentation</h4>\n\n<ul>  \n<li>The documentation is divided into 4 parts:\n\n<ul>  \n<li>API Reference</li>  \n<li>System guides</li>  \n<li>Tools Guides</li>  \n<li>Sample Code</li>  \n</ul></li>  \n<li><p>In the <code>mapView:didUpdateUserLocation:</code> method, a pointer to an <code>MKUserLocation</code> instance is available.</p>\n\n<h5>Zooming In</h5></li>  \n<li><code>MKMapView</code> has a <code>region</code> property that zooms in on the coordinates supplied: <code>setRegion:animated</code>.\n\n<ul>  \n<li><code>region</code> is an <code>MKCoordinateRegion</code> <strong>structure</strong> holding:\n\n<ul>  \n<li><code>CLLocationCoordinate2D</code></li>  \n<li><code>MKCoordinateSpan</code></li>  \n</ul></li>  \n<li>The function <code>MKCoordinateRegionMakeWithDistance ();</code> takes in <code>CLLocationCoordinate2D</code> and 2 <code>CLLocationDistance</code> distances (m) to set the region.</li>  \n<li>To find the coordinates, we use <code>MKUserLocation</code> returned by <code>mapView:didUpdateUserLocation:</code>.\n\n<ul>  \n<li><code>MKUserLocation</code> has a <code>location</code> property that returns <code>CLLocation</code>.</li>  \n<li><code>CLLocation</code> has a <code>coordinate</code> property that returns an <code>CLLocationCoordinate2D</code>.\n\n<ul>  \n<li>So, to get coordinates and set a <code>region</code>:  \n~<del>\n-(void) mapView:(MKMapView *)mapView didUpdateUserLocation:(MKUserLocation *)userLocation\n{\nCLLocation loc = [userLocation location];  \nCLLocationCoordinate2D coordinates =[loc coordinate];  \n}\n</del>~  \n~<del>\nMKCoordinateRegion MKCoordinateRegionMakeWithDistance(coordinates, 250, 250);  \n</del>~</li>  \n</ul></li>  \n</ul></li>  \n</ul></li>  \n<li><strong>Alternatively</strong>\n\n<ul>  \n<li><code>MKUserLocation</code> conforms to the <code>MKAnnotation</code> protocol.</li>  \n<li><code>MKAnnotation</code> declares a <code>coordinate</code> property that returns a <code>CLLocationCoordinate2d</code> structure, which can be used directly in `MKCoordinateRegionMakeWithDistance&#8217; function. Like:  \n~<del>\n-(void) mapView:(MKMapView *)mapView didUpdateUserLocation:(MKUserLocation *)userLocation\n{\nCLLocationCoordinate2D coordinates = [userLocation coordinate];  \nMKCoordinateRegion MKCoordinateRegionMakeWithDistance (coordinates, 250, 250);  \n[worldView setRegion:region animated:YES];\n}\n</del>~</li>  \n</ul></li>  \n</ul>\n\n<h4>MKNotation</h4>\n\n<ul>  \n<li><code>MKNotation</code> is not a delegate protocol.</li>  \n<li><strong>It declares a set of methods that are useful to any class that wants to display instances of itself on a map view.</strong></li>  \n<li>When an object conforming to <code>MKAnnotation</code> is added to an <code>MKMapView</code>, an instance of <code>MKAnnotationView</code> (or one of its subclasses) is created and added to the map view.</li>  \n<li>The <code>MKAnnotation</code> protocol, like all protocols, <strong>only dictates method signatures</strong>. As long as the signatures match exactly, the conforming class can implement them however it wants.</li>  \n</ul>\n\n<h4>Text Editing</h4>\n\n<ul>  \n<li><code>UIResponder</code> is a class in the <code>UIKit</code> framework.</li>  \n<li>A <strong>responder</strong> is responsible for receiving and handling events that are associated with it.</li>  \n<li><code>UIView</code> is a subclass of UIResponder and can receive events.</li>  \n<li><strong>First Responder</strong> handles events which are not associated with a position on the screen. Like shakes.</li>  \n<li><code>UITextField</code> is a responder.\n\n<ul>  \n<li>When a <code>UITextfield</code> is tapped, it becomes the first responder.</li>  \n<li>As long as the text field is the first responder, a keyboard stays on the screen.</li>  \n<li>When a <code>resignFirstResponder</code> message is sent to it, it gives up its first responder status and the keyboard goes away.</li>  \n</ul></li>  \n<li>Note that <strong>when importing files, you put quotation marks around header files</strong> you create and <strong>angled brackets around header files from frameworks</strong>.\n\n<ul>  \n<li><p>Angled brackets tell the compiler, “Only look in the system libraries for this file.”</p></li>  \n<li><p>Quotation marks say, “Look in the directory for this project first, and if you don’t find something, then look in the system libraries.”</p></li>  \n</ul>  \n\n<p>*</li>\n</ul></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1365515769000,"created_by":1,"updated_at":1365515972000,"updated_by":1,"published_at":1365515769000,"published_by":1},{"id":15,"uuid":"58116bf0-97cb-49fe-be05-a6ee1e435227","title":"Delegation and Core Location","slug":"chapter-4-delegation-and-core-location","markdown":"<h4>Projects, Targets and Framework</h4>\r\n\r\n<ul>\r\n<li><strong>Project (.xcodeproj)</strong>: A project is a file that contains a list of references to other files as well as a number of settings that lay out the rules for items within the project.</li>\r\n<li><strong>Target</strong>: A project always has atleast one target. A target uses the files in the project to build a product.</li>\r\n<li>Essential <strong>build phases</strong>:\r\n\r\n<ul>\r\n<li>Complie sources</li>\r\n<li>Link binary with libraries</li>\r\n<li>Copy bundle resources</li>\r\n</ul></li>\r\n</ul>\r\n\r\n<h5>Framework</h5>\r\n\r\n<ul>\r\n<li>A framework is a collection of related classes.</li>\r\n<li>Cocoa-Touch is a collection of frameworks that add various functions to a target and can be added individually as needed.</li>\r\n<li><code>FrameworkName.framework</code></li>\r\n</ul>\r\n\r\n<h4>Core Location</h4>\r\n\r\n<ul>\r\n<li>The Core Location framework contains classes that help a device determine its geographical location.</li>\r\n<li>Using Core Location framework\r\n\r\n<ul>\r\n<li>Add the framework to Target</li>\r\n<li><strong>Import framework header file</strong> into files that need to know about the framework</li>\r\n<li><code>#import &lt;CoreLocation/CoreLocation.h&gt;</code></li>\r\n</ul></li>\r\n<li><strong>FrameworkName.h</strong>: Every framework has a header file that imports the header file of all the classses in the framework.</li>\r\n<li><strong>CLLocationManager</strong>: Class that interfaces with the location hardware and returns the location of the device.\r\n\r\n<ul>\r\n<li><strong>desiredAccuracy</strong> property: Tells the location manager of the required accuracy of locaion.\r\n\r\n<ul>\r\n<li><code>[locationManagerObject setDesiredAccuracy: kCLLocationAccuracyBest]</code>\r\n<code>[ startUpdatingLocation]</code></li>\r\n</ul></li>\r\n</ul></li>\r\n<li><code>CLLocationManager</code> sends the message <code>locationManager:didUpdateToLocation:fromLocation:</code> to its <strong><em>delegate</em></strong>.</li>\r\n<li><strong>Delegate</strong> is an object that can be set to recieve messages from another class.\r\n\r\n<ul>\r\n<li><code>[locationManager setDelegate: self];</code></li>\r\n</ul></li>\r\n<li>When a <code>CLLocationManager</code> has enough data to produce a new location, it creates an instance of <code>CLLocation</code>, which contains the latitude and longitude of the device. It also contains the accuracy of its reading and, depending on the device, the elevation above sea level.</li>\r\n<li>The method that <code>CLLocatationManager</code> sends its delegate, <code>locationManager:didUpdateToLocation:fromLocation:</code>, must also be implemented in the delegate.</li>\r\n<li>When <code>CLLocationManager</code> fails to find the location, it sends the method <code>locationManager:didFailWithError</code></li>\r\n</ul>\r\n\r\n<h4>Delegation</h4>\r\n\r\n<ul>\r\n<li><strong>Delegation</strong> is an object-oriented approach to <strong><em>call-backs</em></strong>.</li>\r\n<li>A <strong>Callback</strong> is a function(method) that is called everytime an event occurs.\r\n\r\n<ul>\r\n<li><strong>A delegate is set to recieve all the callbacks from an object</strong> and it can then store, display, act-on these messages.</li>\r\n</ul></li>\r\n</ul>\r\n\r\n<h5>Target- Action vs Delegation</h5>\r\n\r\n<ul>\r\n<li>A new target-action pair must be created for every distinct event, while a delegate can be set once and be sent varied events.\r\n\r\n<ul>\r\n<li>A delegate implements corresponding methods to handle the call-backs.</li>\r\n</ul></li>\r\n<li>In delegation, an object can only send its delegate messages from a specific set listed in a protocol.</li>\r\n</ul>\r\n\r\n<h4>Protocols</h4>\r\n\r\n<ul>\r\n<li>Every object with a delegate property has a corresponding <strong>protocol</strong>.</li>\r\n<li>The delegate implements methods from the protocol for events which it is interested in.</li>\r\n<li>When the delegate object implements methods from the protocol, it&#8217;s said to <strong>conform to the protocol</strong>.</li>\r\n<li><strong>Declaration</strong>:\r\n\r\n<ul>\r\n<li><code>@protocol</code> keyword</li>\r\n<li>name of the protocol</li>\r\n<li>Angled brackets to import methods from other protocols</li>\r\n<li><code>@protocol ProtocolName &lt;ImportedProtocolName&gt;</code></li>\r\n</ul></li>\r\n<li>A protocol is not a class but <strong>a collection of methods</strong>.\r\n\r\n<ul>\r\n<li>These methods aren&#8217;t implemented in the protocol or elsewhere, but in the clsses that conforms to the protocol (delegate).</li>\r\n<li>Protocol methods either provide information to the delegate or request directives from the delegate.</li>\r\n</ul></li>\r\n<li><strong>Delegate Protocols</strong>: Protocols used for delegation.\r\n\r\n<ul>\r\n<li>Naming: Delegation class name followed by <code>Delegate</code>.</li>\r\n</ul></li>\r\n<li>Methods declared in a protocol can be optional or required (default).\r\n\r\n<ul>\r\n<li>Optional methods are preceeded by the <code>@optional</code> directive.</li>\r\n</ul></li>\r\n<li>Before sending an optional message to a deligate, the object first asks the delegate whether it implements the said method by sending the <code>respondsToSelector:</code> method.\r\n\r\n<ul>\r\n<li>Every object implements <code>respondsToSlector:</code> method.</li>\r\n</ul></li>\r\n<li>For required methods, messages are sent without checking, and thus, the complier insisists that every required method from the protocol be implemeted in the delegate.\r\n\r\n<ul>\r\n<li>For this check to work, a delegate must explicitly states that it conforms to the relevant protocols.</li>\r\n<li><strong>The protocols that a class conforms to are added to a comma-delimited list inside angled brackets in the interface declaration following the superclass</strong>.</li>\r\n<li><code>@interface ClassName: SuperClassName</code><br/>\r\n<code>&lt;CLLocationManagerDelegate, ClassNameDelegate&gt;</code></li>\r\n<li>Conforming to the protocol allows for XCode to utocomplete the method names as well as check for required methods.</li>\r\n</ul></li>\r\n</ul>\r\n\r\n<h4>Delegation, Controllers and Memory Management</h4>\r\n\r\n<ul>\r\n<li>Typically, <strong>delegates are controller objects</strong> in the MVC design.</li>\r\n<li><strong>Controller objects, typically, own the objects that are delegating to it.</strong></li>\r\n<li><strong>Delegate property is an</strong> <code>__unsafe_unretained</code> <strong>reference</strong> (for compatibility with non-ARC versions of iOS) while, the delegate has a strong reference.\r\n\r\n<ul>\r\n<li><a href=\"https://dl.dropbox.com/u/3698938/00066.jpg\">References in delegation</a></li>\r\n</ul></li>\r\n<li>Bacuase a delegate is an <code>__unsafe_unretained</code>, instead of <code>weak</code>, it&#8217;s pointer cannot be set to <code>nil</code>. Hence, <strong>a delegate has to be manually deallocated</strong> by sending it <code>setdelegate:nil</code> message in its <code>dealloc</code> method.\r\n\r\n<ul>\r\n<li><code>-(void) dealloc</code>\r\n<code>{</code>\r\n<code>// Tell the location manager to stop sending it messages</code>\r\n<code>[locationManager setDelegate:nil];</code>\r\n<code>}</code></li>\r\n</ul></li>\r\n</ul>\r\n\r\n<h4>Debugger</h4>\r\n\r\n<ul>\r\n<li>Setting a breakpoint on a line of code pauses the execution of the application at that line (before it executes).</li>\r\n<li>A <strong>stack trace</strong> shows you the methods and functions whose frames were in the stack when the application broke.\r\n\r\n<ul>\r\n<li>The method where the break occurred is at the top of the stack trace. It was called by the method just below it, which was called by the method just below it, and so on.</li>\r\n<li>This chain of method calls continues all the way back to main.</li>\r\n<li>The methods implemented by the user are in black text and the methods belonging to Apple are in gray.</li>\r\n</ul></li>\r\n</ul>\r\n","html":"<h4>Projects, Targets and Framework</h4>\n\n<ul>  \n<li><strong>Project (.xcodeproj)</strong>: A project is a file that contains a list of references to other files as well as a number of settings that lay out the rules for items within the project.</li>  \n<li><strong>Target</strong>: A project always has atleast one target. A target uses the files in the project to build a product.</li>  \n<li>Essential <strong>build phases</strong>:\n\n<ul>  \n<li>Complie sources</li>  \n<li>Link binary with libraries</li>  \n<li>Copy bundle resources</li>  \n</ul></li>  \n</ul>\n\n<h5>Framework</h5>\n\n<ul>  \n<li>A framework is a collection of related classes.</li>  \n<li>Cocoa-Touch is a collection of frameworks that add various functions to a target and can be added individually as needed.</li>  \n<li><code>FrameworkName.framework</code></li>  \n</ul>\n\n<h4>Core Location</h4>\n\n<ul>  \n<li>The Core Location framework contains classes that help a device determine its geographical location.</li>  \n<li>Using Core Location framework\n\n<ul>  \n<li>Add the framework to Target</li>  \n<li><strong>Import framework header file</strong> into files that need to know about the framework</li>  \n<li><code>#import &lt;CoreLocation/CoreLocation.h&gt;</code></li>  \n</ul></li>  \n<li><strong>FrameworkName.h</strong>: Every framework has a header file that imports the header file of all the classses in the framework.</li>  \n<li><strong>CLLocationManager</strong>: Class that interfaces with the location hardware and returns the location of the device.\n\n<ul>  \n<li><strong>desiredAccuracy</strong> property: Tells the location manager of the required accuracy of locaion.\n\n<ul>  \n<li><code>[locationManagerObject setDesiredAccuracy: kCLLocationAccuracyBest]</code>  \n<code>[ startUpdatingLocation]</code></li>  \n</ul></li>  \n</ul></li>  \n<li><code>CLLocationManager</code> sends the message <code>locationManager:didUpdateToLocation:fromLocation:</code> to its <strong><em>delegate</em></strong>.</li>  \n<li><strong>Delegate</strong> is an object that can be set to recieve messages from another class.\n\n<ul>  \n<li><code>[locationManager setDelegate: self];</code></li>  \n</ul></li>  \n<li>When a <code>CLLocationManager</code> has enough data to produce a new location, it creates an instance of <code>CLLocation</code>, which contains the latitude and longitude of the device. It also contains the accuracy of its reading and, depending on the device, the elevation above sea level.</li>  \n<li>The method that <code>CLLocatationManager</code> sends its delegate, <code>locationManager:didUpdateToLocation:fromLocation:</code>, must also be implemented in the delegate.</li>  \n<li>When <code>CLLocationManager</code> fails to find the location, it sends the method <code>locationManager:didFailWithError</code></li>  \n</ul>\n\n<h4>Delegation</h4>\n\n<ul>  \n<li><strong>Delegation</strong> is an object-oriented approach to <strong><em>call-backs</em></strong>.</li>  \n<li>A <strong>Callback</strong> is a function(method) that is called everytime an event occurs.\n\n<ul>  \n<li><strong>A delegate is set to recieve all the callbacks from an object</strong> and it can then store, display, act-on these messages.</li>  \n</ul></li>  \n</ul>\n\n<h5>Target- Action vs Delegation</h5>\n\n<ul>  \n<li>A new target-action pair must be created for every distinct event, while a delegate can be set once and be sent varied events.\n\n<ul>  \n<li>A delegate implements corresponding methods to handle the call-backs.</li>  \n</ul></li>  \n<li>In delegation, an object can only send its delegate messages from a specific set listed in a protocol.</li>  \n</ul>\n\n<h4>Protocols</h4>\n\n<ul>  \n<li>Every object with a delegate property has a corresponding <strong>protocol</strong>.</li>  \n<li>The delegate implements methods from the protocol for events which it is interested in.</li>  \n<li>When the delegate object implements methods from the protocol, it&#8217;s said to <strong>conform to the protocol</strong>.</li>  \n<li><strong>Declaration</strong>:\n\n<ul>  \n<li><code>@protocol</code> keyword</li>  \n<li>name of the protocol</li>  \n<li>Angled brackets to import methods from other protocols</li>  \n<li><code>@protocol ProtocolName &lt;ImportedProtocolName&gt;</code></li>  \n</ul></li>  \n<li>A protocol is not a class but <strong>a collection of methods</strong>.\n\n<ul>  \n<li>These methods aren&#8217;t implemented in the protocol or elsewhere, but in the clsses that conforms to the protocol (delegate).</li>  \n<li>Protocol methods either provide information to the delegate or request directives from the delegate.</li>  \n</ul></li>  \n<li><strong>Delegate Protocols</strong>: Protocols used for delegation.\n\n<ul>  \n<li>Naming: Delegation class name followed by <code>Delegate</code>.</li>  \n</ul></li>  \n<li>Methods declared in a protocol can be optional or required (default).\n\n<ul>  \n<li>Optional methods are preceeded by the <code>@optional</code> directive.</li>  \n</ul></li>  \n<li>Before sending an optional message to a deligate, the object first asks the delegate whether it implements the said method by sending the <code>respondsToSelector:</code> method.\n\n<ul>  \n<li>Every object implements <code>respondsToSlector:</code> method.</li>  \n</ul></li>  \n<li>For required methods, messages are sent without checking, and thus, the complier insisists that every required method from the protocol be implemeted in the delegate.\n\n<ul>  \n<li>For this check to work, a delegate must explicitly states that it conforms to the relevant protocols.</li>  \n<li><strong>The protocols that a class conforms to are added to a comma-delimited list inside angled brackets in the interface declaration following the superclass</strong>.</li>  \n<li><code>@interface ClassName: SuperClassName</code><br/>  \n<code>&lt;CLLocationManagerDelegate, ClassNameDelegate&gt;</code></li>  \n<li>Conforming to the protocol allows for XCode to utocomplete the method names as well as check for required methods.</li>  \n</ul></li>  \n</ul>\n\n<h4>Delegation, Controllers and Memory Management</h4>\n\n<ul>  \n<li>Typically, <strong>delegates are controller objects</strong> in the MVC design.</li>  \n<li><strong>Controller objects, typically, own the objects that are delegating to it.</strong></li>  \n<li><strong>Delegate property is an</strong> <code>__unsafe_unretained</code> <strong>reference</strong> (for compatibility with non-ARC versions of iOS) while, the delegate has a strong reference.\n\n<ul>  \n<li><a href=\"https://dl.dropbox.com/u/3698938/00066.jpg\">References in delegation</a></li>  \n</ul></li>  \n<li>Bacuase a delegate is an <code>__unsafe_unretained</code>, instead of <code>weak</code>, it&#8217;s pointer cannot be set to <code>nil</code>. Hence, <strong>a delegate has to be manually deallocated</strong> by sending it <code>setdelegate:nil</code> message in its <code>dealloc</code> method.\n\n<ul>  \n<li><code>-(void) dealloc</code>  \n<code>{</code>  \n<code>// Tell the location manager to stop sending it messages</code>  \n<code>[locationManager setDelegate:nil];</code>  \n<code>}</code></li>  \n</ul></li>  \n</ul>\n\n<h4>Debugger</h4>\n\n<ul>  \n<li>Setting a breakpoint on a line of code pauses the execution of the application at that line (before it executes).</li>  \n<li>A <strong>stack trace</strong> shows you the methods and functions whose frames were in the stack when the application broke.\n\n<ul>  \n<li>The method where the break occurred is at the top of the stack trace. It was called by the method just below it, which was called by the method just below it, and so on.</li>  \n<li>This chain of method calls continues all the way back to main.</li>  \n<li>The methods implemented by the user are in black text and the methods belonging to Apple are in gray.</li>  \n</ul></li>  \n</ul>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1365515849000,"created_by":1,"updated_at":1365515975000,"updated_by":1,"published_at":1365515849000,"published_by":1},{"id":16,"uuid":"f7457394-c7a7-45dd-bc36-02753c6dc14e","title":"Facebook Home \"Launch Day\"","slug":"facebook-home-launch-day","markdown":"Why is Mark describing what Home is to the team that made it?\n","html":"<p>Why is Mark describing what Home is to the team that made it?</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1365817699000,"created_by":1,"updated_at":1365817699000,"updated_by":1,"published_at":1365817699000,"published_by":1},{"id":17,"uuid":"8028141b-40cc-440d-b5ee-27471496a215","title":"Web and native apps","slug":"web-and-native-apps","markdown":"[drop_caps]A[/drop_caps]fter <a href=\"https://itunes.apple.com/us/app/dark-sky-weather-radar-hyperlocal/id517329357?mt=8\">Dark Sky</a>, the guys at The Dark Sky Company went on to develop their own weather service, <a href=\"http://forecast.io/\">Forecast</a>, with a very neat API for developers to leverage the weather data and beautiful visualizations into their own apps. Curiously, Forecast is Web-app, even on iOS devices, and a great one at that. Today, the developers <a href=\"http://blog.forecast.io/its-not-a-web-app-its-an-app-you-install-from-the-web/\">voiced their opinion</a> about the web-app vs native <a href=\"http://daringfireball.net/linked/2011/12/14/winer-native-apps\">debate</a>.\n\nI have been meaning to talk about this for a while and have had lengthy discussions with friends about the same. First and foremost, <a href=\"http://inessential.com/2011/12/13/apps_and_web_apps_and_the_future\">Brent Simmons’ take</a> is perfectly acceptable to me. Now, the gist of the debate is performance. Even more important to the discussion is knowing that the idea of web-apps being <em>always</em> slower than native apps is now a <a href=\"https://twitter.com/taylorcarrigan/status/322886942184333312\">preconception</a>. Certainly, native code performs well on corresponding hardware and hence, well coded native apps always have an advantage. However, browsers and JavaScript performance has been escalating lately. On desktops, it’s already at the point where improvements only aid edge cases. On mobile, browsers are scaling JS performance in multiples every generation. Recent initiatives from Google, Mozilla and Apple to redo the rendering engines from ground up will result in mobile browsers performing at unprecedented speeds.\n\nI believe that JS performance is not the bottleneck in web-app performance anymore. It’s <strong>skill</strong>. From the <a href=\"http://blog.forecast.io/its-not-a-web-app-its-an-app-you-install-from-the-web/\">Forecast blog</a>:\n<blockquote>I don’t think the reason is a technical one. Granted, some apps must be native: OpenGL-based games, for example, or apps that access hardware capabilities that are not yet exposed to the browser (a shrinking list); but I don’t buy the argument that native SDKs allow you to create interfaces that are inherently better, smoother, more dynamic — or more delightful — than what is possible via HTML5. It’s 2013, and mobile browser technology has advanced tremendously in the past few years: hardware accelerated transforms and animations have made it easy to create perfectly smooth, jitter-free, interfaces, and there is no question in my mind that CSS is a more powerful way to layout dynamic content than Interface Builder.</blockquote>\n<a href=\"http://pattern.dk/sun/\">Sun</a> is the most amazing web-app that I could find. Very fluid transitions and animations. After the initial wait for data to load, things are snappy and touch works great. <a href=\"http://forecast.io/\">Forecast</a> is another great example. Web apps are technically very plausible. It takes someone who knows browsers inside out to create one, not quite unlike native apps.\n\nI would also like to address one more misconception about web-apps. It’s considered that the most important reason for existence of web-apps is their cross-platform compatibility. Develop once, deploy everywhere. This is a stupid idea. It has never worked before and it never will. It was the promise of Java, Adobe AIR and Flash. Apps looked terrible and performed even worse. They did not keep pace with the platforms and eventually, they all fell through the cracks. The idea of ubiquitous compatibility is a pie in the sky. In practice, is bleeds shit. Users get used to with the user experience of the OS (the interactions, the interface elements, the design language). Most find a disruption in this experience subpar. Cross-platform development cannot possibly create a native experience. It’ll carry over the least common denominator of all the supported platforms. That’s shit.\n\nWell conceived web-apps look like apps, not websites. But they do not try to emulate native OS elements. The web has it’s own design language and paradigms and good apps adhere to that. But the most important reason why web-apps are not one-size-fits-all is because they need a lot of platform-specific optimizations to work well. Safari on iOS, Chrome on Android, IE on Windows Phone, and desktop Webkit render things differently, scroll differently, have different defaults, hardware, and most importantly, user expectations. Web-apps, well executed web-apps, are very platform sensitive and require immense attention to the nuances and <a href=\"https://github.com/ftlabs/fastclick\">bugs</a> of the particular environment.\n\nSo, why develop web-apps? Because one loves to develop using web technologies or because Obj-C and Cocoa looks like gibberish to them. Today, in 2013, dismissing web-apps is everything but wise.","html":"<p>[drop<em>caps]A[/drop</em>caps]fter <a href=\"https://itunes.apple.com/us/app/dark-sky-weather-radar-hyperlocal/id517329357?mt=8\">Dark Sky</a>, the guys at The Dark Sky Company went on to develop their own weather service, <a href=\"http://forecast.io/\">Forecast</a>, with a very neat API for developers to leverage the weather data and beautiful visualizations into their own apps. Curiously, Forecast is Web-app, even on iOS devices, and a great one at that. Today, the developers <a href=\"http://blog.forecast.io/its-not-a-web-app-its-an-app-you-install-from-the-web/\">voiced their opinion</a> about the web-app vs native <a href=\"http://daringfireball.net/linked/2011/12/14/winer-native-apps\">debate</a>.</p>\n\n<p>I have been meaning to talk about this for a while and have had lengthy discussions with friends about the same. First and foremost, <a href=\"http://inessential.com/2011/12/13/apps_and_web_apps_and_the_future\">Brent Simmons’ take</a> is perfectly acceptable to me. Now, the gist of the debate is performance. Even more important to the discussion is knowing that the idea of web-apps being <em>always</em> slower than native apps is now a <a href=\"https://twitter.com/taylorcarrigan/status/322886942184333312\">preconception</a>. Certainly, native code performs well on corresponding hardware and hence, well coded native apps always have an advantage. However, browsers and JavaScript performance has been escalating lately. On desktops, it’s already at the point where improvements only aid edge cases. On mobile, browsers are scaling JS performance in multiples every generation. Recent initiatives from Google, Mozilla and Apple to redo the rendering engines from ground up will result in mobile browsers performing at unprecedented speeds.</p>\n\n<p>I believe that JS performance is not the bottleneck in web-app performance anymore. It’s <strong>skill</strong>. From the <a href=\"http://blog.forecast.io/its-not-a-web-app-its-an-app-you-install-from-the-web/\">Forecast blog</a>:  </p>\n\n<blockquote>I don’t think the reason is a technical one. Granted, some apps must be native: OpenGL-based games, for example, or apps that access hardware capabilities that are not yet exposed to the browser (a shrinking list); but I don’t buy the argument that native SDKs allow you to create interfaces that are inherently better, smoother, more dynamic — or more delightful — than what is possible via HTML5. It’s 2013, and mobile browser technology has advanced tremendously in the past few years: hardware accelerated transforms and animations have made it easy to create perfectly smooth, jitter-free, interfaces, and there is no question in my mind that CSS is a more powerful way to layout dynamic content than Interface Builder.</blockquote>  \n\n<p><a href=\"http://pattern.dk/sun/\">Sun</a> is the most amazing web-app that I could find. Very fluid transitions and animations. After the initial wait for data to load, things are snappy and touch works great. <a href=\"http://forecast.io/\">Forecast</a> is another great example. Web apps are technically very plausible. It takes someone who knows browsers inside out to create one, not quite unlike native apps.</p>\n\n<p>I would also like to address one more misconception about web-apps. It’s considered that the most important reason for existence of web-apps is their cross-platform compatibility. Develop once, deploy everywhere. This is a stupid idea. It has never worked before and it never will. It was the promise of Java, Adobe AIR and Flash. Apps looked terrible and performed even worse. They did not keep pace with the platforms and eventually, they all fell through the cracks. The idea of ubiquitous compatibility is a pie in the sky. In practice, is bleeds shit. Users get used to with the user experience of the OS (the interactions, the interface elements, the design language). Most find a disruption in this experience subpar. Cross-platform development cannot possibly create a native experience. It’ll carry over the least common denominator of all the supported platforms. That’s shit.</p>\n\n<p>Well conceived web-apps look like apps, not websites. But they do not try to emulate native OS elements. The web has it’s own design language and paradigms and good apps adhere to that. But the most important reason why web-apps are not one-size-fits-all is because they need a lot of platform-specific optimizations to work well. Safari on iOS, Chrome on Android, IE on Windows Phone, and desktop Webkit render things differently, scroll differently, have different defaults, hardware, and most importantly, user expectations. Web-apps, well executed web-apps, are very platform sensitive and require immense attention to the nuances and <a href=\"https://github.com/ftlabs/fastclick\">bugs</a> of the particular environment.</p>\n\n<p>So, why develop web-apps? Because one loves to develop using web technologies or because Obj-C and Cocoa looks like gibberish to them. Today, in 2013, dismissing web-apps is everything but wise.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1365818836000,"created_by":1,"updated_at":1365971756000,"updated_by":1,"published_at":1365818836000,"published_by":1},{"id":18,"uuid":"8edcfecd-c63c-482e-a959-5b074057f6e3","title":"Two Kinds Of Judgement","slug":"two-kinds-of-judgement","markdown":"April 2007\r\n\r\nThere are two different ways people judge you. Sometimes judging you correctly is the end goal. But there's a second much more common type of judgement where it isn't. We tend to regard all judgements of us as the first type. We'd probably be happier if we realized which are and which aren't.\r\n\r\nThe first type of judgement, the type where judging you is the end goal, include court cases, grades in classes, and most competitions. Such judgements can of course be mistaken, but because the goal is to judge you correctly, there's usually some kind of appeals process. If you feel you've been misjudged, you can protest that you've been treated unfairly.\r\n\r\nNearly all the judgements made on children are of this type, so we get into the habit early in life of thinking that all judgements are.\r\n\r\nBut in fact there is a second much larger class of judgements where judging you is only a means to something else. These include college admissions, hiring and investment decisions, and of course the judgements made in dating. This kind of judgement is not really about you.\r\n\r\nPut yourself in the position of someone selecting players for a national team. Suppose for the sake of simplicity that this is a game with no positions, and that you have to select 20 players. There will be a few stars who clearly should make the team, and many players who clearly shouldn't. The only place your judgement makes a difference is in the borderline cases. Suppose you screw up and underestimate the 20th best player, causing him not to make the team, and his place to be taken by the 21st best. You've still picked a good team. If the players have the usual distribution of ability, the 21st best player will be only slightly worse than the 20th best. Probably the difference between them will be less than the measurement error.\r\n\r\nThe 20th best player may feel he has been misjudged. But your goal here wasn't to provide a service estimating people's ability. It was to pick a team, and if the difference between the 20th and 21st best players is less than the measurement error, you've still done that optimally.\r\n\r\nIt's a false analogy even to use the word unfair to describe this kind of misjudgement. It's not aimed at producing a correct estimate of any given individual, but at selecting a reasonably optimal set.\r\n\r\nOne thing that leads us astray here is that the selector seems to be in a position of power. That makes him seem like a judge. If you regard someone judging you as a customer instead of a judge, the expectation of fairness goes away. The author of a good novel wouldn't complain that readers were unfair for preferring a potboiler with a racy cover. Stupid, perhaps, but not unfair.\r\n\r\nOur early training and our self-centeredness combine to make us believe that every judgement of us is about us. In fact most aren't. This is a rare case where being less self-centered will make people more confident. Once you realize how little most people judging you care about judging you accurately—once you realize that because of the normal distribution of most applicant pools, it matters least to judge accurately in precisely the cases where judgement has the most effect—you won't take rejection so personally.\r\n\r\nAnd curiously enough, taking rejection less personally may help you to get rejected less often. If you think someone judging you will work hard to judge you correctly, you can afford to be passive. But the more you realize that most judgements are greatly influenced by random, extraneous factors—that most people judging you are more like a fickle novel buyer than a wise and perceptive magistrate—the more you realize you can do things to influence the outcome.\r\n\r\nOne good place to apply this principle is in college applications. Most high school students applying to college do it with the usual child's mix of inferiority and self-centeredness: inferiority in that they assume that admissions committees must be all-seeing; self-centeredness in that they assume admissions committees care enough about them to dig down into their application and figure out whether they're good or not. These combine to make applicants passive in applying and hurt when they're rejected. If college applicants realized how quick and impersonal most selection processes are, they'd make more effort to sell themselves, and take the outcome less personally.","html":"<p>April 2007</p>\n\n<p>There are two different ways people judge you. Sometimes judging you correctly is the end goal. But there's a second much more common type of judgement where it isn't. We tend to regard all judgements of us as the first type. We'd probably be happier if we realized which are and which aren't.</p>\n\n<p>The first type of judgement, the type where judging you is the end goal, include court cases, grades in classes, and most competitions. Such judgements can of course be mistaken, but because the goal is to judge you correctly, there's usually some kind of appeals process. If you feel you've been misjudged, you can protest that you've been treated unfairly.</p>\n\n<p>Nearly all the judgements made on children are of this type, so we get into the habit early in life of thinking that all judgements are.</p>\n\n<p>But in fact there is a second much larger class of judgements where judging you is only a means to something else. These include college admissions, hiring and investment decisions, and of course the judgements made in dating. This kind of judgement is not really about you.</p>\n\n<p>Put yourself in the position of someone selecting players for a national team. Suppose for the sake of simplicity that this is a game with no positions, and that you have to select 20 players. There will be a few stars who clearly should make the team, and many players who clearly shouldn't. The only place your judgement makes a difference is in the borderline cases. Suppose you screw up and underestimate the 20th best player, causing him not to make the team, and his place to be taken by the 21st best. You've still picked a good team. If the players have the usual distribution of ability, the 21st best player will be only slightly worse than the 20th best. Probably the difference between them will be less than the measurement error.</p>\n\n<p>The 20th best player may feel he has been misjudged. But your goal here wasn't to provide a service estimating people's ability. It was to pick a team, and if the difference between the 20th and 21st best players is less than the measurement error, you've still done that optimally.</p>\n\n<p>It's a false analogy even to use the word unfair to describe this kind of misjudgement. It's not aimed at producing a correct estimate of any given individual, but at selecting a reasonably optimal set.</p>\n\n<p>One thing that leads us astray here is that the selector seems to be in a position of power. That makes him seem like a judge. If you regard someone judging you as a customer instead of a judge, the expectation of fairness goes away. The author of a good novel wouldn't complain that readers were unfair for preferring a potboiler with a racy cover. Stupid, perhaps, but not unfair.</p>\n\n<p>Our early training and our self-centeredness combine to make us believe that every judgement of us is about us. In fact most aren't. This is a rare case where being less self-centered will make people more confident. Once you realize how little most people judging you care about judging you accurately—once you realize that because of the normal distribution of most applicant pools, it matters least to judge accurately in precisely the cases where judgement has the most effect—you won't take rejection so personally.</p>\n\n<p>And curiously enough, taking rejection less personally may help you to get rejected less often. If you think someone judging you will work hard to judge you correctly, you can afford to be passive. But the more you realize that most judgements are greatly influenced by random, extraneous factors—that most people judging you are more like a fickle novel buyer than a wise and perceptive magistrate—the more you realize you can do things to influence the outcome.</p>\n\n<p>One good place to apply this principle is in college applications. Most high school students applying to college do it with the usual child's mix of inferiority and self-centeredness: inferiority in that they assume that admissions committees must be all-seeing; self-centeredness in that they assume admissions committees care enough about them to dig down into their application and figure out whether they're good or not. These combine to make applicants passive in applying and hurt when they're rejected. If college applicants realized how quick and impersonal most selection processes are, they'd make more effort to sell themselves, and take the outcome less personally.</p>","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1365939589000,"created_by":1,"updated_at":1365939589000,"updated_by":1,"published_at":1365939589000,"published_by":1},{"id":19,"uuid":"98468662-3e84-4571-8fb5-8bb42c4a4a9a","title":"Paul Graham Essays","slug":"paul-graham-essays-readlist","markdown":"I spent this morning compiling a <a href=\"http://readlists.com/c1acc3ea\">Readlist</a> of Paul Graham's essays. You can download these as an eBook or send to Kindle.\n\n<strong>Source</strong>: <a title=\"Paul Graham Essays\" href=\"http://www.paulgraham.com/articles.html\">Paul Graham</a>","html":"<p>I spent this morning compiling a <a href=\"http://readlists.com/c1acc3ea\">Readlist</a> of Paul Graham's essays. You can download these as an eBook or send to Kindle.</p>\n\n<p><strong>Source</strong>: <a title=\"Paul Graham Essays\" href=\"http://www.paulgraham.com/articles.html\">Paul Graham</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1365940243000,"created_by":1,"updated_at":1365959719000,"updated_by":1,"published_at":1365940243000,"published_by":1},{"id":20,"uuid":"7896c9f8-1353-4b2e-9441-04b7cc2fea17","title":"Context","slug":"context","markdown":"I believe that in a few hundred years, the introduction of the iPhone in 2007 by Apple will be considered the beginning of technological singularity. iPhone was the first device that successfully brought computing, practical and extensible computing, out in the hands of people. Having a device in one’s pocket, capable of searching the internet anywhere and anytime, ushered in the age of information. Intelligent and contextual information has ever since changed our perception of the world. And this is just the beginning.\r\n\r\nToday, in 2013, information is still query based. Its flow is determined by curiosity and the tools chosen by the user. It’s inefficient and deprives people of information about their world that they might benefit from. This inadequacy is widely recognized and efforts to better the availability of information are certainly underway. Besides countless experiments in <a href=\"http://www.sciencedaily.com/news/computers_math/artificial_intelligence/\">artificial intelligence</a>, contextual search implementations like <a href=\"http://www.google.com/landing/now/\">Google Now</a> are a glimpse into a future with frictionless flow of information. I want to talk about the enabler of this vision: <strong>Context</strong>.\r\n<h3>Context</h3>\r\nContext in the domain of machine learning and information is <em>the idea about the circumstances that precede a query and follow the results</em>. Context, like user location, allows a better understanding of the query and facilitates more relevant results. But that is a very limited use of context.\r\n\r\nTechnology is an extension of the human self, a <a href=\"http://www.youtube.com/watch?v=ob_GX50Za6c\"><em>bicycle for the human mind</em></a>. Technology is a sense and contextual information, information that is beyond the perception of the 5 physical senses, is its input. But to get there, information has to be freed from the bounds of human generated queries. We need to understand our environment enough that this understanding can be used, not only to generate relevant results but also, to create relevant queries. Our devices need more context to ask questions about our world themselves and thus, populate the information we need without our conscious intervention.\r\n\r\nIn order to ask the right questions, our devices need to know us. The most essential aspect of context is the user, us. We humans have a state of being and a set of preferences. Our physical state, our mental pose, the state of the environment around us and our interactions with it are just a few of the data points that essentially differentiate every one of us. Pieces of information that are relevant to some are pointless to others. The first step towards better context is a better understanding of the users. Better understanding requires more data.\r\n<h4>The rise of the sensors</h4>\r\nSensors are little widgets which make our devices aware of their surroundings, their users. The iPhone can sense ambient lighting conditions, proximity of the user to itself, its location, orientation and motion relative to the planet. The iPhone does not know enough. Proper context will require data in many more dimensions, dimensions which can define the user and his state. Their sheer number will placate strenuous constraints on their size and energy consumption but demand ever more accurate data. It is not difficult to realize that sensors will ride the next wave of innovation in computing. These minuscule and sophisticated apparatus will usher in the age of personal data.\r\n<h4>The age of data</h4>\r\nBillions of sensors will wake up thousands of times everyday to take a peek into the world they are in and generate massive, <em>massive</em> amounts of data. But data is not context. its <strong>interpretation</strong> is. Interpretation is the tallest step to context. It is an effort to make sense of the collected data and what an effort it is.\r\n\r\nAlgorithms are the tools used for interpretation of data. An algorithm is a logical process to solve a problem computationally. In the world of machine learning, human understanding of nature and behavior is coded into algorithms, which can then do so themselves. But the process of building an effective algorithm requires much training of the algorithm with immense sets of data. The human brain is effectively a cluster of algorithmic neural pathways. Aside from genetic clues serving as the instruction set for the brain, everything else, including the understanding of the world is based upon repetitive training which creates the neural pathways required for an effectively functioning brain. Just as there is no way (currently known to humans) to evolve an agile brain without training, there is no short route to context. It requires herculean efforts to collect data and the constant process of teaching algorithms the changing interpretations of things (until there are algorithms to interpret the factors causing those changes).\r\n\r\nIntelligence is algorithmic and the only route to generating contextual and useful information is thru data.\r\n<h4>Where do we stand today?</h4>\r\nContext is the most prized commodity in the connected world. Today, it is known as its primitive form, big-data. However, sings of evolution are apparent in escalating endeavors by internet giants.\r\n<h5>Google</h5>\r\nAt the forefront of context today is Google and not coincidentally. Google originated as an algorithm to organize and make sense of the massive amounts of data on the internet. Its relentless pursuit for more relevant search results has taught Google more about data than any single entity could claim the knowledge of. Product decisions which might appear to be foresights from outside, demonstrate this.\r\n<ul>\r\n\t<li>Google Voice, the “free” VOIP service from Google, has given them an unparalleled understanding of the spoken word. While Apple, the only other company with a successful voice-input interface, has to rely on licensed technology from Nuance and high-latency server-side processing, Google’s voice offerings are incredibly fast and accurate.</li>\r\n\t<li>Android, Google’s “open-source” operating system, is the most widely installed operating system on the planet and an unprecedented source of data.</li>\r\n\t<li>Google has long been known to design its own data centers and networking equipment. It is not merely an optimizing endeavor but a natural response to their realization that data interpretation is the foremost requirement for an intelligent world. Google landed on this realization long before others, including hardware makers.</li>\r\n</ul>\r\n<h5>Facebook and Amazon</h5>\r\nFacebook and Amazon are the other two contenders which stand to benefit the most from context. They have access to some of the most personally identifiable data in the world. Facebook has, rightly so, initiated the <a href=\"http://www.opencompute.org\">Open Compute</a> project and Amazon has expanded into IaaS, learning about data handling along the way.\r\n<h5>Apple</h5>\r\nApple stands at a critical juncture today. As the owner of one of the biggest software and media ecosystems in the world, it is increasingly appearing as a services company. Apple has historically strayed away form intrusive data mining but they have access to one of the largest and fastest growing datasets of user preferences and behaviors. However, from the outside, it seems that Apple is culturally misplaced in this era of context. I will elaborate myself and analyze Apple’s state in a later piece.\r\n<h4>The future</h4>\r\nTechnology is not an abstract endeavor of the few, it is an effort to understand our world, its immensity and grandeur. It is not a divide between the real and the digital but a bridge between the abstract and the “normal”. Technology enables us to understand aspects of our world that we never fathomed and context is the very first step. It is a new dimension of awareness.","html":"<p>I believe that in a few hundred years, the introduction of the iPhone in 2007 by Apple will be considered the beginning of technological singularity. iPhone was the first device that successfully brought computing, practical and extensible computing, out in the hands of people. Having a device in one’s pocket, capable of searching the internet anywhere and anytime, ushered in the age of information. Intelligent and contextual information has ever since changed our perception of the world. And this is just the beginning.</p>\n\n<p>Today, in 2013, information is still query based. Its flow is determined by curiosity and the tools chosen by the user. It’s inefficient and deprives people of information about their world that they might benefit from. This inadequacy is widely recognized and efforts to better the availability of information are certainly underway. Besides countless experiments in <a href=\"http://www.sciencedaily.com/news/computers_math/artificial_intelligence/\">artificial intelligence</a>, contextual search implementations like <a href=\"http://www.google.com/landing/now/\">Google Now</a> are a glimpse into a future with frictionless flow of information. I want to talk about the enabler of this vision: <strong>Context</strong>.  </p>\n\n<h3>Context</h3>  \n\n<p>Context in the domain of machine learning and information is <em>the idea about the circumstances that precede a query and follow the results</em>. Context, like user location, allows a better understanding of the query and facilitates more relevant results. But that is a very limited use of context.</p>\n\n<p>Technology is an extension of the human self, a <a href=\"http://www.youtube.com/watch?v=ob_GX50Za6c\"><em>bicycle for the human mind</em></a>. Technology is a sense and contextual information, information that is beyond the perception of the 5 physical senses, is its input. But to get there, information has to be freed from the bounds of human generated queries. We need to understand our environment enough that this understanding can be used, not only to generate relevant results but also, to create relevant queries. Our devices need more context to ask questions about our world themselves and thus, populate the information we need without our conscious intervention.</p>\n\n<p>In order to ask the right questions, our devices need to know us. The most essential aspect of context is the user, us. We humans have a state of being and a set of preferences. Our physical state, our mental pose, the state of the environment around us and our interactions with it are just a few of the data points that essentially differentiate every one of us. Pieces of information that are relevant to some are pointless to others. The first step towards better context is a better understanding of the users. Better understanding requires more data.  </p>\n\n<h4>The rise of the sensors</h4>  \n\n<p>Sensors are little widgets which make our devices aware of their surroundings, their users. The iPhone can sense ambient lighting conditions, proximity of the user to itself, its location, orientation and motion relative to the planet. The iPhone does not know enough. Proper context will require data in many more dimensions, dimensions which can define the user and his state. Their sheer number will placate strenuous constraints on their size and energy consumption but demand ever more accurate data. It is not difficult to realize that sensors will ride the next wave of innovation in computing. These minuscule and sophisticated apparatus will usher in the age of personal data.  </p>\n\n<h4>The age of data</h4>  \n\n<p>Billions of sensors will wake up thousands of times everyday to take a peek into the world they are in and generate massive, <em>massive</em> amounts of data. But data is not context. its <strong>interpretation</strong> is. Interpretation is the tallest step to context. It is an effort to make sense of the collected data and what an effort it is.</p>\n\n<p>Algorithms are the tools used for interpretation of data. An algorithm is a logical process to solve a problem computationally. In the world of machine learning, human understanding of nature and behavior is coded into algorithms, which can then do so themselves. But the process of building an effective algorithm requires much training of the algorithm with immense sets of data. The human brain is effectively a cluster of algorithmic neural pathways. Aside from genetic clues serving as the instruction set for the brain, everything else, including the understanding of the world is based upon repetitive training which creates the neural pathways required for an effectively functioning brain. Just as there is no way (currently known to humans) to evolve an agile brain without training, there is no short route to context. It requires herculean efforts to collect data and the constant process of teaching algorithms the changing interpretations of things (until there are algorithms to interpret the factors causing those changes).</p>\n\n<p>Intelligence is algorithmic and the only route to generating contextual and useful information is thru data.  </p>\n\n<h4>Where do we stand today?</h4>  \n\n<p>Context is the most prized commodity in the connected world. Today, it is known as its primitive form, big-data. However, sings of evolution are apparent in escalating endeavors by internet giants.  </p>\n\n<h5>Google</h5>  \n\n<p>At the forefront of context today is Google and not coincidentally. Google originated as an algorithm to organize and make sense of the massive amounts of data on the internet. Its relentless pursuit for more relevant search results has taught Google more about data than any single entity could claim the knowledge of. Product decisions which might appear to be foresights from outside, demonstrate this.  </p>\n\n<ul>  \n    <li>Google Voice, the “free” VOIP service from Google, has given them an unparalleled understanding of the spoken word. While Apple, the only other company with a successful voice-input interface, has to rely on licensed technology from Nuance and high-latency server-side processing, Google’s voice offerings are incredibly fast and accurate.</li>\n    <li>Android, Google’s “open-source” operating system, is the most widely installed operating system on the planet and an unprecedented source of data.</li>\n    <li>Google has long been known to design its own data centers and networking equipment. It is not merely an optimizing endeavor but a natural response to their realization that data interpretation is the foremost requirement for an intelligent world. Google landed on this realization long before others, including hardware makers.</li>\n</ul>  \n\n<h5>Facebook and Amazon</h5>  \n\n<p>Facebook and Amazon are the other two contenders which stand to benefit the most from context. They have access to some of the most personally identifiable data in the world. Facebook has, rightly so, initiated the <a href=\"http://www.opencompute.org\">Open Compute</a> project and Amazon has expanded into IaaS, learning about data handling along the way.  </p>\n\n<h5>Apple</h5>  \n\n<p>Apple stands at a critical juncture today. As the owner of one of the biggest software and media ecosystems in the world, it is increasingly appearing as a services company. Apple has historically strayed away form intrusive data mining but they have access to one of the largest and fastest growing datasets of user preferences and behaviors. However, from the outside, it seems that Apple is culturally misplaced in this era of context. I will elaborate myself and analyze Apple’s state in a later piece.  </p>\n\n<h4>The future</h4>  \n\n<p>Technology is not an abstract endeavor of the few, it is an effort to understand our world, its immensity and grandeur. It is not a divide between the real and the digital but a bridge between the abstract and the “normal”. Technology enables us to understand aspects of our world that we never fathomed and context is the very first step. It is a new dimension of awareness.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1365998210000,"created_by":1,"updated_at":1366068522000,"updated_by":1,"published_at":1365998210000,"published_by":1},{"id":21,"uuid":"e7dd0014-6388-4e53-91cf-d9ca456f8fe1","title":"Facebook Home","slug":"facebook-home","markdown":"<p>I have been wondering consistently about Facebook Home. <a href=\"https://duckduckgo.com/?q=site%3Adaringfireball.net+%22Facebook+Home%22\">Much</a> has been said about it by very smart people and I did not believe I had much to add to it. However, today, <a href=\"http://www.linkedin.com/pub/mike-matas/21/b3b/a53\">Mike Matas</a>, a UI designer at Facebook and former Apple Human Interface Designer, <a href=\"https://twitter.com/mike_matas/status/324186555390513154\">tweeted</a> about Loren Brichter joining <em>his team</em> at Facebook. I find it extremely interesting and an insightful data point into Facebook&#8217;s vision.</p>\r\n\r\n<p>Here is my take on Facebook Home.</p>\r\n\r\n<h3>The Intensions</h3>\r\n\r\n<p>Ever since its conception, Facebook has been a desktop product. Their major &#8220;innovations&#8221;, even as recent as the <a href=\"http://www.theverge.com/2012/2/29/2832844/facebook-timeline-for-businesses\">Facebook Timeline</a> and the <a href=\"http://www.theverge.com/2013/1/15/3879520/facebook-tackles-google-linkedin-yelp-graph-search\">Graph Search</a> are desktop-first experiences. With the rise of the iPhone and the mobile-revolution that followed it, Facebook took <a href=\"http://www.businessinsider.com/mark-zuckerberg-ipads-not-mobile-2010-11\">some</a> <a href=\"http://techcrunch.com/2012/09/11/watch-techcrunch-disrupt-sf-live-2/\">missteps</a> and mobile became Facebook&#8217;s Achilles-heel. So much so that it was <a href=\"http://www.extremetech.com/computing/116661-facebooks-only-weakness-mobile\">documented</a> as the &#8220;only weakness&#8221; in the risk clause of their SEC IPO filings. Home is an effort to correct that.</p>\r\n\r\n<p>David Pogue <a href=\"http://www.nytimes.com/2013/04/11/technology/personaltech/facebooks-grab-for-your-phone-what-gives.html?ref=technology&amp;pagewanted=all&amp;_r=0\">analyzes</a> the various facets of Facebook home and the rationale behind them for the NY Times. At the heart of it, Home puts Facebook front and center for mobile users and defines their mobile use around their own (Facebook) friends. For Facebook, home is a bright canvas for ads, the primary commodity in Facebook&#8217;s business model. It is so at two levels:</p>\r\n\r\n<ul>\r\n<li>As the primary UI on Android, home is a very visual and visible space for ads.</li>\r\n<li>Home, live on millions of phones, would be a major source of data on user behaviors and preferences. This would help Facebook advance its ad-targeting algorithms and sell even more ads in the future.</li>\r\n</ul>\r\n\r\n<p>The intensions are clear. Home is a way to <a href=\"http://thenextweb.com/facebook/2013/04/04/zuckerberg-no-ads-in-home-yet-but-will-come-to-coverfeed-eventually/\">push ads</a> to where the consumers are, on mobile.</p>\r\n\r\n<h3>Home, today</h3>\r\n\r\n<h4>Android</h4>\r\n\r\n<p>Home is fundamentally a launcher replacement for Android. It is an ingenious, albeit <a href=\"http://en.wikipedia.org/wiki/List_of_Android_launchers\">not an original</a>, approach. Launchers have existed on the Google Play store for quite a while.</p>\r\n\r\n<h4>iOS</h4>\r\n\r\n<p>Immediately following its launch, <a href=\"http://9to5mac.com/2013/04/04/will-facebook-home-ever-come-to-ios-zuckerberg-says-it-would-require-apple-partnership/\">articles</a> speculating the arrival of Home on iOS started appearing. <a href=\"http://www.cultofmac.com/222454/how-facebook-home-screws-apple/\">Some</a> also chose to write asinine shit about how Home and its absence from iOS will be <em>the</em> nail in Apple&#8217;s coffin. (Over at Coyote Tracks, Watts Martin&#8217;s piece on the &#8220;<a href=\"http://tracks.ranea.org/post/47791661856/the-default-narrative\">Default Narrative</a>&#8221; is my new go-to URL to explain all the inane shit that is written about Apple). Anyway, Home is not coming to iOS. I do not need any rumors or reports to infer that. But that is Apple&#8217;s stance. What about Facebook?</p>\r\n\r\n<p>Facebook&#8217;s intensions still stand. iOS is the next turf, a very strictly regulated one at that. The obvious course of action today is to enhance their AppStore apps to make Facebook experience better on iOS. <strong>UPDATE</strong>: <a href=\"http://www.theverge.com/2013/4/16/4230274/facebook-6-0-for-ipad-and-iphone-hands-on-with-chat-heads-stickers\">and that&#8217;s what they are doing</a>. But the future is more interesting.</p>\r\n\r\n<h3>Home, tomorrow</h3>\r\n\r\n<p>Matt Drance, the Apple Outsider, <a href=\"http://www.appleoutsider.com/2013/04/05/home-turf/\">outlined</a> the logical course for Facebook Home on Android and beyond.</p>\r\n\r\n<blockquote>\r\n<p>You make your competitor’s system yours — overnight. Facebook Home is a trojan horse designed to steal the Android experience, and the Android user base, right out of Google’s hands. The majority of speculation over the last year or two had been that Facebook was working on its own mobile OS. </p>\r\n\r\n<p>Facebook Home will provide a halo effect to current Android users that warms them up to a full-blown “Facebook phone” in the years to come. It gives Facebook the experience, confidence, credibility, momentum, and time to build a better and broader mobile experience than they would have been able to build otherwise.</p>\r\n</blockquote>\r\n\r\n<p>I believe that its naive to consider that Facebook is not working on its own OS. Besides Facebook Home being a loud declaration of such intensions, the <a href=\"http://techcrunch.com/2013/04/10/has-facebook-quietly-acquired-osmeta-a-stealth-mobile-software-startup/\">recent acquisition of Osmeta</a> and <a href=\"http://www.quora.com/Facebook-Acquisitions/Who-are-the-best-designers-to-have-joined-Facebook-via-acquisition\">Facebook&#8217;s hiring</a> of some of industry&#8217;s best designers are subtler indications of the same.</p>\r\n\r\n<p>Would a Facebook OS be a fork of Android? John Siracusa, in the <a href=\"http://atp.fm/episodes/8-hold-me\">8th episode of the Accidental Tech Podcast</a>, very comprehensively laid down what it takes to be able to fork an open source OS and Facebook is not there. Yet. However, time is crucial for Facebook and I believe that instead of being relegated to Android until they have their own OS, they will plan a deeper heist into iOS.</p>\r\n\r\n<p>This is why Loren Brichter&#8217;s hire is a very curious one to me. Besides being an incredible designer, Brichter is an interactions frontiersman. Pull-to-refresh has made into iOS, Letterpress&#8217; playful tiles are front and center on Apple&#8217;s <a href=\"http://www.apple.com\">homepage</a>. And Letterpress is not just another app. As GigaOm <a href=\"http://gigaom.com/2012/12/03/loren-brichter-designs-on-the-future-of-ios-apps/\">explains</a>: </p>\r\n\r\n<blockquote>\r\n<p>The sole employee and proprietor of Atebits, Brichter is among the smartest and most innovative user interface developers working on Apple’s mobile platform today. That’s why Letterpress, though a well-designed amusement to fill downtime, is for him is not really a game but “a Trojan Horse” for an extremely ambitious — or as he put it to me, “insane” — experiment with the future of how graphics are displayed on a mobile device. </p>\r\n\r\n<p>He built his own version of the user interface framework, the software that sits right above the graphics processor on an iOS device. Apple creates that for developers — it was completely unnecessary for him to do this. But this is the kind of thing he considers “fun.”</p>\r\n</blockquote>\r\n\r\n<p>Facebook is laying incredible emphasis on interactions in its design language. <a href=\"https://medium.com/the-year-of-the-looking-glass/af182add5a2f\">This Medium</a> by Julie Zhuo, a Product Design Director at Facebook, sheds some light on the emphasis Facebook puts on interaction-design. Assuming this will be true in the immediate future, Brichter&#8217;s hire indicates that there is lot more coming to iOS than the current app. I believe that in the coming months, we will see Facebook creating custom UI frameworks for iOS resulting in a one-of-its-kind experience on the platform, enticing users with playful and fluid UI.</p>\r\n\r\n<p>There is another reason for which this might be a good idea. I am still formulating my thoughts on inter-app-communication in iOS. But, I think that a very plausible route for apple will be to introduce <strong>app-sheets</strong>, similar to those that Mail.app or <a href=\"http://techcrunch.com/2012/10/02/good-news-for-discovery-apps-apple-allows-apps-to-sell-other-apps-directly-in-ios-6/\">AppStore</a> uses. Upon requesting an action, instead of switching to a different app, that app could serve a custom sheet with its own UI to complete the task. If this comes to fruition, Facebook, with its custom interaction designs and UI, can almost replicate the Android Home experience on iOS. If not, they could take another route where a <strong>UI-Library</strong> would enable other apps to call Facebook&#8217;s interactions and sharing inside of them. </p>\r\n\r\n<h3>The Hacker Way</h3>\r\n\r\n<p>Facebook is digging deeper into mobile. They are learning and hacking their way through. Home on Android is a concealed attack on Google, from their own turf. It will serve as a test of Google&#8217;s supposedly &#8220;open&#8221; ethos and Facebook&#8217;s ingenuity. iOS will be even more trying and will only fall to never-before-conceived &#8220;hacks&#8221;.</p>","html":"<p>I have been wondering consistently about Facebook Home. <a href=\"https://duckduckgo.com/?q=site%3Adaringfireball.net+%22Facebook+Home%22\">Much</a> has been said about it by very smart people and I did not believe I had much to add to it. However, today, <a href=\"http://www.linkedin.com/pub/mike-matas/21/b3b/a53\">Mike Matas</a>, a UI designer at Facebook and former Apple Human Interface Designer, <a href=\"https://twitter.com/mike_matas/status/324186555390513154\">tweeted</a> about Loren Brichter joining <em>his team</em> at Facebook. I find it extremely interesting and an insightful data point into Facebook&#8217;s vision.</p>\n\n<p>Here is my take on Facebook Home.</p>\n\n<h3>The Intensions</h3>\n\n<p>Ever since its conception, Facebook has been a desktop product. Their major &#8220;innovations&#8221;, even as recent as the <a href=\"http://www.theverge.com/2012/2/29/2832844/facebook-timeline-for-businesses\">Facebook Timeline</a> and the <a href=\"http://www.theverge.com/2013/1/15/3879520/facebook-tackles-google-linkedin-yelp-graph-search\">Graph Search</a> are desktop-first experiences. With the rise of the iPhone and the mobile-revolution that followed it, Facebook took <a href=\"http://www.businessinsider.com/mark-zuckerberg-ipads-not-mobile-2010-11\">some</a> <a href=\"http://techcrunch.com/2012/09/11/watch-techcrunch-disrupt-sf-live-2/\">missteps</a> and mobile became Facebook&#8217;s Achilles-heel. So much so that it was <a href=\"http://www.extremetech.com/computing/116661-facebooks-only-weakness-mobile\">documented</a> as the &#8220;only weakness&#8221; in the risk clause of their SEC IPO filings. Home is an effort to correct that.</p>\n\n<p>David Pogue <a href=\"http://www.nytimes.com/2013/04/11/technology/personaltech/facebooks-grab-for-your-phone-what-gives.html?ref=technology&amp;pagewanted=all&amp;_r=0\">analyzes</a> the various facets of Facebook home and the rationale behind them for the NY Times. At the heart of it, Home puts Facebook front and center for mobile users and defines their mobile use around their own (Facebook) friends. For Facebook, home is a bright canvas for ads, the primary commodity in Facebook&#8217;s business model. It is so at two levels:</p>\n\n<ul>  \n<li>As the primary UI on Android, home is a very visual and visible space for ads.</li>  \n<li>Home, live on millions of phones, would be a major source of data on user behaviors and preferences. This would help Facebook advance its ad-targeting algorithms and sell even more ads in the future.</li>  \n</ul>\n\n<p>The intensions are clear. Home is a way to <a href=\"http://thenextweb.com/facebook/2013/04/04/zuckerberg-no-ads-in-home-yet-but-will-come-to-coverfeed-eventually/\">push ads</a> to where the consumers are, on mobile.</p>\n\n<h3>Home, today</h3>\n\n<h4>Android</h4>\n\n<p>Home is fundamentally a launcher replacement for Android. It is an ingenious, albeit <a href=\"http://en.wikipedia.org/wiki/List_of_Android_launchers\">not an original</a>, approach. Launchers have existed on the Google Play store for quite a while.</p>\n\n<h4>iOS</h4>\n\n<p>Immediately following its launch, <a href=\"http://9to5mac.com/2013/04/04/will-facebook-home-ever-come-to-ios-zuckerberg-says-it-would-require-apple-partnership/\">articles</a> speculating the arrival of Home on iOS started appearing. <a href=\"http://www.cultofmac.com/222454/how-facebook-home-screws-apple/\">Some</a> also chose to write asinine shit about how Home and its absence from iOS will be <em>the</em> nail in Apple&#8217;s coffin. (Over at Coyote Tracks, Watts Martin&#8217;s piece on the &#8220;<a href=\"http://tracks.ranea.org/post/47791661856/the-default-narrative\">Default Narrative</a>&#8221; is my new go-to URL to explain all the inane shit that is written about Apple). Anyway, Home is not coming to iOS. I do not need any rumors or reports to infer that. But that is Apple&#8217;s stance. What about Facebook?</p>\n\n<p>Facebook&#8217;s intensions still stand. iOS is the next turf, a very strictly regulated one at that. The obvious course of action today is to enhance their AppStore apps to make Facebook experience better on iOS. <strong>UPDATE</strong>: <a href=\"http://www.theverge.com/2013/4/16/4230274/facebook-6-0-for-ipad-and-iphone-hands-on-with-chat-heads-stickers\">and that&#8217;s what they are doing</a>. But the future is more interesting.</p>\n\n<h3>Home, tomorrow</h3>\n\n<p>Matt Drance, the Apple Outsider, <a href=\"http://www.appleoutsider.com/2013/04/05/home-turf/\">outlined</a> the logical course for Facebook Home on Android and beyond.</p>\n\n<blockquote>  \n<p>You make your competitor’s system yours — overnight. Facebook Home is a trojan horse designed to steal the Android experience, and the Android user base, right out of Google’s hands. The majority of speculation over the last year or two had been that Facebook was working on its own mobile OS. </p>\n\n<p>Facebook Home will provide a halo effect to current Android users that warms them up to a full-blown “Facebook phone” in the years to come. It gives Facebook the experience, confidence, credibility, momentum, and time to build a better and broader mobile experience than they would have been able to build otherwise.</p>  \n</blockquote>\n\n<p>I believe that its naive to consider that Facebook is not working on its own OS. Besides Facebook Home being a loud declaration of such intensions, the <a href=\"http://techcrunch.com/2013/04/10/has-facebook-quietly-acquired-osmeta-a-stealth-mobile-software-startup/\">recent acquisition of Osmeta</a> and <a href=\"http://www.quora.com/Facebook-Acquisitions/Who-are-the-best-designers-to-have-joined-Facebook-via-acquisition\">Facebook&#8217;s hiring</a> of some of industry&#8217;s best designers are subtler indications of the same.</p>\n\n<p>Would a Facebook OS be a fork of Android? John Siracusa, in the <a href=\"http://atp.fm/episodes/8-hold-me\">8th episode of the Accidental Tech Podcast</a>, very comprehensively laid down what it takes to be able to fork an open source OS and Facebook is not there. Yet. However, time is crucial for Facebook and I believe that instead of being relegated to Android until they have their own OS, they will plan a deeper heist into iOS.</p>\n\n<p>This is why Loren Brichter&#8217;s hire is a very curious one to me. Besides being an incredible designer, Brichter is an interactions frontiersman. Pull-to-refresh has made into iOS, Letterpress&#8217; playful tiles are front and center on Apple&#8217;s <a href=\"http://www.apple.com\">homepage</a>. And Letterpress is not just another app. As GigaOm <a href=\"http://gigaom.com/2012/12/03/loren-brichter-designs-on-the-future-of-ios-apps/\">explains</a>: </p>\n\n<blockquote>  \n<p>The sole employee and proprietor of Atebits, Brichter is among the smartest and most innovative user interface developers working on Apple’s mobile platform today. That’s why Letterpress, though a well-designed amusement to fill downtime, is for him is not really a game but “a Trojan Horse” for an extremely ambitious — or as he put it to me, “insane” — experiment with the future of how graphics are displayed on a mobile device. </p>\n\n<p>He built his own version of the user interface framework, the software that sits right above the graphics processor on an iOS device. Apple creates that for developers — it was completely unnecessary for him to do this. But this is the kind of thing he considers “fun.”</p>  \n</blockquote>\n\n<p>Facebook is laying incredible emphasis on interactions in its design language. <a href=\"https://medium.com/the-year-of-the-looking-glass/af182add5a2f\">This Medium</a> by Julie Zhuo, a Product Design Director at Facebook, sheds some light on the emphasis Facebook puts on interaction-design. Assuming this will be true in the immediate future, Brichter&#8217;s hire indicates that there is lot more coming to iOS than the current app. I believe that in the coming months, we will see Facebook creating custom UI frameworks for iOS resulting in a one-of-its-kind experience on the platform, enticing users with playful and fluid UI.</p>\n\n<p>There is another reason for which this might be a good idea. I am still formulating my thoughts on inter-app-communication in iOS. But, I think that a very plausible route for apple will be to introduce <strong>app-sheets</strong>, similar to those that Mail.app or <a href=\"http://techcrunch.com/2012/10/02/good-news-for-discovery-apps-apple-allows-apps-to-sell-other-apps-directly-in-ios-6/\">AppStore</a> uses. Upon requesting an action, instead of switching to a different app, that app could serve a custom sheet with its own UI to complete the task. If this comes to fruition, Facebook, with its custom interaction designs and UI, can almost replicate the Android Home experience on iOS. If not, they could take another route where a <strong>UI-Library</strong> would enable other apps to call Facebook&#8217;s interactions and sharing inside of them. </p>\n\n<h3>The Hacker Way</h3>\n\n<p>Facebook is digging deeper into mobile. They are learning and hacking their way through. Home on Android is a concealed attack on Google, from their own turf. It will serve as a test of Google&#8217;s supposedly &#8220;open&#8221; ethos and Facebook&#8217;s ingenuity. iOS will be even more trying and will only fall to never-before-conceived &#8220;hacks&#8221;.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1366123557000,"created_by":1,"updated_at":1366130060000,"updated_by":1,"published_at":1366123557000,"published_by":1},{"id":22,"uuid":"5fedd65b-f172-4a7e-af44-a8e3c5d9fcd0","title":"Man of Steel","slug":"man-of-steel","markdown":"Looking forward to it.","html":"<p>Looking forward to it.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1366142301000,"created_by":1,"updated_at":1366142301000,"updated_by":1,"published_at":1366142301000,"published_by":1},{"id":23,"uuid":"9afcb382-27ce-40a8-b989-cc1f1e9b0728","title":"Medium matters","slug":"medium-matters","markdown":"<p>I have been very fascinated with <a href=\"https://medium.com\">Medium</a> as of late. Great design and even better writing. Today, they <a href=\"https://medium.com/stories-that-matter/c41584ab5fcf\">acquired</a> <a href=\"https://www.readmatter.com\">MATTER</a>, &#8220;a publication based around a new way to create really great long-form journalism about science, technology and the future.&#8221;</p>\r\n\r\n<p>I have for long believed that journalism is a function of the medium it is conceived in. It matters where you start. Traditional newspapers can adapt for the web but they will never be native unless they change who they are<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a>. It is no surprise to me that efforts to bring print to the web have only <a href=\"http://www.guardian.co.uk/media/2012/dec/03/news-corp-close-ipad-the-daily\">foiled</a>.</p>\r\n\r\n<p>The internet is agile and beautiful. It has its own design paradigms, its own language. If you are looking for great writing on the web, look for publications which were born here, in the digital realm, envisioned by people for whom the internet is not an afterthought. As Ev Williams of Medium <a href=\"https://medium.com/about/9e53ca408c48\">puts it</a>:</p>\r\n\r\n<blockquote>\r\n<p>It’s not too late to rethink how online publishing works and build a system optimized for quality, rather than popularity. Where anyone can have a voice but where one has to earn the right to your attention. A system where people work together to make a difference, rather than merely compete for validation and recognition. A world where thought and craftsmanship is rewarded more than knee-jerk reactions.</p>\r\n</blockquote>\r\n\r\n<p>My current favorites, besides Medium and MATTER, are <a href=\"http://the-magazine.org\">The Magazine</a>, <a href=\"https://svbtle.com\">Svbtle</a> and parts of <a href=\"http://theverge.com\">The Verge</a> <a href=\"#fn:2\" id=\"fnref:2\" title=\"see footnote\" class=\"footnote\">[2]</a></p>\r\n\r\n<div class=\"footnotes\">\r\n<hr />\r\n<ol>\r\n\r\n<li id=\"fn:1\">\r\n<p>I am referring to the culture and structure of publications. The <em>people</em>, the journalists themselves, are still invaluable. <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\r\n</li>\r\n\r\n<li id=\"fn:2\">\r\n<p>I especially like The Verge&#8217;s <em><a href=\"http://www.theverge.com/features\">Features</a></em> section. Some of my favorite pieces:\r\n40 years of icons: the evolution of the modern computer interface<a href=\"http://www.theverge.com/2013/3/21/4127110/40-years-of-icons-the-evolution-of-the-modern-computer-interface\">→</a>\r\nGreed is Groupon: can anyone save the company from itself?<a href=\"http://www.theverge.com/2013/3/13/4079280/greed-is-groupon-can-anyone-save-the-company-from-itself\">→</a>\r\nHow emoji conquered the world<a href=\"http://www.theverge.com/2013/3/4/3966140/how-emoji-conquered-the-world\">→</a>\r\nPhotoshop is a city for everyone: how Adobe endlessly rebuilds its classic app<a href=\"http://www.theverge.com/2013/2/13/3959868/photoshop-is-a-city-for-everyone-how-adobe-endlessly-rebuilds-its\">→</a>\r\nMemory to myth: tracing Aaron Swartz through the 21st century<a href=\"http://www.theverge.com/2013/1/22/3898584/aaron-swartz-profile-memory-to-myth\">→</a>\r\nNot in my house: how Vegas casinos wage a war on cheating<a href=\"http://www.theverge.com/2013/1/14/3857842/las-vegas-casino-security-versus-cheating-technology\">→</a> <a href=\"#fnref:2\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\r\n</li>\r\n\r\n</ol>\r\n</div>\r\n","html":"<p>I have been very fascinated with <a href=\"https://medium.com\">Medium</a> as of late. Great design and even better writing. Today, they <a href=\"https://medium.com/stories-that-matter/c41584ab5fcf\">acquired</a> <a href=\"https://www.readmatter.com\">MATTER</a>, &#8220;a publication based around a new way to create really great long-form journalism about science, technology and the future.&#8221;</p>\n\n<p>I have for long believed that journalism is a function of the medium it is conceived in. It matters where you start. Traditional newspapers can adapt for the web but they will never be native unless they change who they are<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a>. It is no surprise to me that efforts to bring print to the web have only <a href=\"http://www.guardian.co.uk/media/2012/dec/03/news-corp-close-ipad-the-daily\">foiled</a>.</p>\n\n<p>The internet is agile and beautiful. It has its own design paradigms, its own language. If you are looking for great writing on the web, look for publications which were born here, in the digital realm, envisioned by people for whom the internet is not an afterthought. As Ev Williams of Medium <a href=\"https://medium.com/about/9e53ca408c48\">puts it</a>:</p>\n\n<blockquote>  \n<p>It’s not too late to rethink how online publishing works and build a system optimized for quality, rather than popularity. Where anyone can have a voice but where one has to earn the right to your attention. A system where people work together to make a difference, rather than merely compete for validation and recognition. A world where thought and craftsmanship is rewarded more than knee-jerk reactions.</p>  \n</blockquote>\n\n<p>My current favorites, besides Medium and MATTER, are <a href=\"http://the-magazine.org\">The Magazine</a>, <a href=\"https://svbtle.com\">Svbtle</a> and parts of <a href=\"http://theverge.com\">The Verge</a> <a href=\"#fn:2\" id=\"fnref:2\" title=\"see footnote\" class=\"footnote\">[2]</a></p>\n\n<div class=\"footnotes\">  \n<hr />  \n<ol>\n\n<li id=\"fn:1\">  \n<p>I am referring to the culture and structure of publications. The <em>people</em>, the journalists themselves, are still invaluable. <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n<li id=\"fn:2\">  \n<p>I especially like The Verge&#8217;s <em><a href=\"http://www.theverge.com/features\">Features</a></em> section. Some of my favorite pieces:  \n40 years of icons: the evolution of the modern computer interface<a href=\"http://www.theverge.com/2013/3/21/4127110/40-years-of-icons-the-evolution-of-the-modern-computer-interface\">→</a>  \nGreed is Groupon: can anyone save the company from itself?<a href=\"http://www.theverge.com/2013/3/13/4079280/greed-is-groupon-can-anyone-save-the-company-from-itself\">→</a>  \nHow emoji conquered the world<a href=\"http://www.theverge.com/2013/3/4/3966140/how-emoji-conquered-the-world\">→</a>  \nPhotoshop is a city for everyone: how Adobe endlessly rebuilds its classic app<a href=\"http://www.theverge.com/2013/2/13/3959868/photoshop-is-a-city-for-everyone-how-adobe-endlessly-rebuilds-its\">→</a>  \nMemory to myth: tracing Aaron Swartz through the 21st century<a href=\"http://www.theverge.com/2013/1/22/3898584/aaron-swartz-profile-memory-to-myth\">→</a>  \nNot in my house: how Vegas casinos wage a war on cheating<a href=\"http://www.theverge.com/2013/1/14/3857842/las-vegas-casino-security-versus-cheating-technology\">→</a> <a href=\"#fnref:2\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n</ol>  \n</div>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1366192305000,"created_by":1,"updated_at":1366200254000,"updated_by":1,"published_at":1366192305000,"published_by":1},{"id":24,"uuid":"a2aba852-c0d9-4da6-9cc7-412c9dc46166","title":"The Menu Bar","slug":"the-menu-bar","markdown":"Today my friends, Zac and Andrew, launched their new podcast. It's fun and quite awesome.","html":"<p>Today my friends, Zac and Andrew, launched their new podcast. It's fun and quite awesome.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1366234460000,"created_by":1,"updated_at":1366234482000,"updated_by":1,"published_at":1366234460000,"published_by":1},{"id":25,"uuid":"ca097462-290a-4504-9f15-be1e089749bb","title":"Hijinks","slug":"hijinks","markdown":"","html":"","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1366282791000,"created_by":1,"updated_at":1366282791000,"updated_by":1,"published_at":1366282791000,"published_by":1},{"id":26,"uuid":"29168907-d411-45fb-bda2-602c1bf75e18","title":"Why do we cry","slug":"why-do-we-cry","markdown":"<p>A very logical explanation for tears of sadness and joy.</p>","html":"<p>A very logical explanation for tears of sadness and joy.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1366299081000,"created_by":1,"updated_at":1366299081000,"updated_by":1,"published_at":1366299081000,"published_by":1},{"id":27,"uuid":"21a32f92-ee84-4b8e-ba43-e001910c4e7d","title":"$AAPL","slug":"aapl","markdown":"Apple&#8217; stock has been hit pretty hard lately. On April 17, it sank to $398.11, <a href=\"http://techcrunch.com/2013/04/17/apple-shares-drop-below-400-representing-a-16-month-low/\">the lowest it has been in 16 months</a>. It is in response to the <em>speculations</em> that Apple&#8217;s <a href=\"http://investor.apple.com\">imminent</a> earnings report and guidance for the coming quarter will be abysmal. What triggered the tumble was a <a href=\"http://www.reuters.com/article/2013/04/17/us-apple-shares-idUSBRE93G0PA20130417\">weak guidance from Cirrus Logic</a>, an audio-chip supplier for iOS devices. To most investors, component makers for Apple serve as proxy-investments into the company and hence, this panic over <a href=\"http://appleinsider.com/articles/13/01/23/attempting-to-decipher-supply-chain-data-is-a-fools-errand-tim-cook-says\">a single supplier report</a>. Stock markets are volatile and irrational and I am not qualified to talk about their behavior. However, here I <em>try</em> to understand the reasons why Apple is being punished at the Wall Street.\r\n\r\n<h3>The irrational street</h3>\r\n\r\n<p>I am certain that there are a million more reasons, some <a href=\"http://www.advisorone.com/2012/10/15/8-stock-market-omens-that-influence-investors\">incredulous</a>, for why the stocks market acts the way it does. However, I believe that the instantaneous performance of a stock is dictated by the company&#8217;s immediate quarterly results and future guidance (or its speculation, thereof). But there is another factor, the most important and the least quantifiable. <strong>Investor confidence</strong>.</p>\r\n\r\n<p>Investor confidence in the <strong>ability</strong> of Apple to perform, as it has, is irrationally low. As John Gruber <a href=\"http://daringfireball.net/linked/2013/04/18/apple-private-yglesias\">puts</a> it:</p>\r\n\r\n<blockquote>\r\n<p>How low has Apple’s valuation dropped? As of today it’s <a href=\"http://www.businessinsider.com/apples-stock-price-2013-4\">lower than Dell</a>. Wall Street thinks Dell has a brighter future than Apple.</p>\r\n</blockquote>\r\n\r\n<p>This is at a time when Apple has posted <a href=\"http://www.macworld.com/article/2025948/live-blog-apples-2013-first-quarter-earnings-call.html\">the best quarter</a> it has ever had, market share (the <em>bitch-metric</em> which people loudly yell about, all the time) is actually <em>rising</em>, rumors of new products abound and the cash pile hasn&#8217;t ever been <a href=\"http://www.cnbc.com/id/100588673\">larger</a>, for <em>any</em> company in history. Even if one decides to overlook these immediate factors, Apple has a track record of impeccable execution, product-after-product. Track record of making products which people love to use, and will pay a premium for. Track record of orchestering the entire world into an incredibly intricate supply chain and delivering like clock work, year-after-year. Then, why is the perception of Apple so terrible on the street these days?</p>\r\n\r\n<h3>The reality <del>distortion</del> field</h3>\r\n\r\n<p>Steve Jobs was known to create a distortion field around his audience making them <a href=\"http://www.businessweek.com/magazine/walter-isaacson-on-steve-jobss-reality-distortion-field-10272011.html\">believe ludicrous things</a>. I disagree. </p>\r\n\r\n<p>Apple is one of its kind in the history of enterprise. I do not know much about the internal details but it is pretty evident as competitors, traditionally structured companies, struggle to match. Apple&#8217;s products are so outstanding because they are. To <a href=\"http://www.asymco.com/2013/02/19/why-doesnt-anybody-copy-apple/\">quote Horace Dediu</a>:</p>\r\n\r\n<blockquote>\r\n<p>But what I wonder is why there isn’t a desire to copy Apple’s product creation process. Why isn’t the catalyst for a new category or disruption put forward by another company? More precisely, why isn’t there another company which consistently re-defines categories and repeatedly, predictably even, re-defines how technology is used.\r\nPut another way: <em>Why is it that everyone wants to copy Apple’s products but nobody wants to copy being Apple?</em></p>\r\n</blockquote>\r\n\r\n<p>Apple is an extraordinary company. It needs a master story teller to present itself to the world. And Steve was one. Steve was Apple and Apple was Steve. We almost never heard anything about anyone or anything else at Apple. This has changed now. And the media and investors are not used to that. The internal details bother them. They do not believe that Apple can execute without Steve. They do not believe that it took the entire company working in lockstep to create the products they did and that the same is still there. It&#8217;s a shitshow of irrationality.</p>\r\n\r\n<p>For what Apple is, I do not believe this bothers them. This does not affect their ability to create the best products in the world. And given that the biggest of Apple&#8217;s stock-holders are <a href=\"http://finance.yahoo.com/q/mh?s=AAPL+Major+Holders\">big institutional investors</a>, the volatility will remain. This trough will invert itself, come the next wave of product launches. And then we will claim-chowder that <a href=\"http://daringfireball.net/linked/2013/04/21/jackass-or-genius\">one stupid guy</a> who did not shut up.</p>","html":"<p>Apple&#8217; stock has been hit pretty hard lately. On April 17, it sank to $398.11, <a href=\"http://techcrunch.com/2013/04/17/apple-shares-drop-below-400-representing-a-16-month-low/\">the lowest it has been in 16 months</a>. It is in response to the <em>speculations</em> that Apple&#8217;s <a href=\"http://investor.apple.com\">imminent</a> earnings report and guidance for the coming quarter will be abysmal. What triggered the tumble was a <a href=\"http://www.reuters.com/article/2013/04/17/us-apple-shares-idUSBRE93G0PA20130417\">weak guidance from Cirrus Logic</a>, an audio-chip supplier for iOS devices. To most investors, component makers for Apple serve as proxy-investments into the company and hence, this panic over <a href=\"http://appleinsider.com/articles/13/01/23/attempting-to-decipher-supply-chain-data-is-a-fools-errand-tim-cook-says\">a single supplier report</a>. Stock markets are volatile and irrational and I am not qualified to talk about their behavior. However, here I <em>try</em> to understand the reasons why Apple is being punished at the Wall Street.</p>\n\n<h3>The irrational street</h3>\n\n<p>I am certain that there are a million more reasons, some <a href=\"http://www.advisorone.com/2012/10/15/8-stock-market-omens-that-influence-investors\">incredulous</a>, for why the stocks market acts the way it does. However, I believe that the instantaneous performance of a stock is dictated by the company&#8217;s immediate quarterly results and future guidance (or its speculation, thereof). But there is another factor, the most important and the least quantifiable. <strong>Investor confidence</strong>.</p>\n\n<p>Investor confidence in the <strong>ability</strong> of Apple to perform, as it has, is irrationally low. As John Gruber <a href=\"http://daringfireball.net/linked/2013/04/18/apple-private-yglesias\">puts</a> it:</p>\n\n<blockquote>  \n<p>How low has Apple’s valuation dropped? As of today it’s <a href=\"http://www.businessinsider.com/apples-stock-price-2013-4\">lower than Dell</a>. Wall Street thinks Dell has a brighter future than Apple.</p>  \n</blockquote>\n\n<p>This is at a time when Apple has posted <a href=\"http://www.macworld.com/article/2025948/live-blog-apples-2013-first-quarter-earnings-call.html\">the best quarter</a> it has ever had, market share (the <em>bitch-metric</em> which people loudly yell about, all the time) is actually <em>rising</em>, rumors of new products abound and the cash pile hasn&#8217;t ever been <a href=\"http://www.cnbc.com/id/100588673\">larger</a>, for <em>any</em> company in history. Even if one decides to overlook these immediate factors, Apple has a track record of impeccable execution, product-after-product. Track record of making products which people love to use, and will pay a premium for. Track record of orchestering the entire world into an incredibly intricate supply chain and delivering like clock work, year-after-year. Then, why is the perception of Apple so terrible on the street these days?</p>\n\n<h3>The reality <del>distortion</del> field</h3>\n\n<p>Steve Jobs was known to create a distortion field around his audience making them <a href=\"http://www.businessweek.com/magazine/walter-isaacson-on-steve-jobss-reality-distortion-field-10272011.html\">believe ludicrous things</a>. I disagree. </p>\n\n<p>Apple is one of its kind in the history of enterprise. I do not know much about the internal details but it is pretty evident as competitors, traditionally structured companies, struggle to match. Apple&#8217;s products are so outstanding because they are. To <a href=\"http://www.asymco.com/2013/02/19/why-doesnt-anybody-copy-apple/\">quote Horace Dediu</a>:</p>\n\n<blockquote>  \n<p>But what I wonder is why there isn’t a desire to copy Apple’s product creation process. Why isn’t the catalyst for a new category or disruption put forward by another company? More precisely, why isn’t there another company which consistently re-defines categories and repeatedly, predictably even, re-defines how technology is used.  \nPut another way: <em>Why is it that everyone wants to copy Apple’s products but nobody wants to copy being Apple?</em></p>  \n</blockquote>\n\n<p>Apple is an extraordinary company. It needs a master story teller to present itself to the world. And Steve was one. Steve was Apple and Apple was Steve. We almost never heard anything about anyone or anything else at Apple. This has changed now. And the media and investors are not used to that. The internal details bother them. They do not believe that Apple can execute without Steve. They do not believe that it took the entire company working in lockstep to create the products they did and that the same is still there. It&#8217;s a shitshow of irrationality.</p>\n\n<p>For what Apple is, I do not believe this bothers them. This does not affect their ability to create the best products in the world. And given that the biggest of Apple&#8217;s stock-holders are <a href=\"http://finance.yahoo.com/q/mh?s=AAPL+Major+Holders\">big institutional investors</a>, the volatility will remain. This trough will invert itself, come the next wave of product launches. And then we will claim-chowder that <a href=\"http://daringfireball.net/linked/2013/04/21/jackass-or-genius\">one stupid guy</a> who did not shut up.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1366577732000,"created_by":1,"updated_at":1366579370000,"updated_by":1,"published_at":1366577732000,"published_by":1},{"id":28,"uuid":"8abf2471-e345-4f5a-9928-9bec88cc2f10","title":"Pricing your software","slug":"pricing-your-software","markdown":"<p>A fun write up on software pricing from Joel Saplosky. Spoiler alert:</p>\n\n<blockquote>\n<p>Take my advice, offered about 20 pages back: charge $0.05 for your software. Unless it does bug tracking, in which case the correct price is $30,000,000.</p>\n</blockquote>","html":"<p>A fun write up on software pricing from Joel Saplosky. Spoiler alert:</p>\n\n<blockquote>  \n<p>Take my advice, offered about 20 pages back: charge $0.05 for your software. Unless it does bug tracking, in which case the correct price is $30,000,000.</p>  \n</blockquote>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1366591198000,"created_by":1,"updated_at":1366591198000,"updated_by":1,"published_at":1366591198000,"published_by":1},{"id":29,"uuid":"67d98382-d07c-4ae4-8755-f074964fe05e","title":"Horace Dediu's interview with Chosun Daily","slug":"horace-diediu-interview-chusun-daily","markdown":"<p>Horace Dediu is the smartest, most prolific person <a href=\"http://www.asymco.com\">writing</a> or <a href=\"http://5by5.tv/criticalpath\">speaking</a> about Apple today. As an analyst, his observations and conclusions are incredibly insightful. It&#8217;s an avalanche of &#8220;aha!!&#8221; moments.</p>\r\n\r\n<p>In an <a href=\"&quot;http://www.asymco.com/2013/04/22/interview-with-chosun-daily-of-korea-about-apple/\">interview</a> with Chosun Daily, Horace reasons about the <a href=\"http://spinhalf.net/aapl/\">irrational shock</a> in Apple&#8217;s market perceptions. Some of my favorite excerpts:</p>\r\n\r\n<p>On Steve Jobs&#8217; departure from Apple:</p>\r\n\r\n<blockquote>\r\n<p>The threat is negligible. During the first departure of Jobs, the intention of management was to make the company into “a proper company.” The plan was, essentially, to remove the chaotic model that Jobs had put in place and replace it with something more “rational” and “grown up.” After he returned he set about not just returning the company to the way it was but to also codifying and identifying exactly what that was so that it did not happen again. You have to appreciate that the greatest thing Jobs ever created was not a product but Apple itself.</p>\r\n</blockquote>\r\n\r\n<p>On Apple&#8217;s <em>perceived</em> lack of innovation:</p>\r\n\r\n<blockquote>\r\n<p>A better way to think about Apple is to think about Pixar. It’s a blockbuster manufacturer. It makes blockbusters and nothing else. That means it does not make many of them and not always regularly and that the ideas may not be original, but the results are always very popular. Pixar is not like any other studio that makes some hits and some flops. Pixar is also a functional organization. It’s not an accident that they were both built by the same person and that they are both successful after he left.</p>\r\n</blockquote>\r\n\r\n<p>When asked if he was Cook:</p>\r\n\r\n<blockquote>\r\n<p>I’d buy Intel and turn them into Apple’s microprocessor design and manufacturing group. They won’t have much to do in a few years and they’ll be cheap.</p>\r\n</blockquote>\r\n\r\n<p>I have a major crush on this guy!</p>\r\n","html":"<p>Horace Dediu is the smartest, most prolific person <a href=\"http://www.asymco.com\">writing</a> or <a href=\"http://5by5.tv/criticalpath\">speaking</a> about Apple today. As an analyst, his observations and conclusions are incredibly insightful. It&#8217;s an avalanche of &#8220;aha!!&#8221; moments.</p>\n\n<p>In an <a href=\"&quot;http://www.asymco.com/2013/04/22/interview-with-chosun-daily-of-korea-about-apple/\">interview</a> with Chosun Daily, Horace reasons about the <a href=\"http://spinhalf.net/aapl/\">irrational shock</a> in Apple&#8217;s market perceptions. Some of my favorite excerpts:</p>\n\n<p>On Steve Jobs&#8217; departure from Apple:</p>\n\n<blockquote>  \n<p>The threat is negligible. During the first departure of Jobs, the intention of management was to make the company into “a proper company.” The plan was, essentially, to remove the chaotic model that Jobs had put in place and replace it with something more “rational” and “grown up.” After he returned he set about not just returning the company to the way it was but to also codifying and identifying exactly what that was so that it did not happen again. You have to appreciate that the greatest thing Jobs ever created was not a product but Apple itself.</p>  \n</blockquote>\n\n<p>On Apple&#8217;s <em>perceived</em> lack of innovation:</p>\n\n<blockquote>  \n<p>A better way to think about Apple is to think about Pixar. It’s a blockbuster manufacturer. It makes blockbusters and nothing else. That means it does not make many of them and not always regularly and that the ideas may not be original, but the results are always very popular. Pixar is not like any other studio that makes some hits and some flops. Pixar is also a functional organization. It’s not an accident that they were both built by the same person and that they are both successful after he left.</p>  \n</blockquote>\n\n<p>When asked if he was Cook:</p>\n\n<blockquote>  \n<p>I’d buy Intel and turn them into Apple’s microprocessor design and manufacturing group. They won’t have much to do in a few years and they’ll be cheap.</p>  \n</blockquote>\n\n<p>I have a major crush on this guy!</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1366627633000,"created_by":1,"updated_at":1366627791000,"updated_by":1,"published_at":1366627633000,"published_by":1},{"id":30,"uuid":"031e6db2-e914-45e4-9ca7-d9247c03c390","title":" Has an identity crisis","slug":"apple-has-an-identity-crisis","markdown":"No. Apple doesn't have an identity crisis. Wall Street has a rationality crisis.","html":"<p>No. Apple doesn't have an identity crisis. Wall Street has a rationality crisis.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1366724169000,"created_by":1,"updated_at":1366724262000,"updated_by":1,"published_at":1366724169000,"published_by":1},{"id":31,"uuid":"cd88da0f-26e2-4485-9acd-2fe750a139a9","title":"Grasshopper's 250m test-flight","slug":"grasshoppers-250m-test-flight","markdown":"Such a beauty.\r\nSource: <a href=\"http://daringfireball.net/linked/2013/04/23/spacex-grasshopper\" title=\"SpaceX Grasshopper Test-Flight\">Daring Fireball</a>","html":"<p>Such a beauty. <br />\nSource: <a href=\"http://daringfireball.net/linked/2013/04/23/spacex-grasshopper\" title=\"SpaceX Grasshopper Test-Flight\">Daring Fireball</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1366754454000,"created_by":1,"updated_at":1366754454000,"updated_by":1,"published_at":1366754454000,"published_by":1},{"id":32,"uuid":"33db873e-7722-4e40-8eac-b1bcaeb9cc48","title":"Apple is not a hedge fund","slug":"apple-is-not-a-hedge-fund","markdown":"<p>Today was Apple&#8217;s quarterly earnings call. Apple is stronger than ever as a business and stands to be the most remarkable technology company of our time. What Apple is not is a hedge fund.</p>\r\n\r\n<p>Apple&#8217;s cash-stash is astonishing. I remember getting wide-eyed reading about all what could be done with the money. <a href=\"http://thingsappleisworthmorethan.tumblr.com\">This fun Tumblr</a> just puts things in perspective, as we regular folks tend to lose grip on things past a few million dollars. When Apple was growing a 100% every year, doubling in size that is, it was baffling. All that &#8220;bafflement&#8221; created pageviews and somehow tech-journalists began to think of themselves as <em>analysts</em>. Days leading to this earnings call saw blogger after blogger spinning baseless statistics and rumors about the fabled doom of Apple. There was talk of &#8216;profit-shares&#8217;, &#8216;p/e ratios&#8217;, &#8216;dividends&#8217;, &#8216;Wall Street&#8217;, &#8216;market-share&#8217;, and every other term that could be googled. Pardon me. I am certain these people took care to thoroughly research and grasp the nuances and conventions used in these these definitions, and went through the trouble of verifying the accuracy of their data and projections. And they most certainly did not just overhear all of this, gave up on recalling Econ&#8211;101 and hit publish. Nope.</p>\r\n\r\n<p>Anyway, Apple is not a hedge-fund. So, <strong>why</strong> are these <em>tech-</em>journalists covering it like it is one? It is certainly important to be vigilant about the gross health of Apple as a business. This affects their ability to deliver great products. However, quarterly fluctuations in profit-margins, dividends and Apple&#8217;s immediate stock-price are <a href=\"http://spinhalf.net/aapl/\">irrelevant metrics</a>, unless your readers are investors. And, if you are reading 9to5Mac<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a> for investment advice, <a href=\"https://duckduckgo.com/?q=site%3Adaringfireball.net+%22I+have+a+bridge+to+sell+you%22\">I have a bridge to sell you</a>. Apple is very amusing and interesting to think and talk about but it is not a teen pop-star on raging hormones feeding the paparazzi with its hijinks. Apple is a vision to humanize technology. Selling it as a cheap street-show is sickening.</p>\r\n\r\n<p>Technology journalism, today, is everything but that. I suggest, we let smart lads like Horace Dediu ponder over the business. An occasional link to <a href=\"http://asymco.com\">asymco.com</a> sans sensational headlines will be super.</p>\r\n\r\n<div class=\"footnotes\">\r\n<hr />\r\n<ol>\r\n\r\n<li id=\"fn:1\">\r\n<p>While 9to5 live-blogged the earnings call (?) and <a href=\"http://spinhalf.net/wp-content/uploads/2013/04/Screen-Shot-2013-04-24-at-1.01.50-AM.png\">published seven articles</a> in about an hour, Daring Fireball chose to focus on <a href=\"http://daringfireball.net/linked/2013/04/23/cook-remarks\">subtle hints</a> in Cook&#8217;s remarks about <em>new product categories</em> and actual transcripts of the earnings call.  <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\r\n</li>\r\n\r\n</ol>\r\n</div>\r\n","html":"<p>Today was Apple&#8217;s quarterly earnings call. Apple is stronger than ever as a business and stands to be the most remarkable technology company of our time. What Apple is not is a hedge fund.</p>\n\n<p>Apple&#8217;s cash-stash is astonishing. I remember getting wide-eyed reading about all what could be done with the money. <a href=\"http://thingsappleisworthmorethan.tumblr.com\">This fun Tumblr</a> just puts things in perspective, as we regular folks tend to lose grip on things past a few million dollars. When Apple was growing a 100% every year, doubling in size that is, it was baffling. All that &#8220;bafflement&#8221; created pageviews and somehow tech-journalists began to think of themselves as <em>analysts</em>. Days leading to this earnings call saw blogger after blogger spinning baseless statistics and rumors about the fabled doom of Apple. There was talk of &#8216;profit-shares&#8217;, &#8216;p/e ratios&#8217;, &#8216;dividends&#8217;, &#8216;Wall Street&#8217;, &#8216;market-share&#8217;, and every other term that could be googled. Pardon me. I am certain these people took care to thoroughly research and grasp the nuances and conventions used in these these definitions, and went through the trouble of verifying the accuracy of their data and projections. And they most certainly did not just overhear all of this, gave up on recalling Econ&#8211;101 and hit publish. Nope.</p>\n\n<p>Anyway, Apple is not a hedge-fund. So, <strong>why</strong> are these <em>tech-</em>journalists covering it like it is one? It is certainly important to be vigilant about the gross health of Apple as a business. This affects their ability to deliver great products. However, quarterly fluctuations in profit-margins, dividends and Apple&#8217;s immediate stock-price are <a href=\"http://spinhalf.net/aapl/\">irrelevant metrics</a>, unless your readers are investors. And, if you are reading 9to5Mac<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a> for investment advice, <a href=\"https://duckduckgo.com/?q=site%3Adaringfireball.net+%22I+have+a+bridge+to+sell+you%22\">I have a bridge to sell you</a>. Apple is very amusing and interesting to think and talk about but it is not a teen pop-star on raging hormones feeding the paparazzi with its hijinks. Apple is a vision to humanize technology. Selling it as a cheap street-show is sickening.</p>\n\n<p>Technology journalism, today, is everything but that. I suggest, we let smart lads like Horace Dediu ponder over the business. An occasional link to <a href=\"http://asymco.com\">asymco.com</a> sans sensational headlines will be super.</p>\n\n<div class=\"footnotes\">  \n<hr />  \n<ol>\n\n<li id=\"fn:1\">  \n<p>While 9to5 live-blogged the earnings call (?) and <a href=\"http://spinhalf.net/wp-content/uploads/2013/04/Screen-Shot-2013-04-24-at-1.01.50-AM.png\">published seven articles</a> in about an hour, Daring Fireball chose to focus on <a href=\"http://daringfireball.net/linked/2013/04/23/cook-remarks\">subtle hints</a> in Cook&#8217;s remarks about <em>new product categories</em> and actual transcripts of the earnings call.  <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n</ol>  \n</div>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1366768245000,"created_by":1,"updated_at":1366774461000,"updated_by":1,"published_at":1366768245000,"published_by":1},{"id":33,"uuid":"989df3aa-c708-48b3-94b1-134b7c5bb137","title":"Alfred","slug":"alfred","markdown":"<p>I have been using the Mac intensively and at times, exclusively, for the past few months. Most of it involves sessions of writing HTML/CSS or spending hours pouring over Obj-C and the Cocoa-Touch documentation. I have also been writing a little bit. All of this, especially web development, involves accessing a lot of files and apps very frequently. And I have been getting increasingly frustrated with having to look for each graphic and dig thru folders. What is even more cumbersome is performing repetitive actions inside apps. Spotlight does help but it goes only so deep into the problem. The tipping point came last night at 3 am when I just gave up on finder and spotlight. This morning, the first thing<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a> I did was <a href=\"http://www.alfredapp.com\">download Alfred</a>. Oh. My. God.</p>\r\n\r\n<p>I have to confess something to Gabe Glick. I am an idiot for having ignored a launcher for so long, despite his (multiple) suggestions. Alfred is incredible. It is cli-like access to the entire mac and almost anything you regularly do on the internet. With an incredibly open and vibrant community, there was nothing that I could think of for which a workflow did not already exist. </p>\r\n\r\n<p>The most important reason I like Alfred is because it streamlines <em>so much</em> of what I do on my mac behind a few keystrokes. I certainly prefer it over having to remember a ton of increasingly bizarre keyboard shortcuts. Alfred provides a text-interface to anything you can think of. The speed gains lie in not having to locate interface-elements to perform various actions. You don&#8217;t have to load Amazon to search it. You don&#8217;t have to click on 5 buttons and press shortcuts to create a new document. It is so fast and so simple. So much so that it gets Spotlight&#8217;s ⌘+Space shortcut on my Mac (while Spotlight itself is now an alternative with ⌥+Space).</p>\r\n\r\n<p>Here, I am listing my workflows and what I use them for and where you can download them. I assimilated all of this, just this morning in about 2 hours.</p>\r\n\r\n<h3>Defaults</h3>\r\n\r\n<p>Since my primary motivation for using Alfred was to speed up access to files and folders, in the &#8220;Default Results&#8221;, I pick Contacts, Preferences, Folders, Text files</p>\r\n\r\n<h3>Web Search</h3>\r\n\r\n<p>There are a lot of built in keywords for accomplishing searches across the internet. As of right now, I turned most keywords into single letter prompts. For instance, <em>g</em> for Google or <em>w</em> for Wolfram Alpha. I have also added two custom searches. </p>\r\n\r\n<ul>\r\n<li>Search the <strong>iTunes store</strong>\r\n\r\n<ul>\r\n<li>Keyword: <em>it</em></li>\r\n<li>Search URL: <code>itms://phobos.apple.com/WebObjects/MZSearch.woa/wa/com.apple.jingle.search.DirectAction/search?term={query}</code></li>\r\n</ul></li>\r\n<li>Search the <strong>Mac AppStore</strong>\r\n\r\n<ul>\r\n<li>Keyword: <em>mas</em></li>\r\n<li>Search URL: <code>macappstore://ax.search.itunes.apple.com/WebObjects/MZSearch.woa/wa/search?q={query}</code></li>\r\n</ul></li>\r\n</ul>\r\n\r\n<p>These are all pretty trivial. Where Alfred&#8217;s real strength lies is in custom Workflows. These searches, as well, can be enhanced significantly with workflows that can grab search suggestions.</p>\r\n\r\n<h3>Workflows</h3>\r\n\r\n<p>Alfred has a massive, <em>massive</em> library of user-developed workflows. <a href=\"http://www.alfredworkflow.com\">alfredworkflow.com</a> is a partial compilation of all the major workflows. There is also a <a href=\"https://github.com/hzlzh/Alfred-Workflows/raw/master/Downloads/Workflow-Searcher.alfredworkflow\">workflow to find more workflows</a>! Here are the ones I am using.</p>\r\n\r\n<h5>Search suggestions</h5>\r\n\r\n<ol>\r\n<li><a href=\"https://github.com/zhaocai/alfred2-google-workflow/blob/master/README.md\">Google Search Workflow</a>: An extensive workflow for google search suggestions, instant search, site search, google trends search and related terms search.</li>\r\n<li><a href=\"http://www.alfredforum.com/topic/731-amazon-suggest-workflow/\">Amazon Suggest</a></li>\r\n<li><a href=\"https://github.com/redwallhp/Alfred_IMDB_Suggest\">IMDB Suggest</a></li>\r\n<li><a href=\"http://lucifr.com/2013/03/18/yet-another-the-pirate-bay-workflow-for-alfred-2/\">The Pirate Bay</a></li>\r\n<li><a href=\"http://www.alfredforum.com/topic/1473-urban-dictionary-search/?hl=%2Burban+%2Bdictionary\">Urban Dictionary</a></li>\r\n<li><a href=\"http://www.alfredforum.com/topic/1005-wikipedia-workflow-alternate/\">Wikipedia ML</a></li>\r\n<li><a href=\"http://www.alfredforum.com/topic/655-wolframalpha-workflow/\">Wolfram Alpha</a>: Allows sending natural language requests to Wolfram Alpha and displays results inline. I use it for conversions and calculations which are beyond the built-in calculator workflow.</li>\r\n<li><a href=\"http://www.alfredforum.com/topic/979-pinboard-search-workflow/\">Pinboard Alfred</a>: I haven&#8217;t found a good Pinboard app for the mac. This workflow addresses the need perfectly. It searches the title, description as well as tags.</li>\r\n</ol>\r\n\r\n<h5>System Workflows</h5>\r\n\r\n<ol>\r\n<li><a href=\"http://www.alfredforum.com/topic/1211-battery-view-summary-stats-about-your-laptop-battery/\">Battery</a>: Detailed battery stats right in Alfred.</li>\r\n<li><a href=\"https://github.com/shawnrice/alfred-2-caffeinate-workflow\">Caffeinate</a>: Disable sleep indefinitely or for a designated period of time.</li>\r\n<li><a href=\"http://www.alfredforum.com/topic/1997-edit-hosts/\">Edit Hosts File</a>: If you, like me, hate Little Snitch and would rather just edit the host file, this workflow takes a lot of pain out of it.</li>\r\n<li><a href=\"http://jakestech.tumblr.com/post/47174056690/keyboard-locker-app\">Keyboard Locker</a>: Addresses an important first world problem. It locks the internal keyboard for 20s while you clean it :).</li>\r\n<li><a href=\"http://jonathanwiesel.com/post/47595111144/restarter\">Restarter</a>: Restarts any app, including force-quitting it, if needed.</li>\r\n<li><a href=\"http://www.alfredforum.com/topic/164-wi-fi-toggle-network-location-fast-user-switching-finder-settings/\">Uninstall with AppCleaner</a></li>\r\n<li><a href=\"http://www.alfredforum.com/topic/164-wi-fi-toggle-network-location-fast-user-switching-finder-settings/\">Wifi</a>: Toggle Wifi, connect to other networks and find local IP address.</li>\r\n</ol>\r\n\r\n<h5>Utilities</h5>\r\n\r\n<ol>\r\n<li><a href=\"http://www.alfredforum.com/topic/2156-new-byword-document/\">New Byword Doc</a>: Creates a new Byword document. Simple and handy.</li>\r\n<li><a href=\"http://www.alfredforum.com/topic/275-eggtimer-v2-updated-to-20-final/\">Eggtimer</a>: Start and snooze timer(s) right from inside Alfred.</li>\r\n<li><a href=\"http://www.alfredforum.com/topic/1168-imessage-focus-with-part-of-namehandle/\">iMessages</a>: I love this one. It lets you switch directly to the chat with the friend you want to message.</li>\r\n<li><a href=\"https://github.com/franzheidl/alfred-workflows/tree/master/open-with-sublime-text-2\">Open folder in Sublime Text</a>.</li>\r\n<li><a href=\"http://www.alfredforum.com/topic/562-rdio/\">Rdio</a></li>\r\n<li><a href=\"http://www.alfredforum.com/topic/917-reminders/\">Reminders</a>: A nice natural language workflow to add reminders to Reminders.app.</li>\r\n<li><a href=\"http://www.alfredforum.com/topic/491-timezones-a-world-clock-script-filter-updated-to-v161/\">TimeZones</a></li>\r\n<li><a href=\"https://github.com/BigLuck/alfred2-transmit\">Transmit Favorites</a>: Open FTP connections from your Transmit favorites list.</li>\r\n<li><a href=\"https://github.com/simonbs/alfred-tweetbot-workflow\">Tweetbot</a>: A comprehensive workflow to perform Tweetbot actions from Alfred. It uses Tweetbot&#8217;s <a href=\"http://tapbots.com/blog/development/tweetbot-url-scheme\">URL schemes</a>.</li>\r\n<li><a href=\"http://dferg.us/weather-for-alfred-2/\">Weather</a>: A neat in-Alfred utility to check current weather, forecast.</li>\r\n<li><a href=\"http://www.alfredforum.com/topic/805-colors—a-css-color-conversion-workflow/\">Colors</a>: Nifty little tools to preview and convert colors between various formats.</li>\r\n</ol>\r\n\r\n<h3>Themes</h3>\r\n\r\n<p>There are a lot of themes for Alfred. Here are a couple that I like:\r\n1. <a href=\"http://www.alfredforum.com/topic/2112-minimal-transparent-black-and-white/\">Minimal Black Transparent</a>\r\n2. <a href=\"http://www.alfredforum.com/topic/2120-new-minimalist-efficiency-v2/\">Minimalist Efficiency v2</a></p>\r\n\r\n<p>This is just a start. I can only imagine what all can be done with Alfred. Next step, I am going to listen to this <a href=\"http://macpowerusers.com/2013/04/mac-power-users-133-alfred-2/\">Mac Power User podcast</a> on Alfred.</p>\r\n\r\n<div class=\"footnotes\">\r\n<hr />\r\n<ol>\r\n\r\n<li id=\"fn:1\">\r\n<p>Ok, not literally the very first thing. <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\r\n</li>\r\n\r\n</ol>\r\n</div>","html":"<p>I have been using the Mac intensively and at times, exclusively, for the past few months. Most of it involves sessions of writing HTML/CSS or spending hours pouring over Obj-C and the Cocoa-Touch documentation. I have also been writing a little bit. All of this, especially web development, involves accessing a lot of files and apps very frequently. And I have been getting increasingly frustrated with having to look for each graphic and dig thru folders. What is even more cumbersome is performing repetitive actions inside apps. Spotlight does help but it goes only so deep into the problem. The tipping point came last night at 3 am when I just gave up on finder and spotlight. This morning, the first thing<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a> I did was <a href=\"http://www.alfredapp.com\">download Alfred</a>. Oh. My. God.</p>\n\n<p>I have to confess something to Gabe Glick. I am an idiot for having ignored a launcher for so long, despite his (multiple) suggestions. Alfred is incredible. It is cli-like access to the entire mac and almost anything you regularly do on the internet. With an incredibly open and vibrant community, there was nothing that I could think of for which a workflow did not already exist. </p>\n\n<p>The most important reason I like Alfred is because it streamlines <em>so much</em> of what I do on my mac behind a few keystrokes. I certainly prefer it over having to remember a ton of increasingly bizarre keyboard shortcuts. Alfred provides a text-interface to anything you can think of. The speed gains lie in not having to locate interface-elements to perform various actions. You don&#8217;t have to load Amazon to search it. You don&#8217;t have to click on 5 buttons and press shortcuts to create a new document. It is so fast and so simple. So much so that it gets Spotlight&#8217;s ⌘+Space shortcut on my Mac (while Spotlight itself is now an alternative with ⌥+Space).</p>\n\n<p>Here, I am listing my workflows and what I use them for and where you can download them. I assimilated all of this, just this morning in about 2 hours.</p>\n\n<h3>Defaults</h3>\n\n<p>Since my primary motivation for using Alfred was to speed up access to files and folders, in the &#8220;Default Results&#8221;, I pick Contacts, Preferences, Folders, Text files</p>\n\n<h3>Web Search</h3>\n\n<p>There are a lot of built in keywords for accomplishing searches across the internet. As of right now, I turned most keywords into single letter prompts. For instance, <em>g</em> for Google or <em>w</em> for Wolfram Alpha. I have also added two custom searches. </p>\n\n<ul>  \n<li>Search the <strong>iTunes store</strong>\n\n<ul>  \n<li>Keyword: <em>it</em></li>  \n<li>Search URL: <code>itms://phobos.apple.com/WebObjects/MZSearch.woa/wa/com.apple.jingle.search.DirectAction/search?term={query}</code></li>  \n</ul></li>  \n<li>Search the <strong>Mac AppStore</strong>\n\n<ul>  \n<li>Keyword: <em>mas</em></li>  \n<li>Search URL: <code>macappstore://ax.search.itunes.apple.com/WebObjects/MZSearch.woa/wa/search?q={query}</code></li>  \n</ul></li>  \n</ul>\n\n<p>These are all pretty trivial. Where Alfred&#8217;s real strength lies is in custom Workflows. These searches, as well, can be enhanced significantly with workflows that can grab search suggestions.</p>\n\n<h3>Workflows</h3>\n\n<p>Alfred has a massive, <em>massive</em> library of user-developed workflows. <a href=\"http://www.alfredworkflow.com\">alfredworkflow.com</a> is a partial compilation of all the major workflows. There is also a <a href=\"https://github.com/hzlzh/Alfred-Workflows/raw/master/Downloads/Workflow-Searcher.alfredworkflow\">workflow to find more workflows</a>! Here are the ones I am using.</p>\n\n<h5>Search suggestions</h5>\n\n<ol>  \n<li><a href=\"https://github.com/zhaocai/alfred2-google-workflow/blob/master/README.md\">Google Search Workflow</a>: An extensive workflow for google search suggestions, instant search, site search, google trends search and related terms search.</li>  \n<li><a href=\"http://www.alfredforum.com/topic/731-amazon-suggest-workflow/\">Amazon Suggest</a></li>  \n<li><a href=\"https://github.com/redwallhp/Alfred_IMDB_Suggest\">IMDB Suggest</a></li>  \n<li><a href=\"http://lucifr.com/2013/03/18/yet-another-the-pirate-bay-workflow-for-alfred-2/\">The Pirate Bay</a></li>  \n<li><a href=\"http://www.alfredforum.com/topic/1473-urban-dictionary-search/?hl=%2Burban+%2Bdictionary\">Urban Dictionary</a></li>  \n<li><a href=\"http://www.alfredforum.com/topic/1005-wikipedia-workflow-alternate/\">Wikipedia ML</a></li>  \n<li><a href=\"http://www.alfredforum.com/topic/655-wolframalpha-workflow/\">Wolfram Alpha</a>: Allows sending natural language requests to Wolfram Alpha and displays results inline. I use it for conversions and calculations which are beyond the built-in calculator workflow.</li>  \n<li><a href=\"http://www.alfredforum.com/topic/979-pinboard-search-workflow/\">Pinboard Alfred</a>: I haven&#8217;t found a good Pinboard app for the mac. This workflow addresses the need perfectly. It searches the title, description as well as tags.</li>  \n</ol>\n\n<h5>System Workflows</h5>\n\n<ol>  \n<li><a href=\"http://www.alfredforum.com/topic/1211-battery-view-summary-stats-about-your-laptop-battery/\">Battery</a>: Detailed battery stats right in Alfred.</li>  \n<li><a href=\"https://github.com/shawnrice/alfred-2-caffeinate-workflow\">Caffeinate</a>: Disable sleep indefinitely or for a designated period of time.</li>  \n<li><a href=\"http://www.alfredforum.com/topic/1997-edit-hosts/\">Edit Hosts File</a>: If you, like me, hate Little Snitch and would rather just edit the host file, this workflow takes a lot of pain out of it.</li>  \n<li><a href=\"http://jakestech.tumblr.com/post/47174056690/keyboard-locker-app\">Keyboard Locker</a>: Addresses an important first world problem. It locks the internal keyboard for 20s while you clean it :).</li>  \n<li><a href=\"http://jonathanwiesel.com/post/47595111144/restarter\">Restarter</a>: Restarts any app, including force-quitting it, if needed.</li>  \n<li><a href=\"http://www.alfredforum.com/topic/164-wi-fi-toggle-network-location-fast-user-switching-finder-settings/\">Uninstall with AppCleaner</a></li>  \n<li><a href=\"http://www.alfredforum.com/topic/164-wi-fi-toggle-network-location-fast-user-switching-finder-settings/\">Wifi</a>: Toggle Wifi, connect to other networks and find local IP address.</li>  \n</ol>\n\n<h5>Utilities</h5>\n\n<ol>  \n<li><a href=\"http://www.alfredforum.com/topic/2156-new-byword-document/\">New Byword Doc</a>: Creates a new Byword document. Simple and handy.</li>  \n<li><a href=\"http://www.alfredforum.com/topic/275-eggtimer-v2-updated-to-20-final/\">Eggtimer</a>: Start and snooze timer(s) right from inside Alfred.</li>  \n<li><a href=\"http://www.alfredforum.com/topic/1168-imessage-focus-with-part-of-namehandle/\">iMessages</a>: I love this one. It lets you switch directly to the chat with the friend you want to message.</li>  \n<li><a href=\"https://github.com/franzheidl/alfred-workflows/tree/master/open-with-sublime-text-2\">Open folder in Sublime Text</a>.</li>  \n<li><a href=\"http://www.alfredforum.com/topic/562-rdio/\">Rdio</a></li>  \n<li><a href=\"http://www.alfredforum.com/topic/917-reminders/\">Reminders</a>: A nice natural language workflow to add reminders to Reminders.app.</li>  \n<li><a href=\"http://www.alfredforum.com/topic/491-timezones-a-world-clock-script-filter-updated-to-v161/\">TimeZones</a></li>  \n<li><a href=\"https://github.com/BigLuck/alfred2-transmit\">Transmit Favorites</a>: Open FTP connections from your Transmit favorites list.</li>  \n<li><a href=\"https://github.com/simonbs/alfred-tweetbot-workflow\">Tweetbot</a>: A comprehensive workflow to perform Tweetbot actions from Alfred. It uses Tweetbot&#8217;s <a href=\"http://tapbots.com/blog/development/tweetbot-url-scheme\">URL schemes</a>.</li>  \n<li><a href=\"http://dferg.us/weather-for-alfred-2/\">Weather</a>: A neat in-Alfred utility to check current weather, forecast.</li>  \n<li><a href=\"http://www.alfredforum.com/topic/805-colors—a-css-color-conversion-workflow/\">Colors</a>: Nifty little tools to preview and convert colors between various formats.</li>  \n</ol>\n\n<h3>Themes</h3>\n\n<p>There are a lot of themes for Alfred. Here are a couple that I like:  \n1. <a href=\"http://www.alfredforum.com/topic/2112-minimal-transparent-black-and-white/\">Minimal Black Transparent</a>  \n2. <a href=\"http://www.alfredforum.com/topic/2120-new-minimalist-efficiency-v2/\">Minimalist Efficiency v2</a></p>\n\n<p>This is just a start. I can only imagine what all can be done with Alfred. Next step, I am going to listen to this <a href=\"http://macpowerusers.com/2013/04/mac-power-users-133-alfred-2/\">Mac Power User podcast</a> on Alfred.</p>\n\n<div class=\"footnotes\">  \n<hr />  \n<ol>\n\n<li id=\"fn:1\">  \n<p>Ok, not literally the very first thing. <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n</ol>  \n</div>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1366913717000,"created_by":1,"updated_at":1367027533000,"updated_by":1,"published_at":1366913717000,"published_by":1},{"id":34,"uuid":"0a4589c4-4b80-413d-9e75-0e2aaef0293a","title":"Even the survivors come away bleeding","slug":"even-the-survivors-come-away-bleeding","markdown":"Dustin Curtis quotes Warren Buffet on turbulent high-growth industries and their investment potential.","html":"<p>Dustin Curtis quotes Warren Buffet on turbulent high-growth industries and their investment potential.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1366916483000,"created_by":1,"updated_at":1366916483000,"updated_by":1,"published_at":1366916483000,"published_by":1},{"id":35,"uuid":"d031386e-01cb-4bb7-97ff-fbfdb93d58b8","title":"Everyday, more photos are taken with the iPhone than any other camera","slug":"everyday-more-photos-are-taken-with-the-iphone-than-any-other-camera","markdown":"Heartwarming ad from Apple.","html":"<p>Heartwarming ad from Apple.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1366924008000,"created_by":1,"updated_at":1366929407000,"updated_by":1,"published_at":1366924008000,"published_by":1},{"id":36,"uuid":"65416137-6d60-4844-90ec-23647835070b","title":"Wordpress' new responsive dashboard","slug":"wordpress-new-responsive-dashboard","markdown":"I develop mostly on top of Wordpress. Most importantly, because it gives clients the ability to change things without touching the code and creating a maintenance-scare every time they delete \"that weird looking thing\". So, I am pretty excited about Wordpress' new responsive and good-looking dashboard. It is still under development but you can install a plugin to enable it right now.","html":"<p>I develop mostly on top of Wordpress. Most importantly, because it gives clients the ability to change things without touching the code and creating a maintenance-scare every time they delete \"that weird looking thing\". So, I am pretty excited about Wordpress' new responsive and good-looking dashboard. It is still under development but you can install a plugin to enable it right now.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1367022220000,"created_by":1,"updated_at":1367022220000,"updated_by":1,"published_at":1367022220000,"published_by":1},{"id":37,"uuid":"bfa8f302-5710-4b56-bb30-be90bb52e5f8","title":"Refactor your sentences!","slug":"refactor-your-sentences","markdown":"<p>A good <a href=\"https://medium.com/tech-talk/70ebc5ed0525\">example</a> of why one should refactor their sentences before hitting &#8220;Publish&#8221;.</p>\n\n<blockquote>\n<p>60 year old, Mid Century Modern design from Scandinavia is the antecedant of the language of the mass modernism of IKEA and high-tech architecture popularised by Apple HQ designer, Norman Foster, in the 1980&#8217;s which forms the basis of Apple’s store design is based on the cross bracing and tensioned structures of early aircraft as far back as the 20s.</p>\n</blockquote>\n\n<p>Oh, also, <strong>the</strong> problem with Google Glass is that it is too futuristic for our apparently ancient taste in fashion. So spot on.</p>\n\n<p>Hat tip: <a href=\"https://twitter.com/counternotions/status/328623337012088832\">@counternotions</a></p>","html":"<p>A good <a href=\"https://medium.com/tech-talk/70ebc5ed0525\">example</a> of why one should refactor their sentences before hitting &#8220;Publish&#8221;.</p>\n\n<blockquote>  \n<p>60 year old, Mid Century Modern design from Scandinavia is the antecedant of the language of the mass modernism of IKEA and high-tech architecture popularised by Apple HQ designer, Norman Foster, in the 1980&#8217;s which forms the basis of Apple’s store design is based on the cross bracing and tensioned structures of early aircraft as far back as the 20s.</p>  \n</blockquote>\n\n<p>Oh, also, <strong>the</strong> problem with Google Glass is that it is too futuristic for our apparently ancient taste in fashion. So spot on.</p>\n\n<p>Hat tip: <a href=\"https://twitter.com/counternotions/status/328623337012088832\">@counternotions</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1367167608000,"created_by":1,"updated_at":1367186015000,"updated_by":1,"published_at":1367167608000,"published_by":1},{"id":38,"uuid":"07207a47-465f-4fd1-8f96-5ff77bd2222c","title":"Managing Wordpress from Sublime Text","slug":"managing-wordpress-from-sublime-text","markdown":"<p>So this happened today. I subscribed to Brett Terpstra&#8217;s RSS feed and in there was a little post: <a href=\"http://brettterpstra.com/2013/04/19/web-excursions-for-april-19-2013/\">Web Excursions for April 15, 2013</a>. Terpstra had linked to a <a href=\"https://github.com/dnstbr/sublpress\">Sublime Text package</a> that allows one to blog from within Sublime Text to Wordpress. I installed, it connected and WHOA!</p>\n\n<p>This is really huge for me. I hate using the web-interface of Wordpress (though a <a href=\"http://spinhalf.net/wordpress-new-responsive-dashboard/\">recent beta update</a> is charming) and Mars Edit is sort of ugly. Now, I can write in Byword, Preview in Marked, copy HTML and paste in Sublime to publish/edit<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a>. Incredible.</p>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n\n<li id=\"fn:1\">\n<p>It lets you do a lot more. You can change a lot of Wordpress settings, manage pages, upload media. There will be an ever lessening need to log-in into the web-interface. <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\n</li>\n\n</ol>\n</div>","html":"<p>So this happened today. I subscribed to Brett Terpstra&#8217;s RSS feed and in there was a little post: <a href=\"http://brettterpstra.com/2013/04/19/web-excursions-for-april-19-2013/\">Web Excursions for April 15, 2013</a>. Terpstra had linked to a <a href=\"https://github.com/dnstbr/sublpress\">Sublime Text package</a> that allows one to blog from within Sublime Text to Wordpress. I installed, it connected and WHOA!</p>\n\n<p>This is really huge for me. I hate using the web-interface of Wordpress (though a <a href=\"http://spinhalf.net/wordpress-new-responsive-dashboard/\">recent beta update</a> is charming) and Mars Edit is sort of ugly. Now, I can write in Byword, Preview in Marked, copy HTML and paste in Sublime to publish/edit<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a>. Incredible.</p>\n\n<div class=\"footnotes\">  \n<hr />  \n<ol>\n\n<li id=\"fn:1\">  \n<p>It lets you do a lot more. You can change a lot of Wordpress settings, manage pages, upload media. There will be an ever lessening need to log-in into the web-interface. <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n</ol>  \n</div>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1367187222000,"created_by":1,"updated_at":1367187222000,"updated_by":1,"published_at":1367187222000,"published_by":1},{"id":39,"uuid":"f8bdda51-8512-4306-87a5-3c21f7f6454e","title":"Twipster","slug":"twipster","markdown":"<p><a href=\"http://jxnblk.com/twipster/\">Twipster</a> is a great Safari/Chrome plugin to make Twitter web-app suck less. Here is a little screen-shot.</p>\r\n\r\n<p>Hat tip: <a href=\"http://brettterpstra.com/2013/04/19/web-excursions-for-april-19-2013/\">Brett Terpstra</a></p>","html":"<p><a href=\"http://jxnblk.com/twipster/\">Twipster</a> is a great Safari/Chrome plugin to make Twitter web-app suck less. Here is a little screen-shot.</p>\n\n<p>Hat tip: <a href=\"http://brettterpstra.com/2013/04/19/web-excursions-for-april-19-2013/\">Brett Terpstra</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1367188719000,"created_by":1,"updated_at":1367188796000,"updated_by":1,"published_at":1367188719000,"published_by":1},{"id":40,"uuid":"ea082467-2fac-4cff-93ea-ae374147db32","title":"Breezi","slug":"breezi","markdown":"Super cool tool to create realistic \"screenshots\". Absolutely lovely.","html":"<p>Super cool tool to create realistic \"screenshots\". Absolutely lovely.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1367191623000,"created_by":1,"updated_at":1367191623000,"updated_by":1,"published_at":1367191623000,"published_by":1},{"id":41,"uuid":"8d424364-e042-46d8-bc9b-3faf7332c9e0","title":"It's the details that confirm creativity","slug":"its-the-details-that-confirm-creativity","markdown":"<p>A very smart take on the &#8220;idea man&#8221; by Andy Rutledge:</p>\r\n\r\n<blockquote>\r\n<p>Creative people have a robust capacity for creation. They create. They finish. To finish you’ve got to be good with the details. In fact, creativity is the ability to clearly perceive details that are invisible to others. It’s the details that confirm the creativity.</p>\r\n</blockquote>\r\n","html":"<p>A very smart take on the &#8220;idea man&#8221; by Andy Rutledge:</p>\n\n<blockquote>  \n<p>Creative people have a robust capacity for creation. They create. They finish. To finish you’ve got to be good with the details. In fact, creativity is the ability to clearly perceive details that are invisible to others. It’s the details that confirm the creativity.</p>  \n</blockquote>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1367199622000,"created_by":1,"updated_at":1367199622000,"updated_by":1,"published_at":1367199622000,"published_by":1},{"id":42,"uuid":"c938bdb6-9cc3-4029-be35-53fa08d1fdb8","title":"Where Is The Lemonade Stand?","slug":"where-is-the-lemonade-stand","markdown":"<p>This week, My friends <a href=\"https://twitter.com/andrewjclark\">Andrew Clark</a> and <a href=\"https://twitter.com/zcichy\">Zac Cichy</a> invited me over to their new and amazing podcast, <a href=\"http://themenubar.net\">The Menu Bar</a>. This was my first podcast ever and I had fun doing it.</p>\n\n<p>We talked a bit about the future of computing and data, Apple&#8217;s fabled iWatch, and my take on <a href=\"http://www.ulyssesapp.com/\">Ulysses III</a>.</p>\n\n<p>I am really grateful that they invited me over, especially as their first-ever guest. These guys are pretty amazing and there is a lot more to come. I suggest you subscribe to the Podcast in <a href=\"https://itunes.apple.com/us/podcast/the-menu-bar/id635741483?mt=2\">iTunes</a> as well as follow it on <a href=\"https://twitter.com/themenubar\">Twitter</a>.</p>","html":"<p>This week, My friends <a href=\"https://twitter.com/andrewjclark\">Andrew Clark</a> and <a href=\"https://twitter.com/zcichy\">Zac Cichy</a> invited me over to their new and amazing podcast, <a href=\"http://themenubar.net\">The Menu Bar</a>. This was my first podcast ever and I had fun doing it.</p>\n\n<p>We talked a bit about the future of computing and data, Apple&#8217;s fabled iWatch, and my take on <a href=\"http://www.ulyssesapp.com/\">Ulysses III</a>.</p>\n\n<p>I am really grateful that they invited me over, especially as their first-ever guest. These guys are pretty amazing and there is a lot more to come. I suggest you subscribe to the Podcast in <a href=\"https://itunes.apple.com/us/podcast/the-menu-bar/id635741483?mt=2\">iTunes</a> as well as follow it on <a href=\"https://twitter.com/themenubar\">Twitter</a>.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1367245843000,"created_by":1,"updated_at":1367245843000,"updated_by":1,"published_at":1367245843000,"published_by":1},{"id":43,"uuid":"6cc6a691-889e-432e-a0f1-4e06a899721d","title":"Fonts for writing code","slug":"fonts-for-writing-code","markdown":"<p>A good compilation of coding fonts. My favorite is Source Code Pro. Close second is Monaco. In fact, I use Menlo, a monospaced font, in ByWord. </p>\r\n\r\n<p>(Hat tip: <a href=\"http://www.macdrifter.com/2013/04/what-are-the-best-programming-fonts-link.html\">MacDrifter</a>)</p>","html":"<p>A good compilation of coding fonts. My favorite is Source Code Pro. Close second is Monaco. In fact, I use Menlo, a monospaced font, in ByWord. </p>\n\n<p>(Hat tip: <a href=\"http://www.macdrifter.com/2013/04/what-are-the-best-programming-fonts-link.html\">MacDrifter</a>)</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1367359335000,"created_by":1,"updated_at":1367546195000,"updated_by":1,"published_at":1367359335000,"published_by":1},{"id":44,"uuid":"1f0bcff6-dea8-4189-80a2-e9668be13f2c","title":"Side Projects","slug":"side-projects","markdown":"<p>Aaron Mahnke on side projects:</p>\n\n<blockquote>\n<p>Side projects aren’t all roses and puppy dogs, but they certainly leave us better off when it’s all said and done. Learn from your exploration, and turn it into an asset.</p>\n</blockquote>\n\n<p>Side projects are crucial. They are our fickle sides trying be something, our curios selves trying to be someone. While work obligations are fenced avenues we <em>must</em> channel our lives into, side projects are little treads on the dirt road which, sometimes, pave a new way of life. They keep us hungry. They keep us foolish.</p>\n\n<p>It is a <a href=\"http://getfrictionless.com/why-side-projects-are-good/\">good little read.</a></p>","html":"<p>Aaron Mahnke on side projects:</p>\n\n<blockquote>  \n<p>Side projects aren’t all roses and puppy dogs, but they certainly leave us better off when it’s all said and done. Learn from your exploration, and turn it into an asset.</p>  \n</blockquote>\n\n<p>Side projects are crucial. They are our fickle sides trying be something, our curios selves trying to be someone. While work obligations are fenced avenues we <em>must</em> channel our lives into, side projects are little treads on the dirt road which, sometimes, pave a new way of life. They keep us hungry. They keep us foolish.</p>\n\n<p>It is a <a href=\"http://getfrictionless.com/why-side-projects-are-good/\">good little read.</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1367425923000,"created_by":1,"updated_at":1367431370000,"updated_by":1,"published_at":1367425923000,"published_by":1},{"id":45,"uuid":"ffa13777-0bb5-4c5a-a31f-22d94fcec467","title":"I am a sheep","slug":"i-am-a-sheep","markdown":"<p align=\"center\">Yeah, I’m a sheep. I go right with it. I got an iPad mini for no reason. Had three iPads already. Went and got an iPad mini for no reason at all.</p>\r\n\r\n<p align=\"center\">-<a href=\"http://www.splatf.com/2013/05/tpain-ipad-mini/?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+splatf+%28SplatF%29\">T. Pain</a></p>","html":"<p align=\"center\">Yeah, I’m a sheep. I go right with it. I got an iPad mini for no reason. Had three iPads already. Went and got an iPad mini for no reason at all.</p>\n\n<p align=\"center\">-<a href=\"http://www.splatf.com/2013/05/tpain-ipad-mini/?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+splatf+%28SplatF%29\">T. Pain</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1367455932000,"created_by":1,"updated_at":1367456066000,"updated_by":1,"published_at":1367455932000,"published_by":1},{"id":46,"uuid":"903e902d-47ca-464e-9ec1-2a28fe715851","title":"Foresight in rumors","slug":"foresight-in-rumors","markdown":"<p>John Moltz (<a href=\"http://verynicewebsite.net/\">Very Nice Web Site</a> fame) <a href=\"http://www.macworld.com/article/2036307/the-sad-state-of-apple-rumors.html\">writes</a> about the sate of Apple rumors today and the &#8220;glory days&#8221; of the iPhone/iPad stories:</p>\n\n<blockquote>\n<p>It’s a weird time for those of us who’ve followed Apple rumors for years. (And I&#8217;m not the only one <a href=\"http://www.muleradio.net/thetalkshow/37/\">who has noticed</a>.) At the risk of sounding like your prototypical hipster, today’s rumors just aren’t as good as they used to be.</p>\n</blockquote>\n\n<p>Given that Apple rumors are a full-time job for so many bloggers, and form a significant portion of tech-news coverage, it is worth thinking over their state of being. As Moltz points out, most rumors today, the iWatch, the iRing, the iCar, are just not that fun<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a>. I believe I know why.</p>\n\n<h3>The era of the obvious</h3>\n\n<p>When the iPhone and the iPad rumors were gaining traction, these then-rumored products seemed like very plausible successors to the iPod. With the iPod, Apple made one of the most important aspects of computing mobile: music. As it grew into an increasingly more capable device, it became indispensable alongside cellphones. Looking back, it seems logical that Apple would pursue to unify those two things<a href=\"#fn:2\" id=\"fnref:2\" title=\"see footnote\" class=\"footnote\">[2]</a>. The iPad was a long-rumored, fictional device which seemed an obvious extension of the iPhone past 2007. These logical insights made mulling over them for years fruitful. The theme here is that the bygone &#8220;legendary&#8221; decade of rumors was built on top of the obvious. Today, nothing is.</p>\n\n<h3>What&#8217;s next? Who knows!</h3>\n\n<p>Today, there seems to be a consensus that the next phase in consumer-technology is wearable-tech. Google is pursuing it with half-assed<a href=\"#fn:3\" id=\"fnref:3\" title=\"see footnote\" class=\"footnote\">[3]</a> glasses. There seems to be an increased interest in fitness-tracking devices with startups leading the charge. But, if one tries to extrapolate, there doesn&#8217;t seem to be an obvious line of progress. This is not unlike before the iPod was announced. In Moltz&#8217;s words:</p>\n\n<blockquote>\n<p>Well, if you were paying attention, you might have noticed that I left out one highly successful Apple product of the 2000s, a device that wasn’t part of the rumor trinity: the iPod. The iPod came out in October of 2001 and was something of a surprise to everybody. Rumors of an Apple digital music player had only sprung up about a week before it was unveiled. Before any of those storied Apple rumors above came to fruition, we got a product that wasn’t rumored at all. And, I don’t know if you noticed, but the iPod turned out pretty OK.</p>\n</blockquote>\n\n<p>But what about rumor-sites? Well, they seem utterly clueless. They are chasing after anything and everything that comes out of east-Asia or an analyst&#8217;s mouth. Not the most reliable sources, I say. There is no clear trajectory in sight so, no weights are assigned to any particular category of rumors. This makes everything, from <a href=\"http://www.forbes.com/sites/timworstall/2013/04/04/is-this-apples-itv-screen-ipad-and-iring/\">asinine</a> to <a href=\"http://daringfireball.net/2012/05/bigger_display_iphone_thing_wwdc\">plausible</a>, equally (un)important. This is distracting and inhibits deeper thought<a href=\"#fn:4\" id=\"fnref:4\" title=\"see footnote\" class=\"footnote\">[4]</a>. Speculations are shallow and analysis is bleak. This ought to make any reporting insipid. And that is where we are.</p>\n\n<p>So, is this lack of &#8220;good&#8221; rumors a sign of the fabled doomsday for Apple<a href=\"#fn:5\" id=\"fnref:5\" title=\"see footnote\" class=\"footnote\">[5]</a>? I will let Moltz tell you:</p>\n\n<blockquote>\n<p>So, while we might be flying blind right now, don’t assume that means Apple has nothing planned. And don’t assume that what is planned is anything you’ve heard as a rumor. Before the iPod came out, nobody had any idea what it was. Before the iPhone came out, no one had any idea what it would look like, let alone how transformative it would be. A year before the iPad came out, people were speculating about an Apple netbook, for crying out loud.</p>\n</blockquote>\n\n<p><a href=\"http://www.macworld.com/article/2036307/the-sad-state-of-apple-rumors.html\">Get reading →</a></p>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n\n<li id=\"fn:1\">\n<p>I will bar the Apple TV from this list. <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\n</li>\n\n<li id=\"fn:2\">\n<p>Though what made iPhone, <em>the</em> iPhone were <a href=\"http://www.youtube.com/watch?v=x7qPAY9JqE4&amp;feature=youtu.be&amp;t=2m28s\">the 3 things</a>. <a href=\"#fnref:2\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\n</li>\n\n<li id=\"fn:3\">\n<p>Let&#8217;s call a spade, a spade. Beta today means half-assed. And Google, aces at betas, in every sense of the word. I will also include Siri. <a href=\"#fnref:3\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\n</li>\n\n<li id=\"fn:4\">\n<p>Though, at times, I wonder if thought and reason is a vanishing skill in tech-journalism. <a href=\"#fnref:4\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\n</li>\n\n<li id=\"fn:5\">\n<p>Well <a href=\"http://beta.fool.com/joekurtz/2013/04/29/samsungs-mediocre-s4-reviews-are-bad-news-for-appl/32639/?source=eogyholnk0000001\">what</a> is not? <a href=\"#fnref:5\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\n</li>\n\n</ol>\n</div>","html":"<p>John Moltz (<a href=\"http://verynicewebsite.net/\">Very Nice Web Site</a> fame) <a href=\"http://www.macworld.com/article/2036307/the-sad-state-of-apple-rumors.html\">writes</a> about the sate of Apple rumors today and the &#8220;glory days&#8221; of the iPhone/iPad stories:</p>\n\n<blockquote>  \n<p>It’s a weird time for those of us who’ve followed Apple rumors for years. (And I&#8217;m not the only one <a href=\"http://www.muleradio.net/thetalkshow/37/\">who has noticed</a>.) At the risk of sounding like your prototypical hipster, today’s rumors just aren’t as good as they used to be.</p>  \n</blockquote>\n\n<p>Given that Apple rumors are a full-time job for so many bloggers, and form a significant portion of tech-news coverage, it is worth thinking over their state of being. As Moltz points out, most rumors today, the iWatch, the iRing, the iCar, are just not that fun<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a>. I believe I know why.</p>\n\n<h3>The era of the obvious</h3>\n\n<p>When the iPhone and the iPad rumors were gaining traction, these then-rumored products seemed like very plausible successors to the iPod. With the iPod, Apple made one of the most important aspects of computing mobile: music. As it grew into an increasingly more capable device, it became indispensable alongside cellphones. Looking back, it seems logical that Apple would pursue to unify those two things<a href=\"#fn:2\" id=\"fnref:2\" title=\"see footnote\" class=\"footnote\">[2]</a>. The iPad was a long-rumored, fictional device which seemed an obvious extension of the iPhone past 2007. These logical insights made mulling over them for years fruitful. The theme here is that the bygone &#8220;legendary&#8221; decade of rumors was built on top of the obvious. Today, nothing is.</p>\n\n<h3>What&#8217;s next? Who knows!</h3>\n\n<p>Today, there seems to be a consensus that the next phase in consumer-technology is wearable-tech. Google is pursuing it with half-assed<a href=\"#fn:3\" id=\"fnref:3\" title=\"see footnote\" class=\"footnote\">[3]</a> glasses. There seems to be an increased interest in fitness-tracking devices with startups leading the charge. But, if one tries to extrapolate, there doesn&#8217;t seem to be an obvious line of progress. This is not unlike before the iPod was announced. In Moltz&#8217;s words:</p>\n\n<blockquote>  \n<p>Well, if you were paying attention, you might have noticed that I left out one highly successful Apple product of the 2000s, a device that wasn’t part of the rumor trinity: the iPod. The iPod came out in October of 2001 and was something of a surprise to everybody. Rumors of an Apple digital music player had only sprung up about a week before it was unveiled. Before any of those storied Apple rumors above came to fruition, we got a product that wasn’t rumored at all. And, I don’t know if you noticed, but the iPod turned out pretty OK.</p>  \n</blockquote>\n\n<p>But what about rumor-sites? Well, they seem utterly clueless. They are chasing after anything and everything that comes out of east-Asia or an analyst&#8217;s mouth. Not the most reliable sources, I say. There is no clear trajectory in sight so, no weights are assigned to any particular category of rumors. This makes everything, from <a href=\"http://www.forbes.com/sites/timworstall/2013/04/04/is-this-apples-itv-screen-ipad-and-iring/\">asinine</a> to <a href=\"http://daringfireball.net/2012/05/bigger_display_iphone_thing_wwdc\">plausible</a>, equally (un)important. This is distracting and inhibits deeper thought<a href=\"#fn:4\" id=\"fnref:4\" title=\"see footnote\" class=\"footnote\">[4]</a>. Speculations are shallow and analysis is bleak. This ought to make any reporting insipid. And that is where we are.</p>\n\n<p>So, is this lack of &#8220;good&#8221; rumors a sign of the fabled doomsday for Apple<a href=\"#fn:5\" id=\"fnref:5\" title=\"see footnote\" class=\"footnote\">[5]</a>? I will let Moltz tell you:</p>\n\n<blockquote>  \n<p>So, while we might be flying blind right now, don’t assume that means Apple has nothing planned. And don’t assume that what is planned is anything you’ve heard as a rumor. Before the iPod came out, nobody had any idea what it was. Before the iPhone came out, no one had any idea what it would look like, let alone how transformative it would be. A year before the iPad came out, people were speculating about an Apple netbook, for crying out loud.</p>  \n</blockquote>\n\n<p><a href=\"http://www.macworld.com/article/2036307/the-sad-state-of-apple-rumors.html\">Get reading →</a></p>\n\n<div class=\"footnotes\">  \n<hr />  \n<ol>\n\n<li id=\"fn:1\">  \n<p>I will bar the Apple TV from this list. <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n<li id=\"fn:2\">  \n<p>Though what made iPhone, <em>the</em> iPhone were <a href=\"http://www.youtube.com/watch?v=x7qPAY9JqE4&amp;feature=youtu.be&amp;t=2m28s\">the 3 things</a>. <a href=\"#fnref:2\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n<li id=\"fn:3\">  \n<p>Let&#8217;s call a spade, a spade. Beta today means half-assed. And Google, aces at betas, in every sense of the word. I will also include Siri. <a href=\"#fnref:3\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n<li id=\"fn:4\">  \n<p>Though, at times, I wonder if thought and reason is a vanishing skill in tech-journalism. <a href=\"#fnref:4\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n<li id=\"fn:5\">  \n<p>Well <a href=\"http://beta.fool.com/joekurtz/2013/04/29/samsungs-mediocre-s4-reviews-are-bad-news-for-appl/32639/?source=eogyholnk0000001\">what</a> is not? <a href=\"#fnref:5\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n</ol>  \n</div>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1367541257000,"created_by":1,"updated_at":1367545443000,"updated_by":1,"published_at":1367541257000,"published_by":1},{"id":47,"uuid":"9e07efca-3f84-48ff-8863-8faccd385305","title":"A Primer on Messages.app","slug":"a-primer-on-messages-app","markdown":"<p>This morning I finally got around to looking into my grievances with Messages.app. It is one of the few always-on apps on my Mac, besides Tweetbot, Reeder and a tiny collection of menu-bar utilities. Here, I am listing some ways to make Messages.app work better, especially if you like doing things with your keyboard.</p>\r\n\r\n<h3>Keyboard Shortcuts</h3>\r\n\r\n<p>Besides some of the standard OS-wide shortcuts, Messages.app features some handy others:</p>\r\n\r\n<ul>\r\n<li>Cycle thru conversations: <strong>⌘+[</strong> or <strong>⌘+]</strong>.\r\nThis is something I need to do very frequently, and I hate shortcuts with square brackets for being unintuitive<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a>. So, I created custom keybindings to accomplish moving thru conversations. <a href=\"http://spinhalf.net/wp-content/uploads/2013/05/Screen_Shot_2013-05-05_at_7.09.59_PM.png\">Here</a> is a skitch edit showing how to do so. I chose <strong>⌘+⌥+↑</strong> and <strong>⌘+⌥+↓</strong> for this<a href=\"#fn:2\" id=\"fnref:2\" title=\"see footnote\" class=\"footnote\">[2]</a>.\r\nThere is also a great Alfred Workflow to help you jump to any conversation with a keyword and buddy name. Find it <a href=\"http://www.alfredforum.com/topic/1168-imessage-focus-with-part-of-namehandle/\">here→</a>.</li>\r\n<li>Insert a new line: <strong>⌥+return</strong></li>\r\n<li>Insert emojis using OS X&#8217;s built in Characters palette: <strong>⌥+⌘+T</strong></li>\r\n<li>Insert previously sent messages: <strong>⌥+↑</strong> or <strong>⌥+↓</strong> with focus on text-field.</li>\r\n<li>Scroll to top: <strong>⌘+↑</strong> with focus off the text-field.</li>\r\n<li>Mark the conversation with a timestamp: <strong>⇧+⌘+K</strong></li>\r\n<li>Send a file: <strong>⌥+⌘+F</strong></li>\r\n<li>See file transfer status: <strong>⌥+⌘+L</strong></li>\r\n<li>Search thru all messages: <strong>⌘+F</strong>. Be vary of significant beach-balling and CPU usage if your messages archive is huge (3.8GB for me).</li>\r\n</ul>\r\n\r\n<h3>Memory Leaks</h3>\r\n\r\n<p>Messages.app has quite a few memory leaks, particularly in IMTransferAgent. It is generally active during file transfers and quits once all of them are done. If you find yourselves not receiving files after a normal wait, try killing the IMTransferAgent process in Activity Monitor.</p>\r\n\r\n<p>Another easy way to address memory leaks is to restart the app periodically. At times, Messages can start consuming a lot of CPU cycles for no apparent reason. That&#8217;s when you know that it&#8217;s time to take the dog out in the woods.</p>\r\n\r\n<div class=\"footnotes\">\r\n<hr />\r\n<ol>\r\n\r\n<li id=\"fn:1\">\r\n<p>My memory isn&#8217;t geared towards remembering keyboard shortcuts. The reason I prefer Alfred over Keyboard Maestro, which would be faster for obvious reasons, is that there is no way for me to memorize more than a few shortcuts. So, when I do resort to a custom shortcut, I want it to be intuitive. Using arrows to move between tabs is just such a no-brainer. <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\r\n</li>\r\n\r\n<li id=\"fn:2\">\r\n<p>In fact, I am using the ⌥+⌘+{arrow} combination across any app where I move between tabs a lot. Like Safari, where I use <strong>⌘+⌥+→</strong> and <strong>⌘+⌥+←</strong>. <a href=\"#fnref:2\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\r\n</li>\r\n\r\n</ol>\r\n</div>","html":"<p>This morning I finally got around to looking into my grievances with Messages.app. It is one of the few always-on apps on my Mac, besides Tweetbot, Reeder and a tiny collection of menu-bar utilities. Here, I am listing some ways to make Messages.app work better, especially if you like doing things with your keyboard.</p>\n\n<h3>Keyboard Shortcuts</h3>\n\n<p>Besides some of the standard OS-wide shortcuts, Messages.app features some handy others:</p>\n\n<ul>  \n<li>Cycle thru conversations: <strong>⌘+[</strong> or <strong>⌘+]</strong>.  \nThis is something I need to do very frequently, and I hate shortcuts with square brackets for being unintuitive<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a>. So, I created custom keybindings to accomplish moving thru conversations. <a href=\"http://spinhalf.net/wp-content/uploads/2013/05/Screen_Shot_2013-05-05_at_7.09.59_PM.png\">Here</a> is a skitch edit showing how to do so. I chose <strong>⌘+⌥+↑</strong> and <strong>⌘+⌥+↓</strong> for this<a href=\"#fn:2\" id=\"fnref:2\" title=\"see footnote\" class=\"footnote\">[2]</a>.  \nThere is also a great Alfred Workflow to help you jump to any conversation with a keyword and buddy name. Find it <a href=\"http://www.alfredforum.com/topic/1168-imessage-focus-with-part-of-namehandle/\">here→</a>.</li>  \n<li>Insert a new line: <strong>⌥+return</strong></li>  \n<li>Insert emojis using OS X&#8217;s built in Characters palette: <strong>⌥+⌘+T</strong></li>  \n<li>Insert previously sent messages: <strong>⌥+↑</strong> or <strong>⌥+↓</strong> with focus on text-field.</li>  \n<li>Scroll to top: <strong>⌘+↑</strong> with focus off the text-field.</li>  \n<li>Mark the conversation with a timestamp: <strong>⇧+⌘+K</strong></li>  \n<li>Send a file: <strong>⌥+⌘+F</strong></li>  \n<li>See file transfer status: <strong>⌥+⌘+L</strong></li>  \n<li>Search thru all messages: <strong>⌘+F</strong>. Be vary of significant beach-balling and CPU usage if your messages archive is huge (3.8GB for me).</li>  \n</ul>\n\n<h3>Memory Leaks</h3>\n\n<p>Messages.app has quite a few memory leaks, particularly in IMTransferAgent. It is generally active during file transfers and quits once all of them are done. If you find yourselves not receiving files after a normal wait, try killing the IMTransferAgent process in Activity Monitor.</p>\n\n<p>Another easy way to address memory leaks is to restart the app periodically. At times, Messages can start consuming a lot of CPU cycles for no apparent reason. That&#8217;s when you know that it&#8217;s time to take the dog out in the woods.</p>\n\n<div class=\"footnotes\">  \n<hr />  \n<ol>\n\n<li id=\"fn:1\">  \n<p>My memory isn&#8217;t geared towards remembering keyboard shortcuts. The reason I prefer Alfred over Keyboard Maestro, which would be faster for obvious reasons, is that there is no way for me to memorize more than a few shortcuts. So, when I do resort to a custom shortcut, I want it to be intuitive. Using arrows to move between tabs is just such a no-brainer. <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n<li id=\"fn:2\">  \n<p>In fact, I am using the ⌥+⌘+{arrow} combination across any app where I move between tabs a lot. Like Safari, where I use <strong>⌘+⌥+→</strong> and <strong>⌘+⌥+←</strong>. <a href=\"#fnref:2\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n</ol>  \n</div>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1367789976000,"created_by":1,"updated_at":1367789976000,"updated_by":1,"published_at":1367789976000,"published_by":1},{"id":48,"uuid":"8ab9f38d-bde8-442f-a0f9-85f2770ab38c","title":"Byword β review","slug":"byword-ceb2-review","markdown":"<p>I had some time with the β and I love the publishing feature. A few things I noticed:</p>\n\n<ol>\n<li>In the &quot;Publishing Preferences screen, icons in the list aren&#8217;t retina optimized. http://cl.ly/OmvF</li>\n<li>For posting to Wordpress blogs, the &#8220;Post Format&#8221; selector is getting increasingly more important. Bloggers like Vitici and myself are using it for link-blogging. I am glad that you added the ability to set &#8220;Custom-Fields&#8221;; it&#8217;d be even better if you can identify and display custom-fields which already exist in functions.php (Poster on iOS does this).</li>\n<li>The β broke my Alfred workflow to preview things in Marked. Even a system-wide service shortcut would not work. I believe, as stated in release notes, this is a consequence of Sandboxing. Could there be better Marked integration in the app? Less clunky than how UIII does it, but on similar lines. Marked is quite essential to my workflow. I use it to do some custom stuff to my HTML like adding anchor-links to each paragraph and light-box class to images. Even when not doing all that, preview in Marked is just great! (I have also defined a custom stylesheet to mimic my blog and thus Marked shows exactly how things would look on http://spinhalf.net).</li>\n</ol>\n\n<h3>Fonts:</h3>\n\n<p>I have lately been using monospaced fonts for writing even in Byword for Mac. My favorite here is Menlo Regular at 15pts. So, I love the new font choices in the iOS β.</p>\n\n<p>I find 16pt to be the best font-size for all the 4 fonts on the iPhone. However, there is a lot of padding on the iPhone. the Screen is pretty tiny itself and padding further eats into it. I really like the padding in the current public release. On the iPad, I have always wanted to send feedback on the padding. With regular fonts, the padding looks nice, however, with monospaced fonts, which have large char and word spaces, please consider reducing the padding to about 75% of what it currently is.\nAlso, some font-specific suggestions:</p>\n\n<ol>\n<li>AtlasTypewriter: This is my favorite of the 4 fonts, but word-spacing is quite extreme. Looks really scattered.</li>\n<li>FedraMonoPro: Again, on the iPhone a little reduction in word-spacing might look better.</li>\n<li>FedraAltSans: I think the character spacing is too little. A tiny increase might make the font look a bit less busy.</li>\n</ol>\n\n<p>Another thing I want to note, and this isn&#8217;t specific to the beta: while creating lists following a paragraph, one has to leave a blank line or the list will not be parsed as a list in HTML export. I understand the limitation comes from MD. However, a visual clue for this in syntax highlighting could help avoid such mistakes. For instance, if I forget to leave a line blank, Byword does not dim the list bullets/numbers. This way I know that the current list isn&#8217;t being parsed right by ByWord and I need to fix something.</p>","html":"<p>I had some time with the β and I love the publishing feature. A few things I noticed:</p>\n\n<ol>  \n<li>In the &quot;Publishing Preferences screen, icons in the list aren&#8217;t retina optimized. <a href='http://cl.ly/OmvF'>http://cl.ly/OmvF</a></li>  \n<li>For posting to Wordpress blogs, the &#8220;Post Format&#8221; selector is getting increasingly more important. Bloggers like Vitici and myself are using it for link-blogging. I am glad that you added the ability to set &#8220;Custom-Fields&#8221;; it&#8217;d be even better if you can identify and display custom-fields which already exist in functions.php (Poster on iOS does this).</li>  \n<li>The β broke my Alfred workflow to preview things in Marked. Even a system-wide service shortcut would not work. I believe, as stated in release notes, this is a consequence of Sandboxing. Could there be better Marked integration in the app? Less clunky than how UIII does it, but on similar lines. Marked is quite essential to my workflow. I use it to do some custom stuff to my HTML like adding anchor-links to each paragraph and light-box class to images. Even when not doing all that, preview in Marked is just great! (I have also defined a custom stylesheet to mimic my blog and thus Marked shows exactly how things would look on <a href='http://spinhalf.net'>http://spinhalf.net</a>).</li>  \n</ol>\n\n<h3>Fonts:</h3>\n\n<p>I have lately been using monospaced fonts for writing even in Byword for Mac. My favorite here is Menlo Regular at 15pts. So, I love the new font choices in the iOS β.</p>\n\n<p>I find 16pt to be the best font-size for all the 4 fonts on the iPhone. However, there is a lot of padding on the iPhone. the Screen is pretty tiny itself and padding further eats into it. I really like the padding in the current public release. On the iPad, I have always wanted to send feedback on the padding. With regular fonts, the padding looks nice, however, with monospaced fonts, which have large char and word spaces, please consider reducing the padding to about 75% of what it currently is.  \nAlso, some font-specific suggestions:</p>\n\n<ol>  \n<li>AtlasTypewriter: This is my favorite of the 4 fonts, but word-spacing is quite extreme. Looks really scattered.</li>  \n<li>FedraMonoPro: Again, on the iPhone a little reduction in word-spacing might look better.</li>  \n<li>FedraAltSans: I think the character spacing is too little. A tiny increase might make the font look a bit less busy.</li>  \n</ol>\n\n<p>Another thing I want to note, and this isn&#8217;t specific to the beta: while creating lists following a paragraph, one has to leave a blank line or the list will not be parsed as a list in HTML export. I understand the limitation comes from MD. However, a visual clue for this in syntax highlighting could help avoid such mistakes. For instance, if I forget to leave a line blank, Byword does not dim the list bullets/numbers. This way I know that the current list isn&#8217;t being parsed right by ByWord and I need to fix something.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1367877699000,"created_by":1,"updated_at":1368104084000,"updated_by":1,"published_at":null,"published_by":1},{"id":49,"uuid":"87e320d8-ebc6-4706-a89a-800d1dfd961b","title":"No Compromises","slug":"no-compromises","markdown":"Microsoft does not learn.","html":"<p>Microsoft does not learn.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1368064154000,"created_by":1,"updated_at":1368064408000,"updated_by":1,"published_at":1368064154000,"published_by":1},{"id":50,"uuid":"2840a107-1f85-4c00-9c32-a4f624646a52","title":"Agenda","slug":"agenda","markdown":"Just makes me wonder that there is a grand scheme in play to lambaste Apple and $AAPL.","html":"<p>Just makes me wonder that there is a grand scheme in play to lambaste Apple and $AAPL.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1368093713000,"created_by":1,"updated_at":1368093713000,"updated_by":1,"published_at":1368093713000,"published_by":1},{"id":51,"uuid":"a60250d3-67ab-4845-b131-d28e7d4d14ac","title":"Problem with The Magazine","slug":"problem-with-the-magazine","markdown":"<p>I have been wondering about the state of Marco Arment&#8217;s <a href=\"http://stackoverflow.com/questions/3690167/how-can-one-invoke-a-keyboard-shortcut-from-within-an-applescript\">The Magazine</a> lately and wanted to write about it. However, <a href=\"https://twitter.com/NathanJLiu\">Nathan Liu</a> beat me to it. As Nathan <a href=\"http://remarked.co/683/the-problem-with-the-magazine/\">puts it</a>:</p>\n\n<blockquote>\n<p>&#8230;articles are too ‘out there’, too niche, and have recently failed to grab my wandering attention. When I get into an article, I always enjoy it, even if it is about something I never would usually read about, but these niche topics have to compete with the entirety of the web, which happens to sit right alongside it on the iPad. They just aren’t enticing, and there are other pieces I’d rather read, and topics I’d prefer to study.</p>\n</blockquote>\n\n<p>To which, The Magazine&#8217;s editor <a href=\"https://twitter.com/GlennF\">Glenn Fleishman</a> responded in comments:</p>\n\n<blockquote>\n<p>Marco started the Magazine to offer writing that wasn’t precisely found everywhere else. Over time, we’ve evolved to what you’re saying: trying to find subjects for a readership that is inured to and maybe tired of finding an infinity of topics (often rehashed) that have a specific appeal to their existing interests. We’re billed now as for “curious people,” and that’s true. Without putting us in the same league as the New Yorker, I would argue that is what it does well and we aspire to: to surprise people even with ordinary subjects, and to enlighten people about stuff they simply don’t know about.</p>\n</blockquote>\n\n<p>Here is <a href=\"http://remarked.co/683/the-problem-with-the-magazine/\">Nathan&#8217;s piece →</a></p>","html":"<p>I have been wondering about the state of Marco Arment&#8217;s <a href=\"http://stackoverflow.com/questions/3690167/how-can-one-invoke-a-keyboard-shortcut-from-within-an-applescript\">The Magazine</a> lately and wanted to write about it. However, <a href=\"https://twitter.com/NathanJLiu\">Nathan Liu</a> beat me to it. As Nathan <a href=\"http://remarked.co/683/the-problem-with-the-magazine/\">puts it</a>:</p>\n\n<blockquote>  \n<p>&#8230;articles are too ‘out there’, too niche, and have recently failed to grab my wandering attention. When I get into an article, I always enjoy it, even if it is about something I never would usually read about, but these niche topics have to compete with the entirety of the web, which happens to sit right alongside it on the iPad. They just aren’t enticing, and there are other pieces I’d rather read, and topics I’d prefer to study.</p>  \n</blockquote>\n\n<p>To which, The Magazine&#8217;s editor <a href=\"https://twitter.com/GlennF\">Glenn Fleishman</a> responded in comments:</p>\n\n<blockquote>  \n<p>Marco started the Magazine to offer writing that wasn’t precisely found everywhere else. Over time, we’ve evolved to what you’re saying: trying to find subjects for a readership that is inured to and maybe tired of finding an infinity of topics (often rehashed) that have a specific appeal to their existing interests. We’re billed now as for “curious people,” and that’s true. Without putting us in the same league as the New Yorker, I would argue that is what it does well and we aspire to: to surprise people even with ordinary subjects, and to enlighten people about stuff they simply don’t know about.</p>  \n</blockquote>\n\n<p>Here is <a href=\"http://remarked.co/683/the-problem-with-the-magazine/\">Nathan&#8217;s piece →</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1368112201000,"created_by":1,"updated_at":1368112201000,"updated_by":1,"published_at":1368112201000,"published_by":1},{"id":52,"uuid":"3ca0e791-817b-4b43-a3c0-5ad743120b0a","title":"iPhone camera, a differential look","slug":"iphone-camera-a-differential-look","markdown":"<p>In the wake of a new <a href=\"http://youtu.be/NoVW62mwSQQ\">iPhone commercial</a> featuring the camera, <a href=\"http://i.imgur.com/5q7UHwJ.jpg\">this image</a> tells quite a story. The jump from 3G camera to the 3GS is <strong>stark</strong>.</p>\n\n<p>(Hat tip: <a href=\"http://www.cultofmac.com/226883/heres-how-much-the-iphone-camera-has-improved-and-the-images-to-prove-it/\">CultOfMac</a>)</p>","html":"<p>In the wake of a new <a href=\"http://youtu.be/NoVW62mwSQQ\">iPhone commercial</a> featuring the camera, <a href=\"http://i.imgur.com/5q7UHwJ.jpg\">this image</a> tells quite a story. The jump from 3G camera to the 3GS is <strong>stark</strong>.</p>\n\n<p>(Hat tip: <a href=\"http://www.cultofmac.com/226883/heres-how-much-the-iphone-camera-has-improved-and-the-images-to-prove-it/\">CultOfMac</a>)</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1368139821000,"created_by":1,"updated_at":1368140026000,"updated_by":1,"published_at":1368139821000,"published_by":1},{"id":53,"uuid":"9e8d40e7-656b-4a82-b7df-0d278f75c1a8","title":"This is water","slug":"this-is-water","markdown":"A beautiful adaptation of David Foster Wallace's Kenyon College commencement speech. \r\n\r\n\r\n<blockquote>It is about the real value of a real education, which has almost nothing to do with knowledge, and everything to do with simple awareness; awareness of what is so real and essential, so hidden in plain sight all around us, all the time, that we have to keep reminding ourselves over and over:\r\n\r\n\"This is water.\"\r\n\r\n\"This is water.\"\r\n</blockquote>\r\n\r\n(Hat tip: <a href=\"http://daringfireball.net/linked/2013/05/10/this-is-water\">Daring Fireball</a>)","html":"<p>A beautiful adaptation of David Foster Wallace's Kenyon College commencement speech. </p>\n\n<blockquote>It is about the real value of a real education, which has almost nothing to do with knowledge, and everything to do with simple awareness; awareness of what is so real and essential, so hidden in plain sight all around us, all the time, that we have to keep reminding ourselves over and over:\n\n\"This is water.\"\n\n\"This is water.\"  \n</blockquote>\n\n<p>(Hat tip: <a href=\"http://daringfireball.net/linked/2013/05/10/this-is-water\">Daring Fireball</a>)</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1368172343000,"created_by":1,"updated_at":1368225259000,"updated_by":1,"published_at":1368172343000,"published_by":1},{"id":54,"uuid":"b6e4f716-88d4-4d53-a011-ab159733b3e4","title":"Adobe's Creative Cloud™","slug":"adobes-creative-cloud","markdown":"<p>Wired has that some-customers-are-whining-about-Adobe&#8217;s-business-model-change <a href=\"http://www.wired.com/wiredenterprise/2013/05/adobe-creative-cloud-petition/?cid=co7887814\">story</a>. I was just waiting on it. The point is, all the whining and kicking of feet is in vain. Adobe is a specimen of a monopoly. There is no <em>viable</em> alternative to Photoshop<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a> and even Illustrator<a href=\"#fn:2\" id=\"fnref:2\" title=\"see footnote\" class=\"footnote\">[2]</a> and if you&#8217;re already using these two, it&#8217;s just easy to stay within the ecosystem where there is seamless importing of formats. For users, there is nowhere else to go. So, as long as Adobe stays within the bounds of reason with its pricing, subscription or not, it will not have its cash-flow dry. This makes now to be a great time to switch to a more stable, but atypical and slightly radical model.</p>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n\n<li id=\"fn:1\">\n<p>Pixelmator and GIMP have been steadily improving but currently there is no matching 20 versions worth of iteration and features of Photoshop. PS is a suite in itself. It caters to a very wide audience which hires it for a wide array of solutions. An alternative might have all the <em>major</em> features but it&#8217;s the niche tools that make PS so indispensable. <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\n</li>\n\n<li id=\"fn:2\">\n<p>On the vector-drawing front, there are a lot of good alternatives. While no one app can replace Illustrator, a collection of a few like <a href=\"macappstore://itunes.apple.com/us/app/sketch/id402476602?mt=12&amp;uo=4\">Sketch</a>, <a href=\"macappstore://itunes.apple.com/us/app/idraw/id404705039?mt=12&amp;uo=4\">iDraw</a> and <a href=\"macappstore://itunes.apple.com/us/app/pixelmator/id407963104?mt=12&amp;uo=4\">Pixelmator</a> can just do the trick. However, it is a giant pain to coordinate between apps and to remember which app does what best. So functionally, Illustrator, as of today, stands to be the only app of its caliber.  <a href=\"#fnref:2\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\n</li>\n\n</ol>\n</div>","html":"<p>Wired has that some-customers-are-whining-about-Adobe&#8217;s-business-model-change <a href=\"http://www.wired.com/wiredenterprise/2013/05/adobe-creative-cloud-petition/?cid=co7887814\">story</a>. I was just waiting on it. The point is, all the whining and kicking of feet is in vain. Adobe is a specimen of a monopoly. There is no <em>viable</em> alternative to Photoshop<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a> and even Illustrator<a href=\"#fn:2\" id=\"fnref:2\" title=\"see footnote\" class=\"footnote\">[2]</a> and if you&#8217;re already using these two, it&#8217;s just easy to stay within the ecosystem where there is seamless importing of formats. For users, there is nowhere else to go. So, as long as Adobe stays within the bounds of reason with its pricing, subscription or not, it will not have its cash-flow dry. This makes now to be a great time to switch to a more stable, but atypical and slightly radical model.</p>\n\n<div class=\"footnotes\">  \n<hr />  \n<ol>\n\n<li id=\"fn:1\">  \n<p>Pixelmator and GIMP have been steadily improving but currently there is no matching 20 versions worth of iteration and features of Photoshop. PS is a suite in itself. It caters to a very wide audience which hires it for a wide array of solutions. An alternative might have all the <em>major</em> features but it&#8217;s the niche tools that make PS so indispensable. <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n<li id=\"fn:2\">  \n<p>On the vector-drawing front, there are a lot of good alternatives. While no one app can replace Illustrator, a collection of a few like <a href=\"macappstore://itunes.apple.com/us/app/sketch/id402476602?mt=12&amp;uo=4\">Sketch</a>, <a href=\"macappstore://itunes.apple.com/us/app/idraw/id404705039?mt=12&amp;uo=4\">iDraw</a> and <a href=\"macappstore://itunes.apple.com/us/app/pixelmator/id407963104?mt=12&amp;uo=4\">Pixelmator</a> can just do the trick. However, it is a giant pain to coordinate between apps and to remember which app does what best. So functionally, Illustrator, as of today, stands to be the only app of its caliber.  <a href=\"#fnref:2\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n</ol>  \n</div>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1368254935000,"created_by":1,"updated_at":1368256149000,"updated_by":1,"published_at":1368254935000,"published_by":1},{"id":55,"uuid":"91e8223f-12c4-4910-9159-5c769161fd04","title":"1.1 Billion Dollars of Not Screwing It Up","slug":"1-1-billion-dollars-of-not-screwing-it-up","markdown":"<p>I have to admit, I was <a href=\"https://twitter.com/gravicle/status/336160745555378179\">sad</a> about Yahoo! acquiring Tumblr. It wasn&#8217;t all unwarranted. Yahoo! isn&#8217;t exactly the one with a track record for execution and all it takes to screw-up a vibrant community-driven product like Tumblr is to just sit on it. However, as the day comes to close, things are starting to look a lot different.</p>\n\n<p><a href=\"http://marissamayr.tumblr.com/post/50902274591/im-delighted-to-announce-that-weve-reached-an\">Marissa Meyer&#8217;s announcement letter</a> for the acquisition starts like this (emphasis mine):</p>\n\n<blockquote>\n<p>I’m delighted to announce that we’ve reached an agreement to acquire Tumblr! </p>\n\n<p><em>We promise not to screw it up</em>. Tumblr is incredibly special and has a great thing going. We will operate Tumblr independently. David Karp will remain CEO.</p>\n</blockquote>\n\n<p>While David Karp ends <a href=\"http://staff.tumblr.com/post/50902268806/news\">his</a> quite like this:</p>\n\n<blockquote>\n<p>As always, everything that Tumblr is, we owe to this unbelievable community. We won’t let you down.</p>\n<br/>\n<p>Fuck yeah,</p>\n<p>David</p>\n</blockquote>\n\n<p>Both the companies seem very cognizant of the &#8220;screwing-up&#8221; that might ruin Tumblr. More importantly, the objective of the deal seems to resonate: &#8220;<strong>Tumblr gets better faster</strong>&#8221;. This is a good sign.</p>\n\n<p>Talking of good signs, <a href=\"http://blog.flickr.net/en/2013/05/20/a-better-brighter-flickr/\">Flickr got an overhaul</a> today. While I haven&#8217;t yet spent a lot of time on it, it looks amazing. The timing of the update is impeccable and unmistakable. As Ben Thompson <a href=\"http://stratechery.com/2013/a-better-brighter-flickr/\">puts it</a>:</p>\n\n<blockquote>\n<p>The Flickr redesign was either just finished, or held until this day. It doesn’t matter which it is: finishing by today means internal teams are learning to execute; holding it is even more impressive. It shows that management understood what this announcement could mean [&#8230;], had the patience to sit tight, and the discipline to not leak (too much). Both bode well for Tumblr.</p>\n</blockquote>\n\n<p>With Tumblr, Flickr and the new <a href=\"https://itunes.apple.com/us/app/yahoo!-weather/id628677149?mt=8\">Yahoo! Weather</a> app, I believe we are finally seeing Marissa Meyer&#8217;s Yahoo!.<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a> I wish them the very best<a href=\"#fn:2\" id=\"fnref:2\" title=\"see footnote\" class=\"footnote\">[2]</a>.</p>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n\n<li id=\"fn:1\">\n<p>What&#8217;s with punctuations in the names of companies? <em>Tumblr.</em>, <em>Yahoo!</em>, <em>Toys&#8220;R&#8221;Us</em>, <em>E*TRADE</em>. It&#8217;s weird people. What if there were people named <em>Da*vid</em> or <em>Angela!</em> !? <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\n</li>\n\n<li id=\"fn:2\">\n<p>Google virtually controls the web today. A little competition will hurt no one. <a href=\"#fnref:2\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\n</li>\n\n</ol>\n</div>","html":"<p>I have to admit, I was <a href=\"https://twitter.com/gravicle/status/336160745555378179\">sad</a> about Yahoo! acquiring Tumblr. It wasn&#8217;t all unwarranted. Yahoo! isn&#8217;t exactly the one with a track record for execution and all it takes to screw-up a vibrant community-driven product like Tumblr is to just sit on it. However, as the day comes to close, things are starting to look a lot different.</p>\n\n<p><a href=\"http://marissamayr.tumblr.com/post/50902274591/im-delighted-to-announce-that-weve-reached-an\">Marissa Meyer&#8217;s announcement letter</a> for the acquisition starts like this (emphasis mine):</p>\n\n<blockquote>  \n<p>I’m delighted to announce that we’ve reached an agreement to acquire Tumblr! </p>\n\n<p><em>We promise not to screw it up</em>. Tumblr is incredibly special and has a great thing going. We will operate Tumblr independently. David Karp will remain CEO.</p>  \n</blockquote>\n\n<p>While David Karp ends <a href=\"http://staff.tumblr.com/post/50902268806/news\">his</a> quite like this:</p>\n\n<blockquote>  \n<p>As always, everything that Tumblr is, we owe to this unbelievable community. We won’t let you down.</p>  \n<br/>  \n<p>Fuck yeah,</p>  \n<p>David</p>  \n</blockquote>\n\n<p>Both the companies seem very cognizant of the &#8220;screwing-up&#8221; that might ruin Tumblr. More importantly, the objective of the deal seems to resonate: &#8220;<strong>Tumblr gets better faster</strong>&#8221;. This is a good sign.</p>\n\n<p>Talking of good signs, <a href=\"http://blog.flickr.net/en/2013/05/20/a-better-brighter-flickr/\">Flickr got an overhaul</a> today. While I haven&#8217;t yet spent a lot of time on it, it looks amazing. The timing of the update is impeccable and unmistakable. As Ben Thompson <a href=\"http://stratechery.com/2013/a-better-brighter-flickr/\">puts it</a>:</p>\n\n<blockquote>  \n<p>The Flickr redesign was either just finished, or held until this day. It doesn’t matter which it is: finishing by today means internal teams are learning to execute; holding it is even more impressive. It shows that management understood what this announcement could mean [&#8230;], had the patience to sit tight, and the discipline to not leak (too much). Both bode well for Tumblr.</p>  \n</blockquote>\n\n<p>With Tumblr, Flickr and the new <a href=\"https://itunes.apple.com/us/app/yahoo!-weather/id628677149?mt=8\">Yahoo! Weather</a> app, I believe we are finally seeing Marissa Meyer&#8217;s Yahoo!.<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a> I wish them the very best<a href=\"#fn:2\" id=\"fnref:2\" title=\"see footnote\" class=\"footnote\">[2]</a>.</p>\n\n<div class=\"footnotes\">  \n<hr />  \n<ol>\n\n<li id=\"fn:1\">  \n<p>What&#8217;s with punctuations in the names of companies? <em>Tumblr.</em>, <em>Yahoo!</em>, <em>Toys&#8220;R&#8221;Us</em>, <em>E*TRADE</em>. It&#8217;s weird people. What if there were people named <em>Da*vid</em> or <em>Angela!</em> !? <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n<li id=\"fn:2\">  \n<p>Google virtually controls the web today. A little competition will hurt no one. <a href=\"#fnref:2\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n</ol>  \n</div>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1369090812000,"created_by":1,"updated_at":1369091463000,"updated_by":1,"published_at":1369090812000,"published_by":1},{"id":56,"uuid":"27e84c9f-6cc9-420f-b37a-18f67380ece0","title":"Beautiful CS Icons","slug":"beautiful-cs-icons","markdown":"A simple and gorgeous set of Adobe CS icons from <a href=\"http://jessedodds.com\">Jesse Dodds</a>.\r\n\r\n(I am linking to my upload as I cannot seem to find a link where they're still hosted.)\r\n\r\n(Hat tip: <a href=\"https://twitter.com/_Everaldo/status/337570578926026753\">Everaldo Coelho</a>)","html":"<p>A simple and gorgeous set of Adobe CS icons from <a href=\"http://jessedodds.com\">Jesse Dodds</a>.</p>\n\n<p>(I am linking to my upload as I cannot seem to find a link where they're still hosted.)</p>\n\n<p>(Hat tip: <a href=\"https://twitter.com/_Everaldo/status/337570578926026753\">Everaldo Coelho</a>)</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1369304179000,"created_by":1,"updated_at":1369304179000,"updated_by":1,"published_at":1369304179000,"published_by":1},{"id":57,"uuid":"3a868567-ea1d-47b6-9fbc-7c6ab17e47c7","title":"Music Every Day- iPhone Ad","slug":"music-every-day-iphone-ad","markdown":"Another nice ad from Apple. The theme seems to be shifting from what people <em>can</em> do with their devices to what and <em>how</em> they do those things, simple things.","html":"<p>Another nice ad from Apple. The theme seems to be shifting from what people <em>can</em> do with their devices to what and <em>how</em> they do those things, simple things.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1369345915000,"created_by":1,"updated_at":1369345999000,"updated_by":1,"published_at":1369345915000,"published_by":1},{"id":58,"uuid":"ff91bf20-a5f3-45ce-94fd-344507b6e852","title":"Horace Dediu's Questions for Tim Cook","slug":"horace-dedius-questions-for-coo","markdown":"Horace Dediu lists 4 questions he would like answered by Tim Cook at next week's D11 conference. Basically, they deal with iPhone's lack of variations, carrier penetration, Apple's unusually high cap-ex in 2012 and reliance on Samsung. Such a great set. A lot can be learnt about Apple by asking these questions.\r\n\r\nHorace's list on <a href=\"http://www.asymco.com/2013/05/24/my-questions-for-tim-cook/\">Asymco.com →</a>.","html":"<p>Horace Dediu lists 4 questions he would like answered by Tim Cook at next week's D11 conference. Basically, they deal with iPhone's lack of variations, carrier penetration, Apple's unusually high cap-ex in 2012 and reliance on Samsung. Such a great set. A lot can be learnt about Apple by asking these questions.</p>\n\n<p>Horace's list on <a href=\"http://www.asymco.com/2013/05/24/my-questions-for-tim-cook/\">Asymco.com →</a>.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1369446055000,"created_by":1,"updated_at":1369446055000,"updated_by":1,"published_at":1369446055000,"published_by":1},{"id":59,"uuid":"fa4978fa-cfe9-42d8-b608-ce7890e45e1a","title":"Safari's Stammering Brother: Chrome","slug":"safaris-stammering-brother-chrome","markdown":"<p>This is not another why you should use {insert browser name here} post. Instead it is a log of my experiences as I tried switching to Chrome from Safari.</p>\n\n<p>I have been an avid Safari user and like the browser for most part. However, it has its quirks. Most noticeable is its grind as the number of tabs increase. Chrome, on the other hand, is known to be extremely fast and particularly deft at juggling tabs, many many of them. So, I decided to give it a spin, again. Here are the specifics of the experiment:</p>\n\n<ul>\n<li><strong>Machine</strong>: MackBook Pro with Retina Display, mid 2012.\n\n<ul>\n<li>Processor: 2.3 GHz Intel Core i7</li>\n<li>RAM: 8 (2x4GB) GB 1600 MHz DDR3</li>\n<li>Graphics: Intel HD Graphics 4000 512 MB / NVIDIA GeForce GT 650M 1024 MB</li>\n<li>Display Resolution 1440x900 2x scaled (Retina)</li>\n<li>Storage: Samsung SM256E 256GB SSD (400mbps read/write)</li>\n</ul></li>\n<li><strong>OS</strong>: OS X 10.8.3</li>\n<li><strong>Chrome</strong>: 27.0.1453.93 (Stable)</li>\n<li><strong>Safari</strong>: 6.0.4 (8536.29.13)</li>\n</ul>\n\n<h3>Gripes with Safari</h3>\n\n<p>The single most important reason to move away from Safari was it&#8217;s abysmal performance under heavy load. I have 20&#8211;30 tabs open at a time<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a>. Some tabs might have a video and thus, flash. Safari just halts to a grind even on such a powerful machine.</p>\n\n<h3>Chrome</h3>\n\n<p>There were quite a few things that ticked me off about Chrome. All of this is definitely influenced by Safari and one could argue that I am being hysterical in expecting Chrome to have similar conventions as Safari. Again, these are <strong>my</strong> issues as a switcher and might not apply to you. You might be a better switcher than I am or coming from Chrome side of things. </p>\n\n<ul>\n<li><p>Safari assigns <strong>keyboard shortcuts</strong>, conforming to the pattern ⌘+{number}, to first 9 bookmarks in the bookmarks bar. This is incredibly handy and my default method of sending things to Pinboard and Instapaper. Chrome doesn&#8217;t do so. I found extensions which provide alternate launchers but none that could replicate the functionality. I also tried to set up <a href=\"http://5typos.net/post/6611916064/keyboard-shortcuts-for-bookmarklet-on-google-Chrome\">custom keyboard shortcuts</a> that&#8217;d activate the bookmarklets. However, there is a bug in Chrome that would not let this happen. Then I resorted to creating an <a href=\"https://www.dropbox.com/s/6bmbx5afy71ohsw/Chrome%20Bookmarks.alfredworkflow?v=1mci\">Alfred workflow</a> with GUI scripting to simulate mouse clicks. Federico Viticci has done <a href=\"http://www.macstories.net/links/launch-Chrome-bookmarklets-with-keyboard-shortcuts/\">something similar</a> as well. This sort of addressed the issue. However, there is no automatic updating of shortcuts if the bookmarklets change.</p></li>\n<li><p><strong>Smart Zoom</strong>: Safari, like its iOS counterpart, has smart zoom. Double clicking on an element (text, images etc) with 2 fingers zooms the element, and very elegantly so. Chrome, not so much. The only way to zoom is to use finger-pinching gesture and the result is extremely stuttery. To add to the disgrace, the zoom is applied to every single tab. It&#8217;s a jarring experience. Now, there are <a href=\"https://Chrome.google.com/webstore/detail/smooth-gestures/lfkgmnnajiljnolcgolmmgnecgldgeld?hl=en\">some</a> <a href=\"https://Chrome.google.com/webstore/detail/dblclickzoomin/flcpghpdcjpneanjmojaimmmghnoondg?utm_source=Chrome-ntp-icon\">extensions</a> which emulate Safari but do so horribly.</p></li>\n<li><p><strong>Scrolling and page loading</strong>: Chrome is really fast at loading pages. No doubt. Opening new pages is considerably faster, tabs open quicker and this gives everything a snappy appeal. It beats Safari almost every time and does so noticeably. However, everything appears to be so discreet and rushed. There is no sense of physics to animations. To keep up with scrolling, Chrome would rather skip frames than slow down the scroll. Safari does things the exact opposite way. The result is no less choppy. While loading content, both browsers balk at scrolling but do great otherwise. </p></li>\n<li><p><strong>iCloud sync</strong>: It&#8217;s a no brainer. I use Safari on iOS and thus, loose all sync functions with Chrome. Just an ecosystem issue.</p></li>\n<li><p><strong>Top-sites</strong>: I never liked the idea of setting a home page for a browser. It&#8217;s a massive waste of time and the probability of me requiring to visit that page every single time I open a new tab/window is practically 0. Safari&#8217;s &#8220;Top Sites&#8221; is a great use of that new-tab space. It&#8217;s intelligent and adapts to my use. Chrome, on the other hand, offers a terrible clone and really stupid &#8220;apps&#8221; screen(s). Sincerely, I did not find a single &#8220;app&#8221; that I would want to use. It might be <em>an</em> idea for Chrome OS but for Chrome, it seems worthless.</p></li>\n<li><p><strong>Omni-bar</strong>: Chrome introduced the omni-bar to browsers and I adore it. I was giddy like a little girl when Safari 6 finally shipped with one. However, there are nuances to their implementations. While Safari&#8217;s omnibar <a href=\"http://spinhalf.net/?attachment_id=546\">prioritizes history and bookmarks</a>, <a href=\"http://spinhalf.net/?attachment_id=545\">Chrome&#8217;s does Google suggestive search</a>. In Safari, I enter the first few letters of the name of the site and hit ↩ to be directed to the page I was looking for. It works surprisingly well. Chrome, on the other hand, takes me to Google search results. It is incredibly frustrating. While it is easy to understand the motivation behind the difference, it&#8217;s not a user-centric approach. It adds an extra step between me and the page I am gunning for. </p></li>\n</ul>\n\n<p>All these little things significantly altered my browsing experience. I always felt a little jarred in Chrome while most of the other apps on my Mac would work so elegantly and with finesse. This broke something.</p>\n\n<h3>The thing I love about Chrome</h3>\n\n<p><strong>Performance</strong>. And I am not even talking of page loading. I am referring to app performance: ability to handle more than 10 tabs without slowing down, launching new tabs and windows faster and not killing every single tab when one becomes unresponsive<a href=\"#fn:2\" id=\"fnref:2\" title=\"see footnote\" class=\"footnote\">[2]</a>.</p>\n\n<h3>Designing browsers</h3>\n\n<p>There is nothing simple about making browsers. Web rendering engines have to parse code written by more people in more ways than any other technology and have to be ridiculously fast and resource-constraint while doing so. Rapid iteration and dedicated focus has given Chrome an edge of Safari, so much so that now Safari is allegedly holding Chrome back. At least, that is the justification for the existence of Google&#8217;s Blink rendering engine, a Webkit fork.</p>\n\n<p>Nonetheless, browsers are apps. In fact, they are the most used apps on almost any computer today. They are not exempt from the rules of HIGs and user interactions. Apple certainly excels at that and it shows in Safari. Nothing jumps out of place. There is nothing sudden about it. While for Chrome, the focus seems to be on speed and superfluous &#8220;features&#8221;. Maybe it will come around, but as of today, it is a junky browser.</p>\n\n<p>After a week, I moved back to Safari today.</p>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n\n<li id=\"fn:1\">\n<p>I am not generally lazy with tabs or even a tab-junky. It is just an organic outcome of my workflow while developing websites.  <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\n</li>\n\n<li id=\"fn:2\">\n<p>I realize that this is a consequence of Apple&#8217;s insistence upon using a single process for all the tabs versus Chrome&#8217;s process-tab parity architecture. Apple is wrong here and should adopt Chrome&#8217;s model in future releases (OS X 10.9?). <a href=\"#fnref:2\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\n</li>\n\n</ol>\n</div>","html":"<p>This is not another why you should use {insert browser name here} post. Instead it is a log of my experiences as I tried switching to Chrome from Safari.</p>\n\n<p>I have been an avid Safari user and like the browser for most part. However, it has its quirks. Most noticeable is its grind as the number of tabs increase. Chrome, on the other hand, is known to be extremely fast and particularly deft at juggling tabs, many many of them. So, I decided to give it a spin, again. Here are the specifics of the experiment:</p>\n\n<ul>  \n<li><strong>Machine</strong>: MackBook Pro with Retina Display, mid 2012.\n\n<ul>  \n<li>Processor: 2.3 GHz Intel Core i7</li>  \n<li>RAM: 8 (2x4GB) GB 1600 MHz DDR3</li>  \n<li>Graphics: Intel HD Graphics 4000 512 MB / NVIDIA GeForce GT 650M 1024 MB</li>  \n<li>Display Resolution 1440x900 2x scaled (Retina)</li>  \n<li>Storage: Samsung SM256E 256GB SSD (400mbps read/write)</li>  \n</ul></li>  \n<li><strong>OS</strong>: OS X 10.8.3</li>  \n<li><strong>Chrome</strong>: 27.0.1453.93 (Stable)</li>  \n<li><strong>Safari</strong>: 6.0.4 (8536.29.13)</li>  \n</ul>\n\n<h3>Gripes with Safari</h3>\n\n<p>The single most important reason to move away from Safari was it&#8217;s abysmal performance under heavy load. I have 20&#8211;30 tabs open at a time<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a>. Some tabs might have a video and thus, flash. Safari just halts to a grind even on such a powerful machine.</p>\n\n<h3>Chrome</h3>\n\n<p>There were quite a few things that ticked me off about Chrome. All of this is definitely influenced by Safari and one could argue that I am being hysterical in expecting Chrome to have similar conventions as Safari. Again, these are <strong>my</strong> issues as a switcher and might not apply to you. You might be a better switcher than I am or coming from Chrome side of things. </p>\n\n<ul>  \n<li><p>Safari assigns <strong>keyboard shortcuts</strong>, conforming to the pattern ⌘+{number}, to first 9 bookmarks in the bookmarks bar. This is incredibly handy and my default method of sending things to Pinboard and Instapaper. Chrome doesn&#8217;t do so. I found extensions which provide alternate launchers but none that could replicate the functionality. I also tried to set up <a href=\"http://5typos.net/post/6611916064/keyboard-shortcuts-for-bookmarklet-on-google-Chrome\">custom keyboard shortcuts</a> that&#8217;d activate the bookmarklets. However, there is a bug in Chrome that would not let this happen. Then I resorted to creating an <a href=\"https://www.dropbox.com/s/6bmbx5afy71ohsw/Chrome%20Bookmarks.alfredworkflow?v=1mci\">Alfred workflow</a> with GUI scripting to simulate mouse clicks. Federico Viticci has done <a href=\"http://www.macstories.net/links/launch-Chrome-bookmarklets-with-keyboard-shortcuts/\">something similar</a> as well. This sort of addressed the issue. However, there is no automatic updating of shortcuts if the bookmarklets change.</p></li>  \n<li><p><strong>Smart Zoom</strong>: Safari, like its iOS counterpart, has smart zoom. Double clicking on an element (text, images etc) with 2 fingers zooms the element, and very elegantly so. Chrome, not so much. The only way to zoom is to use finger-pinching gesture and the result is extremely stuttery. To add to the disgrace, the zoom is applied to every single tab. It&#8217;s a jarring experience. Now, there are <a href=\"https://Chrome.google.com/webstore/detail/smooth-gestures/lfkgmnnajiljnolcgolmmgnecgldgeld?hl=en\">some</a> <a href=\"https://Chrome.google.com/webstore/detail/dblclickzoomin/flcpghpdcjpneanjmojaimmmghnoondg?utm_source=Chrome-ntp-icon\">extensions</a> which emulate Safari but do so horribly.</p></li>  \n<li><p><strong>Scrolling and page loading</strong>: Chrome is really fast at loading pages. No doubt. Opening new pages is considerably faster, tabs open quicker and this gives everything a snappy appeal. It beats Safari almost every time and does so noticeably. However, everything appears to be so discreet and rushed. There is no sense of physics to animations. To keep up with scrolling, Chrome would rather skip frames than slow down the scroll. Safari does things the exact opposite way. The result is no less choppy. While loading content, both browsers balk at scrolling but do great otherwise. </p></li>  \n<li><p><strong>iCloud sync</strong>: It&#8217;s a no brainer. I use Safari on iOS and thus, loose all sync functions with Chrome. Just an ecosystem issue.</p></li>  \n<li><p><strong>Top-sites</strong>: I never liked the idea of setting a home page for a browser. It&#8217;s a massive waste of time and the probability of me requiring to visit that page every single time I open a new tab/window is practically 0. Safari&#8217;s &#8220;Top Sites&#8221; is a great use of that new-tab space. It&#8217;s intelligent and adapts to my use. Chrome, on the other hand, offers a terrible clone and really stupid &#8220;apps&#8221; screen(s). Sincerely, I did not find a single &#8220;app&#8221; that I would want to use. It might be <em>an</em> idea for Chrome OS but for Chrome, it seems worthless.</p></li>  \n<li><p><strong>Omni-bar</strong>: Chrome introduced the omni-bar to browsers and I adore it. I was giddy like a little girl when Safari 6 finally shipped with one. However, there are nuances to their implementations. While Safari&#8217;s omnibar <a href=\"http://spinhalf.net/?attachment_id=546\">prioritizes history and bookmarks</a>, <a href=\"http://spinhalf.net/?attachment_id=545\">Chrome&#8217;s does Google suggestive search</a>. In Safari, I enter the first few letters of the name of the site and hit ↩ to be directed to the page I was looking for. It works surprisingly well. Chrome, on the other hand, takes me to Google search results. It is incredibly frustrating. While it is easy to understand the motivation behind the difference, it&#8217;s not a user-centric approach. It adds an extra step between me and the page I am gunning for. </p></li>  \n</ul>\n\n<p>All these little things significantly altered my browsing experience. I always felt a little jarred in Chrome while most of the other apps on my Mac would work so elegantly and with finesse. This broke something.</p>\n\n<h3>The thing I love about Chrome</h3>\n\n<p><strong>Performance</strong>. And I am not even talking of page loading. I am referring to app performance: ability to handle more than 10 tabs without slowing down, launching new tabs and windows faster and not killing every single tab when one becomes unresponsive<a href=\"#fn:2\" id=\"fnref:2\" title=\"see footnote\" class=\"footnote\">[2]</a>.</p>\n\n<h3>Designing browsers</h3>\n\n<p>There is nothing simple about making browsers. Web rendering engines have to parse code written by more people in more ways than any other technology and have to be ridiculously fast and resource-constraint while doing so. Rapid iteration and dedicated focus has given Chrome an edge of Safari, so much so that now Safari is allegedly holding Chrome back. At least, that is the justification for the existence of Google&#8217;s Blink rendering engine, a Webkit fork.</p>\n\n<p>Nonetheless, browsers are apps. In fact, they are the most used apps on almost any computer today. They are not exempt from the rules of HIGs and user interactions. Apple certainly excels at that and it shows in Safari. Nothing jumps out of place. There is nothing sudden about it. While for Chrome, the focus seems to be on speed and superfluous &#8220;features&#8221;. Maybe it will come around, but as of today, it is a junky browser.</p>\n\n<p>After a week, I moved back to Safari today.</p>\n\n<div class=\"footnotes\">  \n<hr />  \n<ol>\n\n<li id=\"fn:1\">  \n<p>I am not generally lazy with tabs or even a tab-junky. It is just an organic outcome of my workflow while developing websites.  <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n<li id=\"fn:2\">  \n<p>I realize that this is a consequence of Apple&#8217;s insistence upon using a single process for all the tabs versus Chrome&#8217;s process-tab parity architecture. Apple is wrong here and should adopt Chrome&#8217;s model in future releases (OS X 10.9?). <a href=\"#fnref:2\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n</ol>  \n</div>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1369676295000,"created_by":1,"updated_at":1369702480000,"updated_by":1,"published_at":1369676295000,"published_by":1},{"id":60,"uuid":"3f40cd01-74dc-4326-93bf-182b11fb8e11","title":"Sounds in Alfred Workflows","slug":"sounds-in-alfred-workflows","markdown":"<p>Today I was working on an Alfred workflow to clear my desktop and realized that a sound notification would suit it much better than the Notification Center notification I was using. My workflows are mostly all AppleScripts. So the question was:</p>\r\n\r\n<p><strong>How to play sounds within AppleScripts?</strong></p>\r\n\r\n<p>Looking around on the internet, I stumbled across this Dr. Drang <a href=\"http://www.leancrew.com/all-this/2007/12/playing-sounds-in-applescript/\">post</a>. He uses <a href=\"http://microcosmsoftware.com/playsound/\">Play Sound</a> for its AppleScript dictionary to, well, play sounds. </p>\r\n\r\n<pre><code>tell application &quot;Play Sound&quot;\r\n    play &quot;HD:System:Library:Sounds:Glass.aiff&quot; repeat 1\r\nend tell\r\n</code></pre>\r\n\r\n<p>However, in the comments &#8220;tsinn&#8221; suggested using <code>afplay</code>.</p>\r\n\r\n<blockquote>\r\n<p>use afplay eg: do shell script “afplay /System/Library/Sounds/Submarine.aiff”</p>\r\n</blockquote>\r\n\r\n<p>And this is where I start.</p>\r\n\r\n<h3>Shell Scripts and Sounds in Alfred</h3>\r\n\r\n<p>You can use shell scripts to execute terminal commands without popping open the terminal window. From within an AppleScript, you can execute a shell script with:</p>\r\n\r\n<pre><code>do shell script &quot;--your command here--&quot;\r\n</code></pre>\r\n\r\n<p>For playing sounds, I am using OS X&#8217;s built in command-line audio player, <code>afplay</code><a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a>. You can also find system sounds in <code>/System/Library/Sounds</code> and even more in <code>/System/Library/Components/CoreAudio.component/Contents/Resources/SystemSounds</code>. I copied all of these to my &#8220;Alfred-Resources&#8221; folder in Dropbox and added quite a few more from around the web<a href=\"#fn:2\" id=\"fnref:2\" title=\"see footnote\" class=\"footnote\">[2]</a>. With sound-files at hand, all it takes to play them from within AppleScripts in Alfred workflows is this shell script:</p>\r\n\r\n<pre><code>do shell script &quot;afplay {path to the sound file}&quot;\r\n</code></pre>\r\n\r\n<p>For example, to use the pop system sound<a href=\"#fn:3\" id=\"fnref:3\" title=\"see footnote\" class=\"footnote\">[3]</a>:</p>\r\n\r\n<pre><code>do shell script &quot;afplay /System/Library/Sounds/Pop.aiff&quot;\r\n</code></pre>\r\n\r\n<p>That&#8217;s it!</p>\r\n\r\n<p>Also, <a href=\"http://spinhalf.net/wp-content/uploads/2013/05/Link-Workflows-for-Alfred.zip\">here →</a> is a goody bag with two of my most used extensions for link handling (in Safari and Chrome flavors):</p>\r\n\r\n<ol>\r\n<li>Fetch Safari URL: It retrieves the URL of the front-most tab in Safari, copies it to clipboard as well as pastes it if there is a text-field in focus and finally, leaves a space for you to keep writing. There is another very lovely easter egg in the workflow for ByWord users. Go hunting :)</li>\r\n<li>Tweet link from Safari: It retrieves the URL and the title of the front-most tab in Safari, creates a new tweet in Tweetbot and pastes the title followed by the URL. Then, it goes to the beginning of the tweet, presses ↩ twice, goes to top again and gives you a place to write. If you don&#8217;t add any comments, Twitter simply ignores the line breaks.</li>\r\n</ol>\r\n\r\n<p>Tip: I refrain from using hotkeys (keyboard shortcuts) in Alfred. But if you see some in these workflows, it is because I found a hotkey to be the most efficient way of accomplishing the task. Try using them (you&#8217;ve to set them first) instead of the keywords.</p>\r\n\r\n<div class=\"footnotes\">\r\n<hr />\r\n<ol>\r\n\r\n<li id=\"fn:1\">\r\n<p>You can find out more about <code>afplay</code> from Terminal using <code>afplay -h</code> <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\r\n</li>\r\n\r\n<li id=\"fn:2\">\r\n<p>There are tons of .aiff sounds repositories on the web. This <a href=\"http://stackoverflow.com/questions/167617/where-do-you-get-your-application-sounds-from\">SE page</a> has a great list. <a href=\"#fnref:2\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\r\n</li>\r\n\r\n<li id=\"fn:3\">\r\n<p>I much prefer &#8220;Ink Sound Become Mouse.aif&#8221; in <code>/System/Library/Components/CoreAudio.component/Contents/Resources/SystemSounds/ink</code>. <a href=\"#fnref:3\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\r\n</li>\r\n\r\n</ol>\r\n</div>\r\n","html":"<p>Today I was working on an Alfred workflow to clear my desktop and realized that a sound notification would suit it much better than the Notification Center notification I was using. My workflows are mostly all AppleScripts. So the question was:</p>\n\n<p><strong>How to play sounds within AppleScripts?</strong></p>\n\n<p>Looking around on the internet, I stumbled across this Dr. Drang <a href=\"http://www.leancrew.com/all-this/2007/12/playing-sounds-in-applescript/\">post</a>. He uses <a href=\"http://microcosmsoftware.com/playsound/\">Play Sound</a> for its AppleScript dictionary to, well, play sounds. </p>\n\n<pre><code>tell application &quot;Play Sound&quot;\n    play &quot;HD:System:Library:Sounds:Glass.aiff&quot; repeat 1\nend tell\n</code></pre>\n\n<p>However, in the comments &#8220;tsinn&#8221; suggested using <code>afplay</code>.</p>\n\n<blockquote>  \n<p>use afplay eg: do shell script “afplay /System/Library/Sounds/Submarine.aiff”</p>  \n</blockquote>\n\n<p>And this is where I start.</p>\n\n<h3>Shell Scripts and Sounds in Alfred</h3>\n\n<p>You can use shell scripts to execute terminal commands without popping open the terminal window. From within an AppleScript, you can execute a shell script with:</p>\n\n<pre><code>do shell script &quot;--your command here--&quot;\n</code></pre>\n\n<p>For playing sounds, I am using OS X&#8217;s built in command-line audio player, <code>afplay</code><a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a>. You can also find system sounds in <code>/System/Library/Sounds</code> and even more in <code>/System/Library/Components/CoreAudio.component/Contents/Resources/SystemSounds</code>. I copied all of these to my &#8220;Alfred-Resources&#8221; folder in Dropbox and added quite a few more from around the web<a href=\"#fn:2\" id=\"fnref:2\" title=\"see footnote\" class=\"footnote\">[2]</a>. With sound-files at hand, all it takes to play them from within AppleScripts in Alfred workflows is this shell script:</p>\n\n<pre><code>do shell script &quot;afplay {path to the sound file}&quot;\n</code></pre>\n\n<p>For example, to use the pop system sound<a href=\"#fn:3\" id=\"fnref:3\" title=\"see footnote\" class=\"footnote\">[3]</a>:</p>\n\n<pre><code>do shell script &quot;afplay /System/Library/Sounds/Pop.aiff&quot;\n</code></pre>\n\n<p>That&#8217;s it!</p>\n\n<p>Also, <a href=\"http://spinhalf.net/wp-content/uploads/2013/05/Link-Workflows-for-Alfred.zip\">here →</a> is a goody bag with two of my most used extensions for link handling (in Safari and Chrome flavors):</p>\n\n<ol>  \n<li>Fetch Safari URL: It retrieves the URL of the front-most tab in Safari, copies it to clipboard as well as pastes it if there is a text-field in focus and finally, leaves a space for you to keep writing. There is another very lovely easter egg in the workflow for ByWord users. Go hunting :)</li>  \n<li>Tweet link from Safari: It retrieves the URL and the title of the front-most tab in Safari, creates a new tweet in Tweetbot and pastes the title followed by the URL. Then, it goes to the beginning of the tweet, presses ↩ twice, goes to top again and gives you a place to write. If you don&#8217;t add any comments, Twitter simply ignores the line breaks.</li>  \n</ol>\n\n<p>Tip: I refrain from using hotkeys (keyboard shortcuts) in Alfred. But if you see some in these workflows, it is because I found a hotkey to be the most efficient way of accomplishing the task. Try using them (you&#8217;ve to set them first) instead of the keywords.</p>\n\n<div class=\"footnotes\">  \n<hr />  \n<ol>\n\n<li id=\"fn:1\">  \n<p>You can find out more about <code>afplay</code> from Terminal using <code>afplay -h</code> <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n<li id=\"fn:2\">  \n<p>There are tons of .aiff sounds repositories on the web. This <a href=\"http://stackoverflow.com/questions/167617/where-do-you-get-your-application-sounds-from\">SE page</a> has a great list. <a href=\"#fnref:2\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n<li id=\"fn:3\">  \n<p>I much prefer &#8220;Ink Sound Become Mouse.aif&#8221; in <code>/System/Library/Components/CoreAudio.component/Contents/Resources/SystemSounds/ink</code>. <a href=\"#fnref:3\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n</ol>  \n</div>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1369748909000,"created_by":1,"updated_at":1369748909000,"updated_by":1,"published_at":1369748909000,"published_by":1},{"id":61,"uuid":"6068a8e4-85a4-446e-bf3e-86c7e1a3dd32","title":"On Vesper and Feature Checklists","slug":"on-vesper-and-feature-checklists","markdown":"<p>A couple of days ago, a new note-taking app surfaced in the AppStore, <a href=\"itunes://itunes.apple.com/us/app/vesper/id655895325?mt=8&amp;uo=4\">Vesper</a>. Attached to it were some big names in the tech journalism scene. Following the release, almost instantaneously, the app was all what everyone was talking about. Curiously, it shipped without an iPad version, a Mac client or at least Dropbox (or any, for that matter) sync. I am sure that it will get those things right in the next release. However, it invited a lot of bother, partly from disgruntled developers who perceived the coverage as unfair and partly from &#8220;friends-of-the-app&#8221; disparaging the said developers and some legitimate naysayers. A big argument in favor of the app was that it&#8217;s lack of features is a feature and an indicator of the possession of some metaphorical &#8220;<a href=\"http://daringfireball.net/linked/2013/06/07/marco-vesper\">balls</a>&#8221; and anyone to think otherwise was plummeting into the ghastly dungeons of checklists. This is inane and illogical. </p>\r\n\r\n<p>Feature checklists are little monsters that refuse to die. More so, it&#8217;s the fear of their revival that drives some crazy. However, they were indispensable tools only a few years ago.</p>\r\n\r\n<p>Having defeated Apple in the PC wars, Microsoft went on to encourage and very fastidiously incentivize commoditization of the PC hardware. It brought prices down and drove sales. While the OEMs were grappling onto the last slivers of margin, windows licenses made MS one of the biggest corporations on the planet. This commoditization left little room for experience driven products and OEMs fought to differentiate their offerings with &quot;features<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a>. Naturally, comparison checklists were everywhere.</p>\r\n\r\n<p>Today, when Apple implements a feature, it&#8217;s very well thought-out and of value to a lot of users<a href=\"#fn:2\" id=\"fnref:2\" title=\"see footnote\" class=\"footnote\">[2]</a>. iOS and OS X are mostly free of gimmicks to trick users into choosing these platforms<a href=\"#fn:3\" id=\"fnref:3\" title=\"see footnote\" class=\"footnote\">[3]</a>. This is an example of experience driven product philosophy. When one buys an Apple device they are promised a seamless, Just Works™, experience. They don&#8217;t have to go thru every single feature and compare it with rival offerings. It&#8217;s simple. And the simplicity carries with it the implicit idea of the product being feature complete to drive the said experience. This is why checklists are obsolete for Apple and Apple-inspired companies.</p>\r\n\r\n<p>Circling back to Vesper, it&#8217;s very fair to complain about the lack of essential aspects like sync and data portability from a notes app. A $4.99<a href=\"#fn:4\" id=\"fnref:4\" title=\"see footnote\" class=\"footnote\">[4]</a> one at that. It might get sync sorted out soon and in a few months there might be companion iPad and Mac apps as well, but today, it stands to have none. We buy into a product for what it is today, not for what it could be someday<a href=\"#fn:5\" id=\"fnref:5\" title=\"see footnote\" class=\"footnote\">[5]</a>. The experience isn&#8217;t complete and this calls for an analysis of the cause of it. Hence the feature checklists. </p>\r\n\r\n<p>No one is reverting to the savage old times of the PC era here. And that is all.</p>\r\n\r\n<div class=\"footnotes\">\r\n<hr />\r\n<ol>\r\n\r\n<li id=\"fn:1\">\r\n<p>Not quite unlike the commoditized Android market today. <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\r\n</li>\r\n\r\n<li id=\"fn:2\">\r\n<p>A great example is NFC. Despite very vocal supporters of the nascent technology and competitors&#8217; perceived edge, Apple did not waste resources on it. Come WWDC 2013 and the fancy is dead. <a href=\"#fnref:2\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\r\n</li>\r\n\r\n<li id=\"fn:3\">\r\n<p>Samsung Galaxy S4 anyone?  <a href=\"#fnref:3\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\r\n</li>\r\n\r\n<li id=\"fn:4\">\r\n<p>$4.99 is not pricey but being above the median price, it carries with it the expectation of a complete, well-executed experience.  <a href=\"#fnref:4\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\r\n</li>\r\n\r\n<li id=\"fn:5\">\r\n<p>Case in point, Google TV, Google Play Store and <a href=\"http://parislemon.com/post/14465629011/google-where-the-best-of-everything-is-perpetually-6\">most of all</a> Google ventures aside form services, <a href=\"http://www.computerworld.com/s/article/9238802/Blackberry_CEO_Tablets_are_doomed_\">Blackberry</a> and Android itself. <a href=\"#fnref:5\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\r\n</li>\r\n\r\n</ol>\r\n</div>\r\n","html":"<p>A couple of days ago, a new note-taking app surfaced in the AppStore, <a href=\"itunes://itunes.apple.com/us/app/vesper/id655895325?mt=8&amp;uo=4\">Vesper</a>. Attached to it were some big names in the tech journalism scene. Following the release, almost instantaneously, the app was all what everyone was talking about. Curiously, it shipped without an iPad version, a Mac client or at least Dropbox (or any, for that matter) sync. I am sure that it will get those things right in the next release. However, it invited a lot of bother, partly from disgruntled developers who perceived the coverage as unfair and partly from &#8220;friends-of-the-app&#8221; disparaging the said developers and some legitimate naysayers. A big argument in favor of the app was that it&#8217;s lack of features is a feature and an indicator of the possession of some metaphorical &#8220;<a href=\"http://daringfireball.net/linked/2013/06/07/marco-vesper\">balls</a>&#8221; and anyone to think otherwise was plummeting into the ghastly dungeons of checklists. This is inane and illogical. </p>\n\n<p>Feature checklists are little monsters that refuse to die. More so, it&#8217;s the fear of their revival that drives some crazy. However, they were indispensable tools only a few years ago.</p>\n\n<p>Having defeated Apple in the PC wars, Microsoft went on to encourage and very fastidiously incentivize commoditization of the PC hardware. It brought prices down and drove sales. While the OEMs were grappling onto the last slivers of margin, windows licenses made MS one of the biggest corporations on the planet. This commoditization left little room for experience driven products and OEMs fought to differentiate their offerings with &quot;features<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a>. Naturally, comparison checklists were everywhere.</p>\n\n<p>Today, when Apple implements a feature, it&#8217;s very well thought-out and of value to a lot of users<a href=\"#fn:2\" id=\"fnref:2\" title=\"see footnote\" class=\"footnote\">[2]</a>. iOS and OS X are mostly free of gimmicks to trick users into choosing these platforms<a href=\"#fn:3\" id=\"fnref:3\" title=\"see footnote\" class=\"footnote\">[3]</a>. This is an example of experience driven product philosophy. When one buys an Apple device they are promised a seamless, Just Works™, experience. They don&#8217;t have to go thru every single feature and compare it with rival offerings. It&#8217;s simple. And the simplicity carries with it the implicit idea of the product being feature complete to drive the said experience. This is why checklists are obsolete for Apple and Apple-inspired companies.</p>\n\n<p>Circling back to Vesper, it&#8217;s very fair to complain about the lack of essential aspects like sync and data portability from a notes app. A $4.99<a href=\"#fn:4\" id=\"fnref:4\" title=\"see footnote\" class=\"footnote\">[4]</a> one at that. It might get sync sorted out soon and in a few months there might be companion iPad and Mac apps as well, but today, it stands to have none. We buy into a product for what it is today, not for what it could be someday<a href=\"#fn:5\" id=\"fnref:5\" title=\"see footnote\" class=\"footnote\">[5]</a>. The experience isn&#8217;t complete and this calls for an analysis of the cause of it. Hence the feature checklists. </p>\n\n<p>No one is reverting to the savage old times of the PC era here. And that is all.</p>\n\n<div class=\"footnotes\">  \n<hr />  \n<ol>\n\n<li id=\"fn:1\">  \n<p>Not quite unlike the commoditized Android market today. <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n<li id=\"fn:2\">  \n<p>A great example is NFC. Despite very vocal supporters of the nascent technology and competitors&#8217; perceived edge, Apple did not waste resources on it. Come WWDC 2013 and the fancy is dead. <a href=\"#fnref:2\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n<li id=\"fn:3\">  \n<p>Samsung Galaxy S4 anyone?  <a href=\"#fnref:3\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n<li id=\"fn:4\">  \n<p>$4.99 is not pricey but being above the median price, it carries with it the expectation of a complete, well-executed experience.  <a href=\"#fnref:4\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n<li id=\"fn:5\">  \n<p>Case in point, Google TV, Google Play Store and <a href=\"http://parislemon.com/post/14465629011/google-where-the-best-of-everything-is-perpetually-6\">most of all</a> Google ventures aside form services, <a href=\"http://www.computerworld.com/s/article/9238802/Blackberry_CEO_Tablets_are_doomed_\">Blackberry</a> and Android itself. <a href=\"#fnref:5\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n</ol>  \n</div>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1370746233000,"created_by":1,"updated_at":1370746233000,"updated_by":1,"published_at":1370746233000,"published_by":1},{"id":62,"uuid":"a4d9babb-1886-4538-a33e-ef19f50c1f75","title":"PRISM","slug":"prism","markdown":"To me, Prism's existence isn't incredible, its scale is.\r\n\r\nNSA's prime defense against privacy concerns is internal auditing and their technical inability to process all the collected data. Government auditing itself is self-contradictory and as for technical difficulties, big-data processing is tracing an extreme curve today and it's only a matter of time, and a short one at that, when they can start making meaningful and identifiable inferences form emails and text archives.\r\n\r\nPrivacy is just a dream.","html":"<p>To me, Prism's existence isn't incredible, its scale is.</p>\n\n<p>NSA's prime defense against privacy concerns is internal auditing and their technical inability to process all the collected data. Government auditing itself is self-contradictory and as for technical difficulties, big-data processing is tracing an extreme curve today and it's only a matter of time, and a short one at that, when they can start making meaningful and identifiable inferences form emails and text archives.</p>\n\n<p>Privacy is just a dream.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1370750874000,"created_by":1,"updated_at":1370750916000,"updated_by":1,"published_at":1370750874000,"published_by":1},{"id":63,"uuid":"75e6024c-7642-4b28-9778-f8fd1f28afba","title":"Haswell and the MacBook Pros","slug":"haswell-and-the-macbook-pros","markdown":"<p>AnandTech <a href=\"http://www.anandtech.com/show/6993/intel-iris-pro-5200-graphics-review-core-i74950hq-tested\">reviews</a> the next generation of Intel Haswell graphics, the Intel Iris Pro 5200. It is the prime candidate for this week&#8217;s (speculated) MacBook Pro Retina refresh with i7&#8211;4850HQ at 2.3GHz and i7&#8211;4950HQ at 2.4GHZ base clock speeds.</p>\r\n\r\n<p>The Iris pro seems to be quite competent at non-gaming use and performs extremely well in comparison with other integrated GPUs. While Intel seems to have made quite a stride in GPU performance with Haswell, the Iris Pro does&#8217;t even touch NVIDIA&#8217;s current generation 650M at high quality gaming while the 750M looms on the horizon. For all intents and purposes, gaming is still a turf dominated by discreet, power hungry silicon. But, I am not interested in gaming performance. For me the only important thing is how well these dies perform in Apple&#8217;s notebooks while handling web-browsing and development workloads.</p>\r\n\r\n<h3>MacBook Pro 15 with Retina Display</h3>\r\n\r\n<p>Apple&#8217;s MacBook Pro 15 with Retina display is an incredibly capable machine. I have been using the notebook for an year now and it performs like no other computer I have ever used and it looks <strong>great</strong> while doing so. It has better battery life than my 2012 Air did. Over the past year my workload as a web developer has increased significantly and the device breezes thru hundreds of open files and windows and sessions. Switching between enormous apps is instantaneous and there is no slowdown, almost ever. I cannot be happier with it.</p>\r\n\r\n<p>What will Haswell do to it? While the CPU performance gains are modest in Haswell, it&#8217;s the GPU that&#8217;s going to be the rockstar. Not because it might be better than the 650M but because it is <em>so</em> much better than the integrated 4000HD which the rMBP currently ships with. The 4000 drives the retina display and OS X&#8217;s plush animations well enough but the device switches to the discreet 650M quite often and for many apps. This is not user-noticeable but does hit the battery performance. As Anandtech <a href=\"http://www.anandtech.com/show/6993/intel-iris-pro-5200-graphics-review-core-i74950hq-tested/20\">puts it</a>:</p>\r\n\r\n<blockquote>\r\n<p>In our 15-inch MacBook Pro with Retina Display review we found that simply having the discrete GPU enabled could reduce web browsing battery life by ~25%. </p>\r\n</blockquote>\r\n\r\n<p>This will go away with Haswell and the power consumption gains will be significant.</p>\r\n\r\n<blockquote>\r\n<p>TDP is half of the story with Iris Pro, because the CPU, GPU and eDRAM all fit into the same 47W power envelope. With a discrete GPU, like the 650M, you end up with an extra 45W on top of the CPU’s TDP.</p>\r\n</blockquote>\r\n\r\n<p>And the current CPUs in the rMBP have a TDP of 45W under maximum load. Haswell ought to give a significant boost to battery life (or allow Apple to reduce the physical profile of the notebooks while still managing better battery life than the 2012 Pros).</p>\r\n\r\n<p>So, for the 15&#8220; rMBP, Haswell will bring almost discreet-GPU levels of performance in an integrated, low power Iris Pro. However, it is the 13&#8221; rMBP that is slated to be revolutionized here.</p>\r\n\r\n<h3>Macbook Pro 13 with Retina Display- Reborn</h3>\r\n\r\n<p>Macbook Pro 13 with Retina Display is an odd machine. It lacks a discreet GPU and leaves the task of driving the immense 227ppi 2560×1600 display to the underpowered and paltry Intel HD 4000. This want of transistors bleeds in choppy animations and sluggish scrolling across applications. When asked for a recommendation, rMBP 13 2012 is something I advise people to skid away from. Haswell will change the game for this unfortunate cousin of the 15.</p>\r\n\r\n<p>What Iris Pro means for the 13&#8220; rMBP is 650M levels of performance, all the time, while actually shrinking the power envelope. In short, Haswell will make the 13&#8221; rMBP a real notebook.</p>\r\n\r\n<p>I am excited for this refresh and have made arrangements to upgrade to the the newer 15&quot; rMBP as soon as it launches. </p>\r\n\r\n<p>And now, we <a href=\"http://spinhalf.net/?attachment_id=565\">wait</a> for WWDC!</p>\r\n\r\n<h3>Side Note on MacBook Airs</h3>\r\n\r\n<p>MacBook Airs use 17W TDP &#8220;<a href=\"http://hothardware.com/Reviews/Core-i53427U-Ultra-Low-Voltage-Ivy-Bridge-For-Ultrabooks/\">UltraBook</a>&#8221; processors. The mid 2012 Airs used the i5&#8211;3427U processors with Intel HD 4000 integrated GPU units clocked at <a href=\"http://ark.intel.com/products/64903/\">350MHz</a>, almost half of what the units used in the 13&quot; rMBP, which clock at <a href=\"http://ark.intel.com/products/64900\">650MHz</a>. Even while moving to Haswell, the integrated GPU (HD4400) is a <a href=\"http://www.anandtech.com/show/7047/the-haswell-ultrabook-review-core-i74500u-tested/7\">modest improvement</a> over the HD4000. </p>\r\n\r\n<p>Given that the 650MHz HD4000 from the much higher 45W TDP CPUs can barely drive the 13&quot; Retina Display, there is no practical possibility of the Airs featuring a Retina Display with any 17W TDP CPU in the immediate future.</p>","html":"<p>AnandTech <a href=\"http://www.anandtech.com/show/6993/intel-iris-pro-5200-graphics-review-core-i74950hq-tested\">reviews</a> the next generation of Intel Haswell graphics, the Intel Iris Pro 5200. It is the prime candidate for this week&#8217;s (speculated) MacBook Pro Retina refresh with i7&#8211;4850HQ at 2.3GHz and i7&#8211;4950HQ at 2.4GHZ base clock speeds.</p>\n\n<p>The Iris pro seems to be quite competent at non-gaming use and performs extremely well in comparison with other integrated GPUs. While Intel seems to have made quite a stride in GPU performance with Haswell, the Iris Pro does&#8217;t even touch NVIDIA&#8217;s current generation 650M at high quality gaming while the 750M looms on the horizon. For all intents and purposes, gaming is still a turf dominated by discreet, power hungry silicon. But, I am not interested in gaming performance. For me the only important thing is how well these dies perform in Apple&#8217;s notebooks while handling web-browsing and development workloads.</p>\n\n<h3>MacBook Pro 15 with Retina Display</h3>\n\n<p>Apple&#8217;s MacBook Pro 15 with Retina display is an incredibly capable machine. I have been using the notebook for an year now and it performs like no other computer I have ever used and it looks <strong>great</strong> while doing so. It has better battery life than my 2012 Air did. Over the past year my workload as a web developer has increased significantly and the device breezes thru hundreds of open files and windows and sessions. Switching between enormous apps is instantaneous and there is no slowdown, almost ever. I cannot be happier with it.</p>\n\n<p>What will Haswell do to it? While the CPU performance gains are modest in Haswell, it&#8217;s the GPU that&#8217;s going to be the rockstar. Not because it might be better than the 650M but because it is <em>so</em> much better than the integrated 4000HD which the rMBP currently ships with. The 4000 drives the retina display and OS X&#8217;s plush animations well enough but the device switches to the discreet 650M quite often and for many apps. This is not user-noticeable but does hit the battery performance. As Anandtech <a href=\"http://www.anandtech.com/show/6993/intel-iris-pro-5200-graphics-review-core-i74950hq-tested/20\">puts it</a>:</p>\n\n<blockquote>  \n<p>In our 15-inch MacBook Pro with Retina Display review we found that simply having the discrete GPU enabled could reduce web browsing battery life by ~25%. </p>  \n</blockquote>\n\n<p>This will go away with Haswell and the power consumption gains will be significant.</p>\n\n<blockquote>  \n<p>TDP is half of the story with Iris Pro, because the CPU, GPU and eDRAM all fit into the same 47W power envelope. With a discrete GPU, like the 650M, you end up with an extra 45W on top of the CPU’s TDP.</p>  \n</blockquote>\n\n<p>And the current CPUs in the rMBP have a TDP of 45W under maximum load. Haswell ought to give a significant boost to battery life (or allow Apple to reduce the physical profile of the notebooks while still managing better battery life than the 2012 Pros).</p>\n\n<p>So, for the 15&#8220; rMBP, Haswell will bring almost discreet-GPU levels of performance in an integrated, low power Iris Pro. However, it is the 13&#8221; rMBP that is slated to be revolutionized here.</p>\n\n<h3>Macbook Pro 13 with Retina Display- Reborn</h3>\n\n<p>Macbook Pro 13 with Retina Display is an odd machine. It lacks a discreet GPU and leaves the task of driving the immense 227ppi 2560×1600 display to the underpowered and paltry Intel HD 4000. This want of transistors bleeds in choppy animations and sluggish scrolling across applications. When asked for a recommendation, rMBP 13 2012 is something I advise people to skid away from. Haswell will change the game for this unfortunate cousin of the 15.</p>\n\n<p>What Iris Pro means for the 13&#8220; rMBP is 650M levels of performance, all the time, while actually shrinking the power envelope. In short, Haswell will make the 13&#8221; rMBP a real notebook.</p>\n\n<p>I am excited for this refresh and have made arrangements to upgrade to the the newer 15&quot; rMBP as soon as it launches. </p>\n\n<p>And now, we <a href=\"http://spinhalf.net/?attachment_id=565\">wait</a> for WWDC!</p>\n\n<h3>Side Note on MacBook Airs</h3>\n\n<p>MacBook Airs use 17W TDP &#8220;<a href=\"http://hothardware.com/Reviews/Core-i53427U-Ultra-Low-Voltage-Ivy-Bridge-For-Ultrabooks/\">UltraBook</a>&#8221; processors. The mid 2012 Airs used the i5&#8211;3427U processors with Intel HD 4000 integrated GPU units clocked at <a href=\"http://ark.intel.com/products/64903/\">350MHz</a>, almost half of what the units used in the 13&quot; rMBP, which clock at <a href=\"http://ark.intel.com/products/64900\">650MHz</a>. Even while moving to Haswell, the integrated GPU (HD4400) is a <a href=\"http://www.anandtech.com/show/7047/the-haswell-ultrabook-review-core-i74500u-tested/7\">modest improvement</a> over the HD4000. </p>\n\n<p>Given that the 650MHz HD4000 from the much higher 45W TDP CPUs can barely drive the 13&quot; Retina Display, there is no practical possibility of the Airs featuring a Retina Display with any 17W TDP CPU in the immediate future.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1370797938000,"created_by":1,"updated_at":1370805863000,"updated_by":1,"published_at":1370797938000,"published_by":1},{"id":64,"uuid":"8721067a-045c-4feb-b4d0-b2f30f10db05","title":"(no title)","slug":"572","markdown":"Apple takes its time to get to things. Not because of bureaucracy slowing processes down but because “There are a thousand no’s for every yes”. So, instead of coming up with defensive explanations of why iOS doesn’t do a seemingly logical and useful thing, (and then watch them do so next year<a class=\"footnote\" id=\"fnref:1\" title=\"see footnote\" href=\"#fn:1\">[1]</a>) just believe that they must not have gotten to doing it yet.\r\n<div class=\"footnotes\">\r\n\r\n<hr />\r\n\r\n<ol>\r\n\t<li id=\"fn:1\">iPad Mini, 4-inch iPhone 5, pull-to-refresh, swipe-right to go back (shhhh! NDA) etc. <a class=\"reversefootnote\" title=\"return to article\" href=\"#fnref:1\"> ↩</a></li>\r\n</ol>\r\n</div>","html":"<p>Apple takes its time to get to things. Not because of bureaucracy slowing processes down but because “There are a thousand no’s for every yes”. So, instead of coming up with defensive explanations of why iOS doesn’t do a seemingly logical and useful thing, (and then watch them do so next year<a class=\"footnote\" id=\"fnref:1\" title=\"see footnote\" href=\"#fn:1\">[1]</a>) just believe that they must not have gotten to doing it yet.  </p>\n\n<div class=\"footnotes\">\n\n<hr />\n\n<ol>  \n    <li id=\"fn:1\">iPad Mini, 4-inch iPhone 5, pull-to-refresh, swipe-right to go back (shhhh! NDA) etc. <a class=\"reversefootnote\" title=\"return to article\" href=\"#fnref:1\"> ↩</a></li>\n</ol>  \n</div>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1371129531000,"created_by":1,"updated_at":1371495166000,"updated_by":1,"published_at":1371129531000,"published_by":1},{"id":65,"uuid":"4531af15-de50-46be-8f26-867dd165cfc6","title":"iOS 7 and The state of Design","slug":"ios-7-and-the-state-of-design","markdown":"<p>It is very difficult to quantify, but Apple has an incredible impact on the design community. Most of the design in software (and by derivation, on the web) is inspired by AppStore trends which, in turn, are a function of the Apple design language. The explanation is simple: Apple ushered-in the era of carefully crafted and beautifully designed software and stands to be the gravitational well of fashion in UI design.</p>\r\n\r\n<p>With iOS 7, Apple is starting a new parallel of interactive and content-focused design. I am really excited for iOS and how it turns out to be, but a lot more than that, I am excited for all the apps which beg a re-imagination on iOS7.</p>\r\n\r\n<p>UI designers will have a busy summer. No, not redoing their apps but learning new things. This earmarks the departure of rich visual design and calls for efficient and simple presentation of information through minimalist and thoughtful design.</p>\r\n\r\n<p>The only thing bigger than this to ever happen on the platform was when Apple actually <em>created</em> the platform in 2008.</p>","html":"<p>It is very difficult to quantify, but Apple has an incredible impact on the design community. Most of the design in software (and by derivation, on the web) is inspired by AppStore trends which, in turn, are a function of the Apple design language. The explanation is simple: Apple ushered-in the era of carefully crafted and beautifully designed software and stands to be the gravitational well of fashion in UI design.</p>\n\n<p>With iOS 7, Apple is starting a new parallel of interactive and content-focused design. I am really excited for iOS and how it turns out to be, but a lot more than that, I am excited for all the apps which beg a re-imagination on iOS7.</p>\n\n<p>UI designers will have a busy summer. No, not redoing their apps but learning new things. This earmarks the departure of rich visual design and calls for efficient and simple presentation of information through minimalist and thoughtful design.</p>\n\n<p>The only thing bigger than this to ever happen on the platform was when Apple actually <em>created</em> the platform in 2008.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1371226449000,"created_by":1,"updated_at":1371226865000,"updated_by":1,"published_at":1371226449000,"published_by":1},{"id":66,"uuid":"ddaa9b10-a702-4f87-8ee2-c8c136613f6e","title":"iOS Acquires OS X","slug":"ios-acquires-os-x","markdown":"<p>There have been two very interesting inverse-acquisitions and a third one is on the horizon<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a>.</p>\r\n\r\n<ol>\r\n<li>NeXT acquired Apple: While technically it was the other way around, philosophically, NeXT overtook Apple and brought in Steve who ripped apart the incredulous non-sense that plagued the Apple of the 90s. NeXTSTEP went-on to become the core of OS X which revitalized the Mac and allowed Apple enough financial headroom to do the iPod in 2001. NeXTSTEP is still at the heart of OS X and, more importantly, iOS.</li>\r\n<li>Pixar acquired Disney: This one was way more skewed than NeXT and Apple. Pixar was tiny compared to the aging behemoth that was Disney in 2006. Pixar enamored Disney with its philosophy of <em>innovation for emotion</em>. Today, Disney owes Pixar for bringing it back from the brink of the &#8220;What would Walt do&#8221; epidemic.</li>\r\n</ol>\r\n\r\n<p>Now, we are at the cusp of one such inverse-acquisition, another philosophical one at that. Beginning with OS X Lion, Apple has been bringing things &#8220;Back To The Mac&#8221;. A week ago, iOS 7 took a sharp left turn into a new realm of visual and interaction design and the Mac is set to follow suit. But this time, things will not be &#8220;<em>Patched</em> to the Mac&#8221;.</p>\r\n\r\n<p>iOS was derived from OS X by vehement stripping down of aspects that were deemed inessential to mobile. Now, OS X will be stripped down of the &#8220;cruft&#8221; and will be enveloped by this philosophy of clean, efficient, and content-focused design which originated in iOS 7. </p>\r\n\r\n<p>Apple will no more have two separate OSes.</p>\r\n\r\n<p>Apple will have two different instances of iOS very thoughtfully crafted for different use cases. </p>\r\n\r\n<p>And then, iOS will have acquired OS X.</p>\r\n\r\n<div class=\"footnotes\">\r\n<hr />\r\n<ol>\r\n\r\n<li id=\"fn:1\">\r\n<p>All of them involve Steve. <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\r\n</li>\r\n\r\n</ol>\r\n</div>\r\n","html":"<p>There have been two very interesting inverse-acquisitions and a third one is on the horizon<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a>.</p>\n\n<ol>  \n<li>NeXT acquired Apple: While technically it was the other way around, philosophically, NeXT overtook Apple and brought in Steve who ripped apart the incredulous non-sense that plagued the Apple of the 90s. NeXTSTEP went-on to become the core of OS X which revitalized the Mac and allowed Apple enough financial headroom to do the iPod in 2001. NeXTSTEP is still at the heart of OS X and, more importantly, iOS.</li>  \n<li>Pixar acquired Disney: This one was way more skewed than NeXT and Apple. Pixar was tiny compared to the aging behemoth that was Disney in 2006. Pixar enamored Disney with its philosophy of <em>innovation for emotion</em>. Today, Disney owes Pixar for bringing it back from the brink of the &#8220;What would Walt do&#8221; epidemic.</li>  \n</ol>\n\n<p>Now, we are at the cusp of one such inverse-acquisition, another philosophical one at that. Beginning with OS X Lion, Apple has been bringing things &#8220;Back To The Mac&#8221;. A week ago, iOS 7 took a sharp left turn into a new realm of visual and interaction design and the Mac is set to follow suit. But this time, things will not be &#8220;<em>Patched</em> to the Mac&#8221;.</p>\n\n<p>iOS was derived from OS X by vehement stripping down of aspects that were deemed inessential to mobile. Now, OS X will be stripped down of the &#8220;cruft&#8221; and will be enveloped by this philosophy of clean, efficient, and content-focused design which originated in iOS 7. </p>\n\n<p>Apple will no more have two separate OSes.</p>\n\n<p>Apple will have two different instances of iOS very thoughtfully crafted for different use cases. </p>\n\n<p>And then, iOS will have acquired OS X.</p>\n\n<div class=\"footnotes\">  \n<hr />  \n<ol>\n\n<li id=\"fn:1\">  \n<p>All of them involve Steve. <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n</ol>  \n</div>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1371229664000,"created_by":1,"updated_at":1371229983000,"updated_by":1,"published_at":1371229664000,"published_by":1},{"id":67,"uuid":"04f5c62e-d18a-4830-ae52-99cd2abe77c8","title":"Parallax","slug":"parallax","markdown":"\"It’s polarizing, but most big, bold choices are when it comes to things like interface design.\"\r\n\r\n(Hat tip: <a href=\"https://twitter.com/zcichy\">@zcichy</a>)\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;","html":"<p>\"It’s polarizing, but most big, bold choices are when it comes to things like interface design.\"</p>\n\n<p>(Hat tip: <a href=\"https://twitter.com/zcichy\">@zcichy</a>)</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1371314034000,"created_by":1,"updated_at":1371314126000,"updated_by":1,"published_at":1371314034000,"published_by":1},{"id":68,"uuid":"79cce331-1ff7-4bab-a9ba-be871aea9e1c","title":"Superman Action Comics","slug":"superman-action-comics","markdown":"<p>Here is a little treat. Six iBooks codes for <a href=\"https://itunes.apple.com/us/book/action-comics-2011-1/id577008663?mt=11\">Superman Action Comics #1</a>.</p>\n\n<p>FW73TK7AXH6M\nMNLEJKFJ9TEL\nJNTE347YL36J\n7E6YNRARH9NT\nW6LEP4EFTAJL\nJ74PRLWY46JY</p>","html":"<p>Here is a little treat. Six iBooks codes for <a href=\"https://itunes.apple.com/us/book/action-comics-2011-1/id577008663?mt=11\">Superman Action Comics #1</a>.</p>\n\n<p>FW73TK7AXH6M  \nMNLEJKFJ9TEL  \nJNTE347YL36J  \n7E6YNRARH9NT  \nW6LEP4EFTAJL  \nJ74PRLWY46JY</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1372242179000,"created_by":1,"updated_at":1372242179000,"updated_by":1,"published_at":1372242179000,"published_by":1},{"id":69,"uuid":"052ce7b8-7437-42b1-a92f-d9e9ef6fec4c","title":"Parallax in iOS 7","slug":"parallax-in-ios-7","markdown":"Macworld explains the Parallax effect that is pervasive in iOS 7.","html":"<p>Macworld explains the Parallax effect that is pervasive in iOS 7.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1372269551000,"created_by":1,"updated_at":1372269551000,"updated_by":1,"published_at":1372269551000,"published_by":1},{"id":70,"uuid":"4a9f8263-6cee-4605-8235-5f2894c9cb08","title":"Center Youtube's Player","slug":"center-youtubes-player","markdown":"<p>Youtube's wide player has always bugged me. Placed in the extreme left, it just looks erratic. I recently discovered that there exists a <a href=\"http://code.grid.in.th\">User CSS plugin</a> for Safari and have been on a spree fixing minor style annoyances across the interweb. Here is the fix for the Youtube player:\n<code></p>\n\n<h1>player-api {</h1>\n\n<p>margin-left: auto !important;\nmargin-right: auto !important;}\n.watch-medium {\npadding-left: 0px !important;\nmargin-top: 19px !important;\nmargin-bottom: 50px !important;}\n.watch-sidebar {\nmargin-top: 0px !important;}</code>\nThe affected URL is: <code>http://<em>.youtube.com/</em></code></p>\n\n<p>Before enabling the CSS, make the player wide. As an added bonus, the player will now always stay wide and centered. It looks much better this way.</p>\n\n<p><img class=\"aligncenter size-large wp-image-602\" alt=\"Screen Shot 2013-07-17 at 1.21.09 AM\" src=\"http://res.cloudinary.com/daectagjz/image/upload/h_611,w_780/v1412562526/Screen-Shot-2013-07-17-at-1_21_09-AM_surwsg.png\" width=\"780\" height=\"610\" /></p>\n","html":"<p>Youtube's wide player has always bugged me. Placed in the extreme left, it just looks erratic. I recently discovered that there exists a <a href=\"http://code.grid.in.th\">User CSS plugin</a> for Safari and have been on a spree fixing minor style annoyances across the interweb. Here is the fix for the Youtube player:  \n<code></p>\n\n<h1>player-api {</h1>\n\n<p>margin-left: auto !important;  \nmargin-right: auto !important;}  \n.watch-medium {\npadding-left: 0px !important;  \nmargin-top: 19px !important;  \nmargin-bottom: 50px !important;}  \n.watch-sidebar {\nmargin-top: 0px !important;}</code>  \nThe affected URL is: <code>http://<em>.youtube.com/</em></code></p>\n\n<p>Before enabling the CSS, make the player wide. As an added bonus, the player will now always stay wide and centered. It looks much better this way.</p>\n\n<p><img class=\"aligncenter size-large wp-image-602\" alt=\"Screen Shot 2013-07-17 at 1.21.09 AM\" src=\"http://res.cloudinary.com/daectagjz/image/upload/h_611,w_780/v1412562526/Screen-Shot-2013-07-17-at-1_21_09-AM_surwsg.png\" width=\"780\" height=\"610\" /></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1374025208000,"created_by":1,"updated_at":1412544526000,"updated_by":1,"published_at":1374025208000,"published_by":1},{"id":71,"uuid":"fa531e83-ca70-40d7-8bbf-7d8eca21b5ba","title":"Programmers and Mathematics","slug":"programmers-and-mathematics","markdown":"<p style=\"text-align: center;\">\"Do not worry: programmers lie frequently about being math geniuses when they really aren't. If they were math geniuses, they would be doing math, not writing ads and social network games to steal people's money.\"</p>\r\n<p style=\"text-align: center;\">-Zed Shaw</p>","html":"<p style=\"text-align: center;\">\"Do not worry: programmers lie frequently about being math geniuses when they really aren't. If they were math geniuses, they would be doing math, not writing ads and social network games to steal people's money.\"</p>  \n\n<p style=\"text-align: center;\">-Zed Shaw</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1375024222000,"created_by":1,"updated_at":1375366562000,"updated_by":1,"published_at":1375024222000,"published_by":1},{"id":72,"uuid":"89400ab6-7262-4831-9955-f52191fd4f14","title":"The Future of Programming- Bret Victor","slug":"the-future-of-programming-bret-victor","markdown":"Stay hungry. Stay foolish.","html":"<p>Stay hungry. Stay foolish.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1375389448000,"created_by":1,"updated_at":1375389448000,"updated_by":1,"published_at":1375389448000,"published_by":1},{"id":73,"uuid":"c87bc326-847d-459a-bccb-89154037b3d8","title":"Currency App","slug":"currency-app","markdown":"<p>Generally I use <a href=\"https://itunes.apple.com/us/app/wolframalpha/id334989259?mt=8\">Wolfram Alpha</a> or a simple google query for my data manipulation needs. This includes currency, units and time conversions. On the mac, more often than not, I have <a href=\"http://www.wolfram.com/mathematica/\">Mathematica</a> running or the built-in dashboard widget does the trick<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a>.</p>\n\n<p>However, something is to be done about frequent conversions where it&#8217;s too slow to set up an &#8220;xUSD to INR&#8221; query in Wolfram Alpha or Google. Currency conversion is one such task. Apps that try to do too much and convert to everything from everything are slow as they need to be setup each time for a particular conversion. Hence, I downloaded this one-trick-<a href=\"https://twitter.com/SteveStreza/status/363289089123946496\">pony</a> featured in the &#8220;Finance&#8221; section of the Appstore.</p>\n\n<h3><a href=\"https://itunes.apple.com/us/app/currency-simple-converter/id628148586?mt=8\">Currency</a></h3>\n\n<p>The app is very good looking and responsive. Here's an overview of the aspects I like: </p>\n\n<ul>\n<li>Very cool number-manipulation gestures. Just swipe right to delete and left to bring things back.</li>\n<li>Tap the graph key or swipe right on the num-pad to reveal a 6 months long history of the exchange rate<a href=\"#fn:3\" id=\"fnref:3\" title=\"see footnote\" class=\"footnote\">[3]</a>.</li>\n<li>Quickly prioritize other currencies and add new ones.</li>\n<li>Just tap on the target currency to swap places and do reverse conversions.</li>\n</ul>\n\nI recorded a video to showcase the app.<a href=\"#fn:2\" id=\"fnref:2\" title=\"see footnote\" class=\"footnote\">[2]</a>.</p>\n[one_half]\n<video width=\"100%\" controls>\n  <source src=\"http://spinhalf.net/wp-content/uploads/2013/08/currencyapp1.mp4\" type=\"video/mp4\">\n  Your browser does not support the video tag.\n</video>\n[/one_half][one_half_last]\n<a href=\"https://itunes.apple.com/us/app/currency-simple-converter/id628148586?mt=8\"><img src=\"http://spinhalf.net/wp-content/uploads/2013/08/IMG_2905.png\" width=\"100%\" /></a>\n[/one_half_last]\n\n<p>The features are very well balanced and weighted in their complexity of access by their relative importance. Manipulating numbers, the most frequent task, is extremely easy and intuitive and so is swapping currencies. Additional currencies are hidden under num-pad, avoiding clutter while still keeping them close at hand. Searching, a rare operation after initial setup, is out of focus until one needs it. It requires hiding the num-pad and then pulling down.</p>\n\n<p>A balanced, focused, and quick app to convert currencies. <a href=\"https://itunes.apple.com/us/app/currency-simple-converter/id628148586?mt=8\">Buy</a> it from the AppStore for $0.99.</p>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n\n<li id=\"fn:1\">\n<p>I always forget about <a href=\"http://www.acqualia.com/soulver/\">Soulver</a>. It handles conversions very well. <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\n</li>\n\n<li id=\"fn:2\">\n<p>I <a href=\"https://twitter.com/gravicle/status/363330736889135105\">discovered</a> that iOS 7 β allows mirroring without the persistent (and annoying) blue-bar. It makes screen recordings very clean. <a href=\"#fnref:2\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\n</li>\n\n<li id=\"fn:3\">\n<p>A very handy way to monitor currency exchange rates from iOS&#8217; Notification Center is to add the string <code>USDINR=x</code>, where the latter symbol is the one you want to convert to, to the <a href=\" http://spinhalf.net/?attachment_id=652\">Stocks app</a>. <a href=\"#fnref:3\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\n</li>\n\n</ol>\n</div>","html":"<p>Generally I use <a href=\"https://itunes.apple.com/us/app/wolframalpha/id334989259?mt=8\">Wolfram Alpha</a> or a simple google query for my data manipulation needs. This includes currency, units and time conversions. On the mac, more often than not, I have <a href=\"http://www.wolfram.com/mathematica/\">Mathematica</a> running or the built-in dashboard widget does the trick<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a>.</p>\n\n<p>However, something is to be done about frequent conversions where it&#8217;s too slow to set up an &#8220;xUSD to INR&#8221; query in Wolfram Alpha or Google. Currency conversion is one such task. Apps that try to do too much and convert to everything from everything are slow as they need to be setup each time for a particular conversion. Hence, I downloaded this one-trick-<a href=\"https://twitter.com/SteveStreza/status/363289089123946496\">pony</a> featured in the &#8220;Finance&#8221; section of the Appstore.</p>\n\n<h3><a href=\"https://itunes.apple.com/us/app/currency-simple-converter/id628148586?mt=8\">Currency</a></h3>\n\n<p>The app is very good looking and responsive. Here's an overview of the aspects I like: </p>\n\n<ul>  \n<li>Very cool number-manipulation gestures. Just swipe right to delete and left to bring things back.</li>  \n<li>Tap the graph key or swipe right on the num-pad to reveal a 6 months long history of the exchange rate<a href=\"#fn:3\" id=\"fnref:3\" title=\"see footnote\" class=\"footnote\">[3]</a>.</li>  \n<li>Quickly prioritize other currencies and add new ones.</li>  \n<li>Just tap on the target currency to swap places and do reverse conversions.</li>  \n</ul>\n\n<p>I recorded a video to showcase the app.<a href=\"#fn:2\" id=\"fnref:2\" title=\"see footnote\" class=\"footnote\">[2]</a>.</p> <br />\n[one_half]</p>\n\n<video width=\"100%\" controls>  \n  <source src=\"http://spinhalf.net/wp-content/uploads/2013/08/currencyapp1.mp4\" type=\"video/mp4\">\n  Your browser does not support the video tag.\n</video>  \n\n<p>[/one<em>half][one</em>half<em>last]\n<a href=\"https://itunes.apple.com/us/app/currency-simple-converter/id628148586?mt=8\"><img src=\"http://spinhalf.net/wp-content/uploads/2013/08/IMG_2905.png\" width=\"100%\" /></a> <br />\n[/one</em>half_last]</p>\n\n<p>The features are very well balanced and weighted in their complexity of access by their relative importance. Manipulating numbers, the most frequent task, is extremely easy and intuitive and so is swapping currencies. Additional currencies are hidden under num-pad, avoiding clutter while still keeping them close at hand. Searching, a rare operation after initial setup, is out of focus until one needs it. It requires hiding the num-pad and then pulling down.</p>\n\n<p>A balanced, focused, and quick app to convert currencies. <a href=\"https://itunes.apple.com/us/app/currency-simple-converter/id628148586?mt=8\">Buy</a> it from the AppStore for $0.99.</p>\n\n<div class=\"footnotes\">  \n<hr />  \n<ol>\n\n<li id=\"fn:1\">  \n<p>I always forget about <a href=\"http://www.acqualia.com/soulver/\">Soulver</a>. It handles conversions very well. <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n<li id=\"fn:2\">  \n<p>I <a href=\"https://twitter.com/gravicle/status/363330736889135105\">discovered</a> that iOS 7 β allows mirroring without the persistent (and annoying) blue-bar. It makes screen recordings very clean. <a href=\"#fnref:2\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n<li id=\"fn:3\">  \n<p>A very handy way to monitor currency exchange rates from iOS&#8217; Notification Center is to add the string <code>USDINR=x</code>, where the latter symbol is the one you want to convert to, to the <a href=\" http://spinhalf.net/?attachment_id=652\">Stocks app</a>. <a href=\"#fnref:3\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n</ol>  \n</div>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1375453031000,"created_by":1,"updated_at":1375453445000,"updated_by":1,"published_at":1375453031000,"published_by":1},{"id":74,"uuid":"1029a202-fa35-4a2e-b7ab-ce764b111d04","title":"Self Driving Cars","slug":"self-driving-cars","markdown":"<p>I am <strong>very</strong> interested and optimistic about the idea of self-driving cars and an smart infrastructure enabling these vehicles to be cognizant of their environment. I firmly believe that driving, as a necessity<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a>, is not something humans are optimized for. </p>\r\n\r\n<p>The human brain has evolved to tune out repeated and uneventful stimuli. It tunes out the repeated touches from your arm-rest, it tunes out noises and smells that are persistent and have been registered as not hazardous. One astounding example is how the brain tunes out the visual of our nose. While in line-of-sight, you only see you nose when you consciously focus on it. The brain is geared to seek changing, exciting and engaging prompts. Regular driving, especially on the long stretches of interstate highways is neither. So isn&#8217;t slogging through traffic everyday, twice. What this all is is a huge waste of time.</p>\r\n\r\n<p>On the diagonal end, computers are incredibly adept at doing such repetitive, constant and prolonged things. Add to that the ability to tap into the intelligence of a network of a plethora of sensors and other cars, and you get something that looks like what a conscious and engaged brain would create to free itself from the molasses of a job that is driving. I like driving but I would <em>love</em> it if I could instead read or FaceTime or reply to an email while I am being transported<a href=\"#fn:2\" id=\"fnref:2\" title=\"see footnote\" class=\"footnote\">[2]</a>.</p>\r\n\r\n<p>A common gripe that I have heard is that humans are better decision makers and better suited to handle a 3000lb gasoline-combustion-powered<a href=\"#fn:3\" id=\"fnref:3\" title=\"see footnote\" class=\"footnote\">[3]</a> box of metal that is supposed to stay on a 12ft layer of asphalt. No, we aren&#8217;t. We fuck-up all the time and catastrophically so. We misjudge. We overlook. We tune out. We get distracted. We get drunk. We get sleepy. A computer doesn&#8217;t. Computers do crash, are prone to bugs and susceptible to hacking<a href=\"#fn:4\" id=\"fnref:4\" title=\"see footnote\" class=\"footnote\">[4]</a>. However, these errors are constantly fixed. I am sure new bugs might show up with every update to your car&#8217;s firmware but one can be certain that a smart car won&#8217;t make the same mistake twice. It&#8217;ll learn and so will every single car connected to the grid. The system will evolve.</p>\r\n\r\n<p>Another key aspect is awareness. We rely on our senses to survey and gauge the road and 10 other vehicles around us, all moving at different speeds. These are senses which have evolved to focus on <em>one</em> prey, hardly ever sprinting at <a href=\"http://www.esf.edu/aec/adks/mammals/wtd.htm\">35 miles an hour</a>. Contrast that with a car that is aware of all the cars around it within a five mile radius, aware of every single decision made by all these cars and able to determine the safest and fastest trajectory with respect to all the lane-changes and stops which are <em>going</em> to happen. Contrast seconds of driver-reaction times with microseconds that it takes a computer to react <em>while</em> taking into account all the historical data for similar situations and everything there is to know about the immediate environment. Contrast a car, that has had its &#8220;Check Engine&#8221; light on for over a month, being steered by a human who chose to ignore the warnings, malfunctioning on a 70mph highway with a smart car capable of self-diagnosis and driving itself to a repair facility. Those random breakdowns would not happen,<a href=\"#fn:5\" id=\"fnref:5\" title=\"see footnote\" class=\"footnote\">[5]</a>. Contrast people-driven cars speeding way beyond the legal speed-limit with a network that is aware of every car that is on the road and the weather and can decide speed-limits on the fly while prioritizing cars taking care of critical situations and emergencies. There is little objectivity is believing that humans are better drivers.</p>\r\n\r\n<p>I am well aware that such cognizant and &#8220;smart&#8221; cars will rely on an infrastructure that is non-existent today, on algorithms which are still being tested in parking lots and on a near 100% saturation. Any rouge human-steered-cars on the highway will trigger defense-mode in all the smart-cars while they attempt to calculate the probabilities of the said car&#8217;s actions. Actually, it will never be so binary. For a while there will always be cars which are semi-automatic, or are fully manual coexisting with smart-vehicles. This will only make the algorithms more holistic in their awareness of human behavior on roads. Self-driving will start as an advanced cruise-control while gaining capabilities with time. It will be a long transition. But, it will happen.</p>\r\n\r\n<div class=\"footnotes\">\r\n<hr />\r\n<ol>\r\n\r\n<li id=\"fn:1\">\r\n<p>Versus, as a sport. <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\r\n</li>\r\n\r\n<li id=\"fn:2\">\r\n<p>Public transportation is too restrictive and sparse, especially here in the US. It&#8217;s especially a non-starter if you live anywhere outside a metropolitan. <a href=\"#fnref:2\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\r\n</li>\r\n\r\n<li id=\"fn:3\">\r\n<p>Except for the damn Tesla owners. I am jealous of you all. <a href=\"#fnref:3\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\r\n</li>\r\n\r\n<li id=\"fn:4\">\r\n<p><a href=\"http://www.theatlantic.com/technology/archive/2013/08/when-cars-crash-like-computers/278656/\">The Atlantic.</a> <a href=\"#fnref:4\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\r\n</li>\r\n\r\n<li id=\"fn:5\">\r\n<p>Things only happen &#8220;suddenly&#8221; when you&#8217;re not paying attention. <a href=\"#fnref:5\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\r\n</li>\r\n\r\n</ol>\r\n</div>\r\n","html":"<p>I am <strong>very</strong> interested and optimistic about the idea of self-driving cars and an smart infrastructure enabling these vehicles to be cognizant of their environment. I firmly believe that driving, as a necessity<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a>, is not something humans are optimized for. </p>\n\n<p>The human brain has evolved to tune out repeated and uneventful stimuli. It tunes out the repeated touches from your arm-rest, it tunes out noises and smells that are persistent and have been registered as not hazardous. One astounding example is how the brain tunes out the visual of our nose. While in line-of-sight, you only see you nose when you consciously focus on it. The brain is geared to seek changing, exciting and engaging prompts. Regular driving, especially on the long stretches of interstate highways is neither. So isn&#8217;t slogging through traffic everyday, twice. What this all is is a huge waste of time.</p>\n\n<p>On the diagonal end, computers are incredibly adept at doing such repetitive, constant and prolonged things. Add to that the ability to tap into the intelligence of a network of a plethora of sensors and other cars, and you get something that looks like what a conscious and engaged brain would create to free itself from the molasses of a job that is driving. I like driving but I would <em>love</em> it if I could instead read or FaceTime or reply to an email while I am being transported<a href=\"#fn:2\" id=\"fnref:2\" title=\"see footnote\" class=\"footnote\">[2]</a>.</p>\n\n<p>A common gripe that I have heard is that humans are better decision makers and better suited to handle a 3000lb gasoline-combustion-powered<a href=\"#fn:3\" id=\"fnref:3\" title=\"see footnote\" class=\"footnote\">[3]</a> box of metal that is supposed to stay on a 12ft layer of asphalt. No, we aren&#8217;t. We fuck-up all the time and catastrophically so. We misjudge. We overlook. We tune out. We get distracted. We get drunk. We get sleepy. A computer doesn&#8217;t. Computers do crash, are prone to bugs and susceptible to hacking<a href=\"#fn:4\" id=\"fnref:4\" title=\"see footnote\" class=\"footnote\">[4]</a>. However, these errors are constantly fixed. I am sure new bugs might show up with every update to your car&#8217;s firmware but one can be certain that a smart car won&#8217;t make the same mistake twice. It&#8217;ll learn and so will every single car connected to the grid. The system will evolve.</p>\n\n<p>Another key aspect is awareness. We rely on our senses to survey and gauge the road and 10 other vehicles around us, all moving at different speeds. These are senses which have evolved to focus on <em>one</em> prey, hardly ever sprinting at <a href=\"http://www.esf.edu/aec/adks/mammals/wtd.htm\">35 miles an hour</a>. Contrast that with a car that is aware of all the cars around it within a five mile radius, aware of every single decision made by all these cars and able to determine the safest and fastest trajectory with respect to all the lane-changes and stops which are <em>going</em> to happen. Contrast seconds of driver-reaction times with microseconds that it takes a computer to react <em>while</em> taking into account all the historical data for similar situations and everything there is to know about the immediate environment. Contrast a car, that has had its &#8220;Check Engine&#8221; light on for over a month, being steered by a human who chose to ignore the warnings, malfunctioning on a 70mph highway with a smart car capable of self-diagnosis and driving itself to a repair facility. Those random breakdowns would not happen,<a href=\"#fn:5\" id=\"fnref:5\" title=\"see footnote\" class=\"footnote\">[5]</a>. Contrast people-driven cars speeding way beyond the legal speed-limit with a network that is aware of every car that is on the road and the weather and can decide speed-limits on the fly while prioritizing cars taking care of critical situations and emergencies. There is little objectivity is believing that humans are better drivers.</p>\n\n<p>I am well aware that such cognizant and &#8220;smart&#8221; cars will rely on an infrastructure that is non-existent today, on algorithms which are still being tested in parking lots and on a near 100% saturation. Any rouge human-steered-cars on the highway will trigger defense-mode in all the smart-cars while they attempt to calculate the probabilities of the said car&#8217;s actions. Actually, it will never be so binary. For a while there will always be cars which are semi-automatic, or are fully manual coexisting with smart-vehicles. This will only make the algorithms more holistic in their awareness of human behavior on roads. Self-driving will start as an advanced cruise-control while gaining capabilities with time. It will be a long transition. But, it will happen.</p>\n\n<div class=\"footnotes\">  \n<hr />  \n<ol>\n\n<li id=\"fn:1\">  \n<p>Versus, as a sport. <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n<li id=\"fn:2\">  \n<p>Public transportation is too restrictive and sparse, especially here in the US. It&#8217;s especially a non-starter if you live anywhere outside a metropolitan. <a href=\"#fnref:2\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n<li id=\"fn:3\">  \n<p>Except for the damn Tesla owners. I am jealous of you all. <a href=\"#fnref:3\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n<li id=\"fn:4\">  \n<p><a href=\"http://www.theatlantic.com/technology/archive/2013/08/when-cars-crash-like-computers/278656/\">The Atlantic.</a> <a href=\"#fnref:4\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n<li id=\"fn:5\">  \n<p>Things only happen &#8220;suddenly&#8221; when you&#8217;re not paying attention. <a href=\"#fnref:5\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n</ol>  \n</div>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1376442643000,"created_by":1,"updated_at":1376442643000,"updated_by":1,"published_at":1376442643000,"published_by":1},{"id":75,"uuid":"74cc57f4-f699-4cd9-8b42-52123c7e5131","title":"Android favors piracy","slug":"android-favors-piracy","markdown":"<p>Android has an unmitigated piracy problem. And Google likes it that way.</p>\r\n\r\n<p>Piracy is an existential problem for every platform. There is a magnanimous community of pirates who collaborate to crack apps, find loopholes in code-signing processes, and create alternative platforms like Cydia which (while not explicitly) facilitate app piracy. Fencing piracy is another community, an industry even. To understand how actively a platform owner handles piracy, it&#8217;s necessary to chart the flow of money on the platform.</p>\r\n\r\n<h3>Apple</h3>\r\n\r\n<p>AppStore is not just a complimentary ecosystem for Apple. In fact, the AppStore is one of the primary drivers of sales and the single most important differentiator of Apple hardware. Despite being such a central piece of experience it&#8217;s run at break-even and money flow is a little convoluted to map on the AppStore.</p>\r\n\r\n<p>Apple relies on hardware sales for profits. However, Apple devices derive a large part of their value from the AppStore. Hence, it&#8217;s crucial for Apple to protect the AppStore value-chain. It involves facilitating developers with state-of-the-art tools, making payments easy, making apps easy to discover and, amongst other things, repressing piracy to keep the developers in business. There is a strict code-signing mechanism that restricts side-loading pirated or home-brewed apps.</p>\r\n\r\n<p>All these measures align very well with Apple&#8217;s business model: create great devices that people love to use and foster an unmatched ecosystem of content that keeps users delighted and adds incredible value. The focus is primarily on quality over quantity, in content as well as hardware. Google is very different.</p>\r\n\r\n<h3>Google</h3>\r\n\r\n<p>Android is Google&#8217;s platter to serve their services on. Google spends billions on Android and gives it away for free, with a belief that OEMs will keep Google services bundled with the device and in-turn, their devices get to access the Google Play Store. The more devices there are, the more users there are on Android, the more they use Google&#8217;s services. Hence, profits are directly tied to quantity. How does piracy factor into this?</p>\r\n\r\n<p>Android has always been about being good enough. If it&#8217;s good enough, and it&#8217;s free, it can win over the premium offerings in budget-constrained environments. And this has indeed worked out pretty well in a lot of markets, especially in developing ones. China and India are the new frontiers of growth and have a per-capita <strong>annual</strong> GDP of $6000 and $1500, respectively. $1.99 is <em>not</em> chump change. However, apps are still a big part of the value proposition. Basically, people want apps but cannot pay for them. Hence, they pirate. iOS is near impossible to dig into while Android stands a blink away from being rooted. Side-loading APKs is the norm.</p>\r\n\r\n<p>Google has an inherent incentive in keeping piracy alive. It makes Android a much more attractive option in developing nations and earns Google users, a lot, <em>lot</em>, of users. This certainly cuts into developer returns, who are then forced to resort to ads. This also works out in Google&#8217;s favor as the largest seller of Ads in the world. Does this affect the quality of apps? Certainly. Are they barely good enough? Certainly. And, that is good enough for Google.</p>","html":"<p>Android has an unmitigated piracy problem. And Google likes it that way.</p>\n\n<p>Piracy is an existential problem for every platform. There is a magnanimous community of pirates who collaborate to crack apps, find loopholes in code-signing processes, and create alternative platforms like Cydia which (while not explicitly) facilitate app piracy. Fencing piracy is another community, an industry even. To understand how actively a platform owner handles piracy, it&#8217;s necessary to chart the flow of money on the platform.</p>\n\n<h3>Apple</h3>\n\n<p>AppStore is not just a complimentary ecosystem for Apple. In fact, the AppStore is one of the primary drivers of sales and the single most important differentiator of Apple hardware. Despite being such a central piece of experience it&#8217;s run at break-even and money flow is a little convoluted to map on the AppStore.</p>\n\n<p>Apple relies on hardware sales for profits. However, Apple devices derive a large part of their value from the AppStore. Hence, it&#8217;s crucial for Apple to protect the AppStore value-chain. It involves facilitating developers with state-of-the-art tools, making payments easy, making apps easy to discover and, amongst other things, repressing piracy to keep the developers in business. There is a strict code-signing mechanism that restricts side-loading pirated or home-brewed apps.</p>\n\n<p>All these measures align very well with Apple&#8217;s business model: create great devices that people love to use and foster an unmatched ecosystem of content that keeps users delighted and adds incredible value. The focus is primarily on quality over quantity, in content as well as hardware. Google is very different.</p>\n\n<h3>Google</h3>\n\n<p>Android is Google&#8217;s platter to serve their services on. Google spends billions on Android and gives it away for free, with a belief that OEMs will keep Google services bundled with the device and in-turn, their devices get to access the Google Play Store. The more devices there are, the more users there are on Android, the more they use Google&#8217;s services. Hence, profits are directly tied to quantity. How does piracy factor into this?</p>\n\n<p>Android has always been about being good enough. If it&#8217;s good enough, and it&#8217;s free, it can win over the premium offerings in budget-constrained environments. And this has indeed worked out pretty well in a lot of markets, especially in developing ones. China and India are the new frontiers of growth and have a per-capita <strong>annual</strong> GDP of $6000 and $1500, respectively. $1.99 is <em>not</em> chump change. However, apps are still a big part of the value proposition. Basically, people want apps but cannot pay for them. Hence, they pirate. iOS is near impossible to dig into while Android stands a blink away from being rooted. Side-loading APKs is the norm.</p>\n\n<p>Google has an inherent incentive in keeping piracy alive. It makes Android a much more attractive option in developing nations and earns Google users, a lot, <em>lot</em>, of users. This certainly cuts into developer returns, who are then forced to resort to ads. This also works out in Google&#8217;s favor as the largest seller of Ads in the world. Does this affect the quality of apps? Certainly. Are they barely good enough? Certainly. And, that is good enough for Google.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1378731751000,"created_by":1,"updated_at":1378731930000,"updated_by":1,"published_at":1378731751000,"published_by":1},{"id":76,"uuid":"e727a9e3-83e7-49d0-97e8-eb95d60f14a3","title":"64 Bit Pains","slug":"64-bit-pains","markdown":"A good Apple Insider piece on Apple's move to 64 Bit architecture with the A7 and Android's catchup.","html":"<p>A good Apple Insider piece on Apple's move to 64 Bit architecture with the A7 and Android's catchup.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1379419377000,"created_by":1,"updated_at":1379419377000,"updated_by":1,"published_at":1379419377000,"published_by":1},{"id":77,"uuid":"e28edd78-8c57-4760-840d-611f1a0bdc4a","title":"Thunderbolt is for Apple","slug":"thunderbolt-is-for-apple","markdown":"<p>Thunderbolt is that incredible interconnect standard that promised speed and scale and very truly delivered on it. Apple and Intel collaborated to <a href=\"http://www.anandtech.com/show/4194/intels-codename-lightpeak-launches-as-thunderbolt\">launch Thunderbolt</a> as a PCIe and Display Port interface in early 2011. The initial rollout was on Copper cables (still in use today) which afforded the standard 10Gbps simultaneous symmetric throughoutput. This has been followed by optical cables for high-end applications and the imminent launch of <a href=\"http://www.anandtech.com/show/7049/intel-thunderbolt-2-everything-you-need-to-know\">Thunderbolt 2.0</a>. Thunderbolt 2.0 combines the independent channels together to permit a max bidirectional throughoutput of 20Gbps, enough to drive 4K displays daisy-chained with other hardware. The competing standard at the time of Thunderbolt&#8217;s launch, USB 3.0, <a href=\"http://en.wikipedia.org/wiki/USB_3.0\">capped out at 4Gbps</a> and it&#8217;s only this year that the next iteration, USB 3.1, was <em>announced</em>, with transfer rates inching close to Thunderbolt 1.0.</p>\r\n\r\n<p>With respect to transfer speeds and performance, there is no match for Thunderbolt in any external interface standard. However, stories about it&#8217;s failure at widespread adoption are frequent. <a href=\"http://arstechnica.com/apple/2013/01/with-licensing-and-cost-issues-can-thunderbolt-break-out-of-its-niche/\">Ars attributed</a> this to Intel&#8217;s firm grip on the standard and its lack of interest in working with 3rd party manufacturers.</p>\r\n\r\n<blockquote>\r\n<p>The one final factor—one that has likely had the most impact on Thunderbolt rolling out to market—is Intel&#8217;s licensing and certification process. Several vendors we have spoken to over the past year have claimed that Intel was holding up the process, cherry picking which vendors it worked with.</p>\r\n</blockquote>\r\n\r\n<p>OS support, cost of the controllers and lack of resources on Intel&#8217;s parts are additional explanations. All of these are very addressable. The cost of controllers will drop with scale. While the initial run might bring in losses, as production scales, yields will improve and costs will go down. Intel, of everyone else, must be familiar with and used to this. Every new processor architecture undergoes similar scaling. OS support will inevitably come along if there is enough hardware in the market. It&#8217;s a matter of an OTA patch. Then, Intel <a href=\"https://www.google.com/finance?q=NASDAQ%3AINTC&amp;ei=KRZgUsjQB5DuqQHoFg\">employs about 106,000 people</a> (!!!) and <a href=\"http://www.eetimes.com/document.asp?doc_id=1261004\">spent $12 Billion</a> in CapEx in 2012. If Intel wants something to happen, it can make it happen<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a>, including making Thunderbolt a wildly adopted standard. But that hasn&#8217;t happened. This oddity lends itself to speculation as to why?</p>\r\n\r\n<h3>Thunderbolt is for Apple</h3>\r\n\r\n<p>Beginning with the iPhone 4 in 2010, Apple has been relentlessly trying to up the ante with Retina Displays across the board. The force behind the push was felt when the iPad 3 had to go slightly heavier and run a bit hotter than usual to accommodate the battery-hungry Retina Display. Successively, Apple launched the Retina MacBook Pros and <a href=\"http://www.macrumors.com/2013/10/13/apple-predicted-to-release-ultra-slim-12-inch-macbook-with-retina-display-in-mid-2014/\">rumors of a 12&quot; Retina Air</a> abound. New Mac Pros are <a href=\"http://www.loopinsight.com/2013/10/15/apple-announces-special-event-for-oct-22/\">supposed to be unveiled</a> this coming Tuesday and with the insane amount of graphics power that they carry, it seems logical to assume that a 4K display from Apple is imminent, if not in 2013, in early 2014. Additionally, the not-so-extensible Mac Pro will rely very heavily on connected peripherals for storage and media access. USB 3.0 or 3.1 barely scale to support external scratch disks for video-editing and other data-driven workflows. Thunderbolt is what makes the <a href=\"http://www.apple.com/mac-pro/\">sleek form-factor</a> of the new Mac Pros possible. Thunderbolt is what will make a new generation of retina cinema displays possible. Thunderbolt is what makes external storage practical for SSD-phile anorexic MacBooks.</p>\r\n\r\n<p>Thunderbolt is a crucial cog in the very finely balanced <a href=\"http://en.wikipedia.org/wiki/Movement_(clockwork)\">movement</a> that drives Apple&#8217;s technological marvel like clockwork. It was made for Apple.</p>\r\n\r\n<h3>Thunderbolt is not for everyone</h3>\r\n\r\n<p>Thunderbolt is an enabler of a standard. It makes sleek form-factors practical and extensible. And others, besides Apple, stand to benefit from it. It can allow Windows machines access to some of the fastest external storage and, given sufficient graphics power, make them instantly compatible with Thunderbolt displays which can be daisy-chained into an elegant setup. However, the race-to-the-bottom strategy in the WinTel space erects a threshold on this path. OEMs can only implement Thunderbolt, a relatively pricey component, if it&#8217;s so popular that it&#8217;s the <em>only</em> standard they need to support for hi-def output (not true today) or if it&#8217;s backwards compatible (which it is not) or if it&#8217;s so cheap that that it&#8217;s worth that check-mark in a feature-comparison list (not today or anytime soon). Simple cost/benefit analysis. Today, USB 3.0 is good-enough for them and USB 3.1 will, again, be good enough against Thunderbolt 2.0. Bargain basement machines and most Windows devices are just that, good enough.</p>\r\n\r\n<p>Limited Thunderbolt adoption keeps prices high. This gives Apple another one of those advantages that only Apple can afford and which delight users. Where other OEMs have to resort to new but backwards compatible standards like HDMI 4.1, Apple can seamlessly support external retina displays, insanely fast external storage, daisy-chained setups with minimal cable-clutter, and create unbelievably beautiful devices like the new Mac Pro.</p>\r\n\r\n<p>As for third party devices for the Mac, there are plenty of them with new ones coming out everyday. They carry a premium in their price and performance and cater to customers who are willing to pay for quality, simplicity and reliability. They are beautifully designed and some are even explicitly advertised as Mac-only. This makes them relatively inaccessible to WinTel machines and augments all-Apple setups where devices and software form an experience that is greater than the sum of their parts. </p>\r\n\r\n<p>Apple is in no hurry to popularize Thunderbolt. FireWire set a precedent for this strategy and Thunderbolt will advance it. If tomorrow Intel decides to take Thunderbolt out for a ride in the wild, Apple will have already reaped the benefits of being the only ecosystem to have supported such a seamless and high-performance standard for years.</p>\r\n\r\n<p>Isn't this beautiful.</p>\r\n\r\n<div class=\"footnotes\">\r\n<hr />\r\n<ol>\r\n\r\n<li id=\"fn:1\">\r\n<p>Except for break into the mobile-chip industry, which is so tightly held by ARM, with its x86 architecture. <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\r\n</li>\r\n\r\n</ol>\r\n</div>\r\n","html":"<p>Thunderbolt is that incredible interconnect standard that promised speed and scale and very truly delivered on it. Apple and Intel collaborated to <a href=\"http://www.anandtech.com/show/4194/intels-codename-lightpeak-launches-as-thunderbolt\">launch Thunderbolt</a> as a PCIe and Display Port interface in early 2011. The initial rollout was on Copper cables (still in use today) which afforded the standard 10Gbps simultaneous symmetric throughoutput. This has been followed by optical cables for high-end applications and the imminent launch of <a href=\"http://www.anandtech.com/show/7049/intel-thunderbolt-2-everything-you-need-to-know\">Thunderbolt 2.0</a>. Thunderbolt 2.0 combines the independent channels together to permit a max bidirectional throughoutput of 20Gbps, enough to drive 4K displays daisy-chained with other hardware. The competing standard at the time of Thunderbolt&#8217;s launch, USB 3.0, <a href=\"http://en.wikipedia.org/wiki/USB_3.0\">capped out at 4Gbps</a> and it&#8217;s only this year that the next iteration, USB 3.1, was <em>announced</em>, with transfer rates inching close to Thunderbolt 1.0.</p>\n\n<p>With respect to transfer speeds and performance, there is no match for Thunderbolt in any external interface standard. However, stories about it&#8217;s failure at widespread adoption are frequent. <a href=\"http://arstechnica.com/apple/2013/01/with-licensing-and-cost-issues-can-thunderbolt-break-out-of-its-niche/\">Ars attributed</a> this to Intel&#8217;s firm grip on the standard and its lack of interest in working with 3rd party manufacturers.</p>\n\n<blockquote>  \n<p>The one final factor—one that has likely had the most impact on Thunderbolt rolling out to market—is Intel&#8217;s licensing and certification process. Several vendors we have spoken to over the past year have claimed that Intel was holding up the process, cherry picking which vendors it worked with.</p>  \n</blockquote>\n\n<p>OS support, cost of the controllers and lack of resources on Intel&#8217;s parts are additional explanations. All of these are very addressable. The cost of controllers will drop with scale. While the initial run might bring in losses, as production scales, yields will improve and costs will go down. Intel, of everyone else, must be familiar with and used to this. Every new processor architecture undergoes similar scaling. OS support will inevitably come along if there is enough hardware in the market. It&#8217;s a matter of an OTA patch. Then, Intel <a href=\"https://www.google.com/finance?q=NASDAQ%3AINTC&amp;ei=KRZgUsjQB5DuqQHoFg\">employs about 106,000 people</a> (!!!) and <a href=\"http://www.eetimes.com/document.asp?doc_id=1261004\">spent $12 Billion</a> in CapEx in 2012. If Intel wants something to happen, it can make it happen<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a>, including making Thunderbolt a wildly adopted standard. But that hasn&#8217;t happened. This oddity lends itself to speculation as to why?</p>\n\n<h3>Thunderbolt is for Apple</h3>\n\n<p>Beginning with the iPhone 4 in 2010, Apple has been relentlessly trying to up the ante with Retina Displays across the board. The force behind the push was felt when the iPad 3 had to go slightly heavier and run a bit hotter than usual to accommodate the battery-hungry Retina Display. Successively, Apple launched the Retina MacBook Pros and <a href=\"http://www.macrumors.com/2013/10/13/apple-predicted-to-release-ultra-slim-12-inch-macbook-with-retina-display-in-mid-2014/\">rumors of a 12&quot; Retina Air</a> abound. New Mac Pros are <a href=\"http://www.loopinsight.com/2013/10/15/apple-announces-special-event-for-oct-22/\">supposed to be unveiled</a> this coming Tuesday and with the insane amount of graphics power that they carry, it seems logical to assume that a 4K display from Apple is imminent, if not in 2013, in early 2014. Additionally, the not-so-extensible Mac Pro will rely very heavily on connected peripherals for storage and media access. USB 3.0 or 3.1 barely scale to support external scratch disks for video-editing and other data-driven workflows. Thunderbolt is what makes the <a href=\"http://www.apple.com/mac-pro/\">sleek form-factor</a> of the new Mac Pros possible. Thunderbolt is what will make a new generation of retina cinema displays possible. Thunderbolt is what makes external storage practical for SSD-phile anorexic MacBooks.</p>\n\n<p>Thunderbolt is a crucial cog in the very finely balanced <a href=\"http://en.wikipedia.org/wiki/Movement_(clockwork)\">movement</a> that drives Apple&#8217;s technological marvel like clockwork. It was made for Apple.</p>\n\n<h3>Thunderbolt is not for everyone</h3>\n\n<p>Thunderbolt is an enabler of a standard. It makes sleek form-factors practical and extensible. And others, besides Apple, stand to benefit from it. It can allow Windows machines access to some of the fastest external storage and, given sufficient graphics power, make them instantly compatible with Thunderbolt displays which can be daisy-chained into an elegant setup. However, the race-to-the-bottom strategy in the WinTel space erects a threshold on this path. OEMs can only implement Thunderbolt, a relatively pricey component, if it&#8217;s so popular that it&#8217;s the <em>only</em> standard they need to support for hi-def output (not true today) or if it&#8217;s backwards compatible (which it is not) or if it&#8217;s so cheap that that it&#8217;s worth that check-mark in a feature-comparison list (not today or anytime soon). Simple cost/benefit analysis. Today, USB 3.0 is good-enough for them and USB 3.1 will, again, be good enough against Thunderbolt 2.0. Bargain basement machines and most Windows devices are just that, good enough.</p>\n\n<p>Limited Thunderbolt adoption keeps prices high. This gives Apple another one of those advantages that only Apple can afford and which delight users. Where other OEMs have to resort to new but backwards compatible standards like HDMI 4.1, Apple can seamlessly support external retina displays, insanely fast external storage, daisy-chained setups with minimal cable-clutter, and create unbelievably beautiful devices like the new Mac Pro.</p>\n\n<p>As for third party devices for the Mac, there are plenty of them with new ones coming out everyday. They carry a premium in their price and performance and cater to customers who are willing to pay for quality, simplicity and reliability. They are beautifully designed and some are even explicitly advertised as Mac-only. This makes them relatively inaccessible to WinTel machines and augments all-Apple setups where devices and software form an experience that is greater than the sum of their parts. </p>\n\n<p>Apple is in no hurry to popularize Thunderbolt. FireWire set a precedent for this strategy and Thunderbolt will advance it. If tomorrow Intel decides to take Thunderbolt out for a ride in the wild, Apple will have already reaped the benefits of being the only ecosystem to have supported such a seamless and high-performance standard for years.</p>\n\n<p>Isn't this beautiful.</p>\n\n<div class=\"footnotes\">  \n<hr />  \n<ol>\n\n<li id=\"fn:1\">  \n<p>Except for break into the mobile-chip industry, which is so tightly held by ARM, with its x86 architecture. <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n</ol>  \n</div>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1382017094000,"created_by":1,"updated_at":1382017094000,"updated_by":1,"published_at":1382017094000,"published_by":1},{"id":78,"uuid":"be7f4957-7d5b-4c6b-90bc-3a7a71998556","title":"Off Indeed","slug":"off-indeed","markdown":"<p>We cannot pretend to know much of what&#8217;s going on at Apple. With their very limited public exposure, Keynote events are the times when we try to grasp onto every little bit of inference that can be drawn and data that can be gathered. Sometimes, it might happen that we just end-up reading too much into things.</p>\n\n<p>However, I believe I agree with Marco&#8217;s assessment of the Oct 22 Keynote event which saw the unveiling of the iPad Air and a Retina Mini alongside some really nice updates to the Mac lineup and the launch of the fabled Mac Pro.</p>\n\n<blockquote>\n<p>The presenting executives seemed a bit off, too. Their energy was flat, as if Apple wasn’t particularly excited about these announcements either (with the notable exception of Craig Federighi, who was properly energized and most polished). Most of the jokes and digs at competitors were awkward. The lines were so tightly scripted that the presenters often stumbled off-script slightly, and rather than rolling with it naturally, they’d just jump back and awkwardly retry the line. Nothing about the speeches seemed natural — at best, the presentation felt uptight.</p>\n</blockquote>\n\n<p>There were many times when they stumbled on lines and corrected things. This is out of ordinary for Apple events. While people have stuttered on the stage before, the frequency and the way it was handled this time just felt under-rehearsed and edgy. Schiller felt very forced to me and there wasn&#8217;t much excitement beyond Federighi&#8217;s OS X demo. iPad launch felt a lot like Schiller going through a feature checklist.</p>\n\n<p>I cannot even speculate about the reasons. They might just not find all these incremental updates as interesting as what&#8217;s in the works. Or, they might just think that these presentations don&#8217;t carry that much weight anymore. Or they might be having an off-day<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a>.</p>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n\n<li id=\"fn:1\">\n<p>If that&#8217;s the reason, I will blame Carl Icahn. I am sincerely concerned about him and his effect on Apple. I believe Apple will hold its ground and not relent to his <a href=\"http://allthingsd.com/20131024/icahn-to-apple-i-want-a-150-billion-buyback-now/\">greedy and almost-malicious demands</a>. <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\n</li>\n\n</ol>\n</div>","html":"<p>We cannot pretend to know much of what&#8217;s going on at Apple. With their very limited public exposure, Keynote events are the times when we try to grasp onto every little bit of inference that can be drawn and data that can be gathered. Sometimes, it might happen that we just end-up reading too much into things.</p>\n\n<p>However, I believe I agree with Marco&#8217;s assessment of the Oct 22 Keynote event which saw the unveiling of the iPad Air and a Retina Mini alongside some really nice updates to the Mac lineup and the launch of the fabled Mac Pro.</p>\n\n<blockquote>  \n<p>The presenting executives seemed a bit off, too. Their energy was flat, as if Apple wasn’t particularly excited about these announcements either (with the notable exception of Craig Federighi, who was properly energized and most polished). Most of the jokes and digs at competitors were awkward. The lines were so tightly scripted that the presenters often stumbled off-script slightly, and rather than rolling with it naturally, they’d just jump back and awkwardly retry the line. Nothing about the speeches seemed natural — at best, the presentation felt uptight.</p>  \n</blockquote>\n\n<p>There were many times when they stumbled on lines and corrected things. This is out of ordinary for Apple events. While people have stuttered on the stage before, the frequency and the way it was handled this time just felt under-rehearsed and edgy. Schiller felt very forced to me and there wasn&#8217;t much excitement beyond Federighi&#8217;s OS X demo. iPad launch felt a lot like Schiller going through a feature checklist.</p>\n\n<p>I cannot even speculate about the reasons. They might just not find all these incremental updates as interesting as what&#8217;s in the works. Or, they might just think that these presentations don&#8217;t carry that much weight anymore. Or they might be having an off-day<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a>.</p>\n\n<div class=\"footnotes\">  \n<hr />  \n<ol>\n\n<li id=\"fn:1\">  \n<p>If that&#8217;s the reason, I will blame Carl Icahn. I am sincerely concerned about him and his effect on Apple. I believe Apple will hold its ground and not relent to his <a href=\"http://allthingsd.com/20131024/icahn-to-apple-i-want-a-150-billion-buyback-now/\">greedy and almost-malicious demands</a>. <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n</ol>  \n</div>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1382708028000,"created_by":1,"updated_at":1382714432000,"updated_by":1,"published_at":1382708028000,"published_by":1},{"id":79,"uuid":"e8603a81-7595-425d-aa82-1819f8e977c3","title":"Thoughts on paid upgrades","slug":"thoughts-on-paid-upgrades","markdown":"<p>This week one of my most used apps, <a href=\"itunes://itunes.apple.com/us/app/tweetbot-3-for-twitter-iphone/id722294701?mt=8&amp;uo=4\">Tweetbot</a>, was updated for iOS 7. It wasn&#8217;t just updated but launched as a brand-new app with a price-tag of $2.99. In the absence of a system for offering upgraded apps to existing customers at a discounted price, deemed upgrade-pricing, this is a route a lot of developers are taking. So did <a href=\"itunes://itunes.apple.com/us/app/clear+/id689989355?mt=8&amp;uo=4\">Clear</a> when it was updated for iOS 7 and offered as a universal binary. So did 1Password 4. So did <a href=\"itunes://itunes.apple.com/us/app/screens-control-your-computer/id655890150?mt=8&amp;uo=4\">Screens</a>.</p>\n\n<p>When Clear was updated, it brought on a furor of criticism for the developers, Realmac Software, a small indie shop. So much so that they <a href=\"http://realmacsoftware.com/blog/some-changes-for-clear\">retracted</a> and decided to continue developing the older app while offering the new universal app under a different name, Clear+. This was <a href=\"https://twitter.com/marcoarment/status/382899550341853184\">hailed</a> as a specimen of collective shame on the part of AppStore customers. However, I believe that the Clear scene was more about Clear itself than about the &#8220;shameful resistance of users in supporting an indie developer&#8221;. Here is Clear for iPhone before (left) and after (right) the update.</p>\n\n<p><a href=\"http://res.cloudinary.com/daectagjz/image/upload/v1412562450/clear_xp544q.png\"><img src=\"http://res.cloudinary.com/daectagjz/image/upload/v1412562450/clear_xp544q.png\" alt=\"clear\" width=\"640\" height=\"568\" class=\"aligncenter size-full wp-image-697\" /></a></p>\n\n<p>Here are the release notes for the update from <a href=\"http://www.macrumors.com/2013/09/18/realmac-software-launches-universal-clear-to-do-app-with-ios-7-redesign/\">Macrumors</a>. </p>\n\n<blockquote>\n<p>List Peek - Pull down with two fingers to preview a list in the sidebar.\nEasily move tasks between lists\nEven easier-to-find Settings - just swipe from the left edge of the screen!\nClear for iPhone also now shows you the list name when you’re viewing a set of tasks.</p>\n</blockquote>\n\n<p>This update was, by most counts, quite minor. Here is a look at Tweetbot before and after the update for iOS 7. (Image from Viticci&#8217;s extensive <a href=\"http://www.macstories.net/reviews/tweetbot-3-review-human-after-all/\">review</a> over at Macstories).</p>\n\n<p><a href=\"http://res.cloudinary.com/daectagjz/image/upload/v1412562451/twwetbot_crjdzh.png\"><img src=\"http://res.cloudinary.com/daectagjz/image/upload/v1412562451/twwetbot_crjdzh.png\" alt=\"twwetbot\" width=\"746\" height=\"650\" class=\"aligncenter size-full wp-image-696\" /></a></p>\n\n<p>Here are the release notes from the update:</p>\n\n<blockquote>\n<p>Completely redesigned from the ground up for iOS7.\nNative Push Notifications.\nMute filters lets you block messages from users without unfollowing them. Mute services, hashtags, people, and even keywords (regex included).\nSync timeline position, direct message read statuses and mute filters between iPhone, iPad, and the Mac via iCloud or Tweetmarker.\nCustomizable Navigation. The last 2 tabs are customizable and unused tabs are easily accessible.\nSupport for multiple services like Pocket, Instapaper, Readability, CloudApp, Droplr, and more.\nSave drafts, add locations and POI&#8217;s, attach photos/videos, manage your lists, and much more. </p>\n</blockquote>\n\n<p>Tweetbot wasn&#8217;t just <em>fixed</em> for iOS 7. It was rethought, redesigned, redone into a much nicer an experience and a much faster an app. Similar magnitude of delta was involved with 1Password and Screens updates. While Clear was made universal in the new update, it also meant that the users who paid $1.99 for the iPhone app (probably not too long ago) and do not own an iPad were expected to buy another app just to get fixes and enhancements. While in an ideal world, it&#8217;s not too outrageous to spend a couple of dollars to support apps which we use everyday, multiple times, in reality one can understand why reviews like these will be written: </p>\n\n<p><a href=\"http://res.cloudinary.com/daectagjz/image/upload/v1412562454/ClearReviews_qytnxs.png\"><img src=\"http://res.cloudinary.com/daectagjz/image/upload/v1412562454/ClearReviews_qytnxs.png\" alt=\"ClearReviews\" width=100% class=\"aligncenter size-full wp-image-695\" /></a></p>\n\n<p>A less controversial way for Realmac would have been to update the iPhone app for iOS 7 and launch a new one for the iPad. While realizing that there can be months of work put into making the app more functional, it might seem pretty shallow to say that unless there is a significant visual change, upgrade pricing will be backlashed at. However, the reality of the ecosystem is that iOS users have a very heavy visual bias, more so than others. This is a design-inspired platform and users&#8217; expectations are set accordingly. Further, it is not so unfair on users&#8217; part to expect functional and design overhaul when paying again for an app that still works.</p>\n\n<p>While there will always be customers who would despise a developer for not supporting a ¢99 app perpetually and for wanting to pay her bills, I believe that most users are a bit more reasonable than that. However, when seemingly taken for a fool, there will be backlash. While I have heard some whining on Twitter about Tweetbot&#8217;s upgrade-pricing, the overwhelming response has been of great satisfaction and delight. So much so that Tweetbot 3 <a href=\"http://9to5mac.com/2013/10/25/tweetbot-3-becomes-top-paid-app-in-several-countries-developers-share-future-enhancements/\">became</a> the top paid app in <em>35 countries</em>. Rightly so, Matthew Panzarino notes at the end of his <a href=\"http://techcrunch.com/2013/10/24/tweetbot-3-makes-the-case-for-3rd-party-twitter-apps-with-bones-deep-ios-7-rewrite/\">Tweetbot 3 review</a> over at Tech Crunch: </p>\n\n<blockquote>\n<p>I want to pay Tapbots for their hard work getting this thing in the shape that it’s in, which is fantastic. And paying for all of those months of work is the least that most of us can do for as much utility as Twitter power players get out of the app.</p>\n</blockquote>\n\n<p>Tweetbot 3 very well goes on to establish that paid-upgrades is a viable model of doing business in the AppStore. However, one has to be mindful that there must be significant marginal value for the users in the upgrade and their choice to not do so is respected and not dismissed with a cheap-shot.</p>\n","html":"<p>This week one of my most used apps, <a href=\"itunes://itunes.apple.com/us/app/tweetbot-3-for-twitter-iphone/id722294701?mt=8&amp;uo=4\">Tweetbot</a>, was updated for iOS 7. It wasn&#8217;t just updated but launched as a brand-new app with a price-tag of $2.99. In the absence of a system for offering upgraded apps to existing customers at a discounted price, deemed upgrade-pricing, this is a route a lot of developers are taking. So did <a href=\"itunes://itunes.apple.com/us/app/clear+/id689989355?mt=8&amp;uo=4\">Clear</a> when it was updated for iOS 7 and offered as a universal binary. So did 1Password 4. So did <a href=\"itunes://itunes.apple.com/us/app/screens-control-your-computer/id655890150?mt=8&amp;uo=4\">Screens</a>.</p>\n\n<p>When Clear was updated, it brought on a furor of criticism for the developers, Realmac Software, a small indie shop. So much so that they <a href=\"http://realmacsoftware.com/blog/some-changes-for-clear\">retracted</a> and decided to continue developing the older app while offering the new universal app under a different name, Clear+. This was <a href=\"https://twitter.com/marcoarment/status/382899550341853184\">hailed</a> as a specimen of collective shame on the part of AppStore customers. However, I believe that the Clear scene was more about Clear itself than about the &#8220;shameful resistance of users in supporting an indie developer&#8221;. Here is Clear for iPhone before (left) and after (right) the update.</p>\n\n<p><a href=\"http://res.cloudinary.com/daectagjz/image/upload/v1412562450/clear_xp544q.png\"><img src=\"http://res.cloudinary.com/daectagjz/image/upload/v1412562450/clear_xp544q.png\" alt=\"clear\" width=\"640\" height=\"568\" class=\"aligncenter size-full wp-image-697\" /></a></p>\n\n<p>Here are the release notes for the update from <a href=\"http://www.macrumors.com/2013/09/18/realmac-software-launches-universal-clear-to-do-app-with-ios-7-redesign/\">Macrumors</a>. </p>\n\n<blockquote>  \n<p>List Peek - Pull down with two fingers to preview a list in the sidebar.  \nEasily move tasks between lists  \nEven easier-to-find Settings - just swipe from the left edge of the screen!  \nClear for iPhone also now shows you the list name when you’re viewing a set of tasks.</p>  \n</blockquote>\n\n<p>This update was, by most counts, quite minor. Here is a look at Tweetbot before and after the update for iOS 7. (Image from Viticci&#8217;s extensive <a href=\"http://www.macstories.net/reviews/tweetbot-3-review-human-after-all/\">review</a> over at Macstories).</p>\n\n<p><a href=\"http://res.cloudinary.com/daectagjz/image/upload/v1412562451/twwetbot_crjdzh.png\"><img src=\"http://res.cloudinary.com/daectagjz/image/upload/v1412562451/twwetbot_crjdzh.png\" alt=\"twwetbot\" width=\"746\" height=\"650\" class=\"aligncenter size-full wp-image-696\" /></a></p>\n\n<p>Here are the release notes from the update:</p>\n\n<blockquote>  \n<p>Completely redesigned from the ground up for iOS7.  \nNative Push Notifications.  \nMute filters lets you block messages from users without unfollowing them. Mute services, hashtags, people, and even keywords (regex included).  \nSync timeline position, direct message read statuses and mute filters between iPhone, iPad, and the Mac via iCloud or Tweetmarker.  \nCustomizable Navigation. The last 2 tabs are customizable and unused tabs are easily accessible.  \nSupport for multiple services like Pocket, Instapaper, Readability, CloudApp, Droplr, and more.  \nSave drafts, add locations and POI&#8217;s, attach photos/videos, manage your lists, and much more. </p>  \n</blockquote>\n\n<p>Tweetbot wasn&#8217;t just <em>fixed</em> for iOS 7. It was rethought, redesigned, redone into a much nicer an experience and a much faster an app. Similar magnitude of delta was involved with 1Password and Screens updates. While Clear was made universal in the new update, it also meant that the users who paid $1.99 for the iPhone app (probably not too long ago) and do not own an iPad were expected to buy another app just to get fixes and enhancements. While in an ideal world, it&#8217;s not too outrageous to spend a couple of dollars to support apps which we use everyday, multiple times, in reality one can understand why reviews like these will be written: </p>\n\n<p><a href=\"http://res.cloudinary.com/daectagjz/image/upload/v1412562454/ClearReviews_qytnxs.png\"><img src=\"http://res.cloudinary.com/daectagjz/image/upload/v1412562454/ClearReviews_qytnxs.png\" alt=\"ClearReviews\" width=100% class=\"aligncenter size-full wp-image-695\" /></a></p>\n\n<p>A less controversial way for Realmac would have been to update the iPhone app for iOS 7 and launch a new one for the iPad. While realizing that there can be months of work put into making the app more functional, it might seem pretty shallow to say that unless there is a significant visual change, upgrade pricing will be backlashed at. However, the reality of the ecosystem is that iOS users have a very heavy visual bias, more so than others. This is a design-inspired platform and users&#8217; expectations are set accordingly. Further, it is not so unfair on users&#8217; part to expect functional and design overhaul when paying again for an app that still works.</p>\n\n<p>While there will always be customers who would despise a developer for not supporting a ¢99 app perpetually and for wanting to pay her bills, I believe that most users are a bit more reasonable than that. However, when seemingly taken for a fool, there will be backlash. While I have heard some whining on Twitter about Tweetbot&#8217;s upgrade-pricing, the overwhelming response has been of great satisfaction and delight. So much so that Tweetbot 3 <a href=\"http://9to5mac.com/2013/10/25/tweetbot-3-becomes-top-paid-app-in-several-countries-developers-share-future-enhancements/\">became</a> the top paid app in <em>35 countries</em>. Rightly so, Matthew Panzarino notes at the end of his <a href=\"http://techcrunch.com/2013/10/24/tweetbot-3-makes-the-case-for-3rd-party-twitter-apps-with-bones-deep-ios-7-rewrite/\">Tweetbot 3 review</a> over at Tech Crunch: </p>\n\n<blockquote>  \n<p>I want to pay Tapbots for their hard work getting this thing in the shape that it’s in, which is fantastic. And paying for all of those months of work is the least that most of us can do for as much utility as Twitter power players get out of the app.</p>  \n</blockquote>\n\n<p>Tweetbot 3 very well goes on to establish that paid-upgrades is a viable model of doing business in the AppStore. However, one has to be mindful that there must be significant marginal value for the users in the upgrade and their choice to not do so is respected and not dismissed with a cheap-shot.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1382887897000,"created_by":1,"updated_at":1412573829499,"updated_by":1,"published_at":1382887897000,"published_by":1},{"id":80,"uuid":"c99b2781-5f09-4059-b397-4ac0ee534ec9","title":"Simple","slug":"simple","markdown":"<blockquote class=\"twitter-tweet\" lang=\"en\"><p>Would anyone argue against the idea that stripping power user features to reduce complexity is key to Apple’s process?</p>&mdash; Zac Cichy (@zcichy) <a href=\"https://twitter.com/zcichy/status/395987042456195072\">October 31, 2013</a></blockquote> <script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<p>iOS 7 and Apple apps engineered for iOS 7 are not &#8220;simplified&#8221; over their older counterparts. Instead they have be redesigned for a different platform, one that can scale. iOS was created at a time when touch-computing was mostly unheard of and apps could afford to be much simpler. However, that time has passed and Apple is building a platform for the future where touch is ubiquitous and interface is nothing but cruft around information and hence, must be minimized. Apps are already running on incredibly powerful and unbelievably efficient architectures like the 64bit A7 SoC. These apps need to grow and scale much further into becoming standalone solutions instead of a complement to powerful desktop apps. Ironically, desktop apps now need to be complimentary and follow along as users move to touch computing. You cannot go on piling things on top of architectures that were conceived with different goals or you get the likes of Windows 8 and MS office. When features are added to apps beyond the initial plan, they inevitably loose simplicity as those things must be jammed in into an interface that wasn&#8217;t designed to support all those features. You cannot steer or &#8220;adapt&#8221; design. You need to restart, from scratch.</p>\n<blockquote>\n<p>Make things as simple as possible, but not simpler.</p>\n</blockquote>\n<p>That&#8217;s what Apple tends to do with these apps. These aren&#8217;t iOS7-ports or re-skinning efforts. iWork workflow has been completely rethought to work for users who are adopting touch as their primary medium. What is happening is that Apple is designing a content aware interface that can accommodate far more features than the old crufty one. It&#8217;s making them scalable for a future where touch, gestures and content-aware interfaces will be the norm. When redoing enormous apps in this fashion, one has to prioritize. All the features will never make it in the first cut or the platform won&#8217;t materialize until it is too late.</p>\n\n<p>So, what you got wrong is this: the process isn&#8217;t to strip down features to make things <em>simpler</em>, rather to restart and create a platform where far more features and far more powerful functionality can be presented in a much more intuitive and accessible fashion. First step in the process is restarting from scratch and with constraints in mind, one can understand why these apps appear watered-down. Feature-loss is a temporary but practically inevitable outcome of such a process. And a process like this is the only way to ensure relevance as computing moves further closer into the human realm.</p>\n\n<p>The cause isn&#8217;t a desire to simplify for it&#8217;s own sake and the effect isn&#8217;t stripped-down apps. The cause is the start of a new era in computing and the effect is apps which are much more flexible, powerful and scalable. This intermediate stage is just a temporary side-effect.</p>\n\n<p>I&#8217;ll say, these are growing pains. Stop whining. </p>","html":"<blockquote class=\"twitter-tweet\" lang=\"en\"><p>Would anyone argue against the idea that stripping power user features to reduce complexity is key to Apple’s process?</p>&mdash; Zac Cichy (@zcichy) <a href=\"https://twitter.com/zcichy/status/395987042456195072\">October 31, 2013</a></blockquote> <script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<p>iOS 7 and Apple apps engineered for iOS 7 are not &#8220;simplified&#8221; over their older counterparts. Instead they have be redesigned for a different platform, one that can scale. iOS was created at a time when touch-computing was mostly unheard of and apps could afford to be much simpler. However, that time has passed and Apple is building a platform for the future where touch is ubiquitous and interface is nothing but cruft around information and hence, must be minimized. Apps are already running on incredibly powerful and unbelievably efficient architectures like the 64bit A7 SoC. These apps need to grow and scale much further into becoming standalone solutions instead of a complement to powerful desktop apps. Ironically, desktop apps now need to be complimentary and follow along as users move to touch computing. You cannot go on piling things on top of architectures that were conceived with different goals or you get the likes of Windows 8 and MS office. When features are added to apps beyond the initial plan, they inevitably loose simplicity as those things must be jammed in into an interface that wasn&#8217;t designed to support all those features. You cannot steer or &#8220;adapt&#8221; design. You need to restart, from scratch.</p>  \n<blockquote>  \n<p>Make things as simple as possible, but not simpler.</p>  \n</blockquote>  \n\n<p>That&#8217;s what Apple tends to do with these apps. These aren&#8217;t iOS7-ports or re-skinning efforts. iWork workflow has been completely rethought to work for users who are adopting touch as their primary medium. What is happening is that Apple is designing a content aware interface that can accommodate far more features than the old crufty one. It&#8217;s making them scalable for a future where touch, gestures and content-aware interfaces will be the norm. When redoing enormous apps in this fashion, one has to prioritize. All the features will never make it in the first cut or the platform won&#8217;t materialize until it is too late.</p>\n\n<p>So, what you got wrong is this: the process isn&#8217;t to strip down features to make things <em>simpler</em>, rather to restart and create a platform where far more features and far more powerful functionality can be presented in a much more intuitive and accessible fashion. First step in the process is restarting from scratch and with constraints in mind, one can understand why these apps appear watered-down. Feature-loss is a temporary but practically inevitable outcome of such a process. And a process like this is the only way to ensure relevance as computing moves further closer into the human realm.</p>\n\n<p>The cause isn&#8217;t a desire to simplify for it&#8217;s own sake and the effect isn&#8217;t stripped-down apps. The cause is the start of a new era in computing and the effect is apps which are much more flexible, powerful and scalable. This intermediate stage is just a temporary side-effect.</p>\n\n<p>I&#8217;ll say, these are growing pains. Stop whining. </p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1383232666000,"created_by":1,"updated_at":1412573740845,"updated_by":1,"published_at":1383232666000,"published_by":1},{"id":81,"uuid":"eeb83a59-e7a5-4d62-b4af-d4c0f3154235","title":"Custom stylesheets on iOS","slug":"custom-stylesheets-on-ios","markdown":"<p>Today <a href=\"http://www.feynmanlectures.caltech.edu/\">Caltech</a> published the <a href=\"http://www.feynmanlectures.caltech.edu/III_toc.html\">third volume</a> of <a href=\"http://en.wikipedia.org/wiki/The_Feynman_Lectures_on_Physics\">The Feynman Lectures</a> making me jump all around, not quite unlike when the <a href=\"http://www.feynmanlectures.caltech.edu/I_toc.html\">first volume</a> became available. Having bought an iPad Air and <a href=\"https://twitter.com/gravicle/statuses/404408057134067712\">loving it very much</a>, I use it for most of my reading and studying. Feynman lectures looked quite unappealing on the iPad curtesy of the persistent &#8220;Buy Now&#8221; menu floating in the right-top corner and the tiny font size. To rectify this, I started looking for a way to load custom stylesheets is Safari on the iPad. I tried using Provisioning Profiles but could not figure how to make them work. Then, I stumbled across <a href=\"http://juicystudio.com/article/accessible-stylesheet-bookmarklet.php\">this tutorial</a> on Juicy Studio detailing the process of creating an accessibility stylesheet bookmarklet. It basically solved the issue for me. Here is a page from the HTML version of The Feynman Lectures before and after.</p>\n\n<img src=\"http://spinhalf.net/wp-content/uploads/2013/11/fy1.jpg\" width=\"100%\" /></br>\n\n<p>How to do it yourselves?</p>\n\n<ul>\n<li>Create a stylesheet, upload it to your hosting account and grab a direct link to the <code>.css</code> file.</li>\n<li>Paste the link in place of <code>STYLESHEET-LINK-HERE</code> in the following JS</li>\n</ul>\n\n<p><code>javascript:(function()%7Bif%20(!document.getElementById(&#8216;someuniqueid&#8217;))%7Bvar%20objHead%20=%20document.getElementsByTagName(&#8216;head&#8217;);%20if%20(objHead%5B0%5D)%7Bif%20(document.createElementNS%20&amp;&amp;%20objHead%5B0%5D.tagName%20==%20&#8217;head&#8216;)%20var%20objCSS%20=%20objHead%5B0%5D.appendChild(document.createElementNS(&#8216;http://www.w3.org/1999/xhtml&#8217;,%20&#8217;link&#8217;));%20else%20var%20objCSS%20=%20objHead%5B0%5D.appendChild(document.createElement(&#8216;link&#8217;));%20objCSS.id%20=%20&#8217;someuniqueid&#8216;;%20objCSS.rel%20=%20&#8217;stylesheet&#8217;;%20objCSS.href%20=%20&#8217;STYLESHEET-LINK-HERE&#8216;;%20objCSS.type%20=%20&#8217;text/css&#8217;;%7D%7D%7D)()</code></p>\n\n<ul>\n<li>Create a bookmarklet with the given code. If you need help with this, <a href=\"http://www.youtube.com/watch?v=Jm1j9-lfw98\">here is a helpful video</a>; except that you&#8217;ll erase the URL and paste the JS we just edited instead of editing the URL.</li>\n<li>Place the bookmarklets in &#8220;Bookmarks&#8221;, i.e. on the top level. This will allow you quick access.</li>\n</ul>\n\n<p>Here is the bookmarklet I created for Feynman Lectures.</p>\n\n<pre><code>javascript:(function()%7Bif%20(!document.getElementById('someuniqueid'))%7Bvar%20objHead%20=%20document.getElementsByTagName('head');%20if%20(objHead%5B0%5D)%7Bif%20(document.createElementNS%20&amp;&amp;%20objHead%5B0%5D.tagName%20==%20'head')%20var%20objCSS%20=%20objHead%5B0%5D.appendChild(document.createElementNS('http://www.w3.org/1999/xhtml',%20'link'));%20else%20var%20objCSS%20=%20objHead%5B0%5D.appendChild(document.createElement('link'));%20objCSS.id%20=%20'someuniqueid';%20objCSS.rel%20=%20'stylesheet';%20objCSS.href%20=%20'http://culturedpixel.com/custom-stylesheets/fy.css';%20objCSS.type%20=%20'text/css';%7D%7D%7D)()\n</code></pre>\n\n<p>Here is another with dark mode!</p>\n\n<pre><code>javascript:(function()%7Bif%20(!document.getElementById('someuniqueid'))%7Bvar%20objHead%20=%20document.getElementsByTagName('head');%20if%20(objHead%5B0%5D)%7Bif%20(document.createElementNS%20&amp;&amp;%20objHead%5B0%5D.tagName%20==%20'head')%20var%20objCSS%20=%20objHead%5B0%5D.appendChild(document.createElementNS('http://www.w3.org/1999/xhtml',%20'link'));%20else%20var%20objCSS%20=%20objHead%5B0%5D.appendChild(document.createElement('link'));%20objCSS.id%20=%20'someuniqueid';%20objCSS.rel%20=%20'stylesheet';%20objCSS.href%20=%20'http://culturedpixel.com/custom-stylesheets/fy-dark.css';%20objCSS.type%20=%20'text/css';%7D%7D%7D)()\n</code></pre>\n\n<p>Here is one that I adapted from the <a href=\"https://github.com/gingerbeardman/Beautipedia.safariextension\">Beautipedia Safari Extension</a>. It makes Wikipedia a bit better than the &#8220;Reader&#8221; view on the iPad and you don&#8217;t even have to go to another app.</p>\n\n<pre><code>javascript:(function()%7Bif%20(!document.getElementById('someuniqueid'))%7Bvar%20objHead%20=%20document.getElementsByTagName('head');%20if%20(objHead%5B0%5D)%7Bif%20(document.createElementNS%20&amp;&amp;%20objHead%5B0%5D.tagName%20==%20'head')%20var%20objCSS%20=%20objHead%5B0%5D.appendChild(document.createElementNS('http://www.w3.org/1999/xhtml',%20'link'));%20else%20var%20objCSS%20=%20objHead%5B0%5D.appendChild(document.createElement('link'));%20objCSS.id%20=%20'someuniqueid';%20objCSS.rel%20=%20'stylesheet';%20objCSS.href%20=%20'http://culturedpixel.com/custom-stylesheets/beautipedia/beautipedia.css';%20objCSS.type%20=%20'text/css';%7D%7D%7D)()\n</code></pre>\n\n<p>Before and after shots:</p>\n\n<img src=\"http://spinhalf.net/wp-content/uploads/2013/11/wiki1.jpg\" width=\"100%\" /></br>","html":"<p>Today <a href=\"http://www.feynmanlectures.caltech.edu/\">Caltech</a> published the <a href=\"http://www.feynmanlectures.caltech.edu/III_toc.html\">third volume</a> of <a href=\"http://en.wikipedia.org/wiki/The_Feynman_Lectures_on_Physics\">The Feynman Lectures</a> making me jump all around, not quite unlike when the <a href=\"http://www.feynmanlectures.caltech.edu/I_toc.html\">first volume</a> became available. Having bought an iPad Air and <a href=\"https://twitter.com/gravicle/statuses/404408057134067712\">loving it very much</a>, I use it for most of my reading and studying. Feynman lectures looked quite unappealing on the iPad curtesy of the persistent &#8220;Buy Now&#8221; menu floating in the right-top corner and the tiny font size. To rectify this, I started looking for a way to load custom stylesheets is Safari on the iPad. I tried using Provisioning Profiles but could not figure how to make them work. Then, I stumbled across <a href=\"http://juicystudio.com/article/accessible-stylesheet-bookmarklet.php\">this tutorial</a> on Juicy Studio detailing the process of creating an accessibility stylesheet bookmarklet. It basically solved the issue for me. Here is a page from the HTML version of The Feynman Lectures before and after.</p>\n\n<p><img src=\"http://spinhalf.net/wp-content/uploads/2013/11/fy1.jpg\" width=\"100%\" /></br></p>\n\n<p>How to do it yourselves?</p>\n\n<ul>  \n<li>Create a stylesheet, upload it to your hosting account and grab a direct link to the <code>.css</code> file.</li>  \n<li>Paste the link in place of <code>STYLESHEET-LINK-HERE</code> in the following JS</li>  \n</ul>\n\n<p><code>javascript:(function()%7Bif%20(!document.getElementById(&#8216;someuniqueid&#8217;))%7Bvar%20objHead%20=%20document.getElementsByTagName(&#8216;head&#8217;);%20if%20(objHead%5B0%5D)%7Bif%20(document.createElementNS%20&amp;&amp;%20objHead%5B0%5D.tagName%20==%20&#8217;head&#8216;)%20var%20objCSS%20=%20objHead%5B0%5D.appendChild(document.createElementNS(&#8216;http://www.w3.org/1999/xhtml&#8217;,%20&#8217;link&#8217;));%20else%20var%20objCSS%20=%20objHead%5B0%5D.appendChild(document.createElement(&#8216;link&#8217;));%20objCSS.id%20=%20&#8217;someuniqueid&#8216;;%20objCSS.rel%20=%20&#8217;stylesheet&#8217;;%20objCSS.href%20=%20&#8217;STYLESHEET-LINK-HERE&#8216;;%20objCSS.type%20=%20&#8217;text/css&#8217;;%7D%7D%7D)()</code></p>\n\n<ul>  \n<li>Create a bookmarklet with the given code. If you need help with this, <a href=\"http://www.youtube.com/watch?v=Jm1j9-lfw98\">here is a helpful video</a>; except that you&#8217;ll erase the URL and paste the JS we just edited instead of editing the URL.</li>  \n<li>Place the bookmarklets in &#8220;Bookmarks&#8221;, i.e. on the top level. This will allow you quick access.</li>  \n</ul>\n\n<p>Here is the bookmarklet I created for Feynman Lectures.</p>\n\n<pre><code>javascript:(function()%7Bif%20(!document.getElementById('someuniqueid'))%7Bvar%20objHead%20=%20document.getElementsByTagName('head');%20if%20(objHead%5B0%5D)%7Bif%20(document.createElementNS%20&amp;&amp;%20objHead%5B0%5D.tagName%20==%20'head')%20var%20objCSS%20=%20objHead%5B0%5D.appendChild(document.createElementNS('http://www.w3.org/1999/xhtml',%20'link'));%20else%20var%20objCSS%20=%20objHead%5B0%5D.appendChild(document.createElement('link'));%20objCSS.id%20=%20'someuniqueid';%20objCSS.rel%20=%20'stylesheet';%20objCSS.href%20=%20'http://culturedpixel.com/custom-stylesheets/fy.css';%20objCSS.type%20=%20'text/css';%7D%7D%7D)()\n</code></pre>\n\n<p>Here is another with dark mode!</p>\n\n<pre><code>javascript:(function()%7Bif%20(!document.getElementById('someuniqueid'))%7Bvar%20objHead%20=%20document.getElementsByTagName('head');%20if%20(objHead%5B0%5D)%7Bif%20(document.createElementNS%20&amp;&amp;%20objHead%5B0%5D.tagName%20==%20'head')%20var%20objCSS%20=%20objHead%5B0%5D.appendChild(document.createElementNS('http://www.w3.org/1999/xhtml',%20'link'));%20else%20var%20objCSS%20=%20objHead%5B0%5D.appendChild(document.createElement('link'));%20objCSS.id%20=%20'someuniqueid';%20objCSS.rel%20=%20'stylesheet';%20objCSS.href%20=%20'http://culturedpixel.com/custom-stylesheets/fy-dark.css';%20objCSS.type%20=%20'text/css';%7D%7D%7D)()\n</code></pre>\n\n<p>Here is one that I adapted from the <a href=\"https://github.com/gingerbeardman/Beautipedia.safariextension\">Beautipedia Safari Extension</a>. It makes Wikipedia a bit better than the &#8220;Reader&#8221; view on the iPad and you don&#8217;t even have to go to another app.</p>\n\n<pre><code>javascript:(function()%7Bif%20(!document.getElementById('someuniqueid'))%7Bvar%20objHead%20=%20document.getElementsByTagName('head');%20if%20(objHead%5B0%5D)%7Bif%20(document.createElementNS%20&amp;&amp;%20objHead%5B0%5D.tagName%20==%20'head')%20var%20objCSS%20=%20objHead%5B0%5D.appendChild(document.createElementNS('http://www.w3.org/1999/xhtml',%20'link'));%20else%20var%20objCSS%20=%20objHead%5B0%5D.appendChild(document.createElement('link'));%20objCSS.id%20=%20'someuniqueid';%20objCSS.rel%20=%20'stylesheet';%20objCSS.href%20=%20'http://culturedpixel.com/custom-stylesheets/beautipedia/beautipedia.css';%20objCSS.type%20=%20'text/css';%7D%7D%7D)()\n</code></pre>\n\n<p>Before and after shots:</p>\n\n<p><img src=\"http://spinhalf.net/wp-content/uploads/2013/11/wiki1.jpg\" width=\"100%\" /></br></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1385328267000,"created_by":1,"updated_at":1412572712793,"updated_by":1,"published_at":1385328267000,"published_by":1},{"id":82,"uuid":"6f38a709-a3fb-45c0-b8ee-c410d30d2c37","title":"Grace Hopper","slug":"grace-hopper","markdown":"<blockquote>The most important thing I've accomplished, other than building the compiler, is training young people. They come to me, you know, and say, \"Do you think we can do this?\" I say, \"Try it.\" And I back 'em up. They need that. I keep track of them as they get older and I stir 'em up at intervals so they don't forget to take chances.\"</blockquote>\r\n<p style=\"text-align: right;\">-Grace Hopper</p>","html":"<blockquote>The most important thing I've accomplished, other than building the compiler, is training young people. They come to me, you know, and say, \"Do you think we can do this?\" I say, \"Try it.\" And I back 'em up. They need that. I keep track of them as they get older and I stir 'em up at intervals so they don't forget to take chances.\"</blockquote>  \n\n<p style=\"text-align: right;\">-Grace Hopper</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1386586510000,"created_by":1,"updated_at":1386586510000,"updated_by":1,"published_at":1386586510000,"published_by":1},{"id":83,"uuid":"e793291a-f7d6-48b5-b2b5-3ccb76fdadda","title":"Taming TestFlight","slug":"taming-testflight","markdown":"<p>While <a href=\"http://help.testflightapp.com/customer/portal/articles/1352859-getting-started-as-a-developer\">TestFlight</a> is an incredibly useful service, it has been a bit of a skirmish for me to get around. The workflow can be very convoluted. I am not sure it is my own dense brain or the process is indeed intricate. So, I wanted to write a guide for my own reference and for new developers.</p>\n\n<p>First, here are TestFlight&#8217;s guides for getting started:</p>\n\n<ul>\n<li><a href=\"http://help.testflightapp.com/customer/portal/articles/1352859-getting-started-as-a-developer\">TestFlight | Getting started as a Developer</a></li>\n<li><a href=\"http://help.testflightapp.com/customer/portal/articles/1339397-getting-started-as-a-tester\">TestFlight | Getting started as a Tester</a></li>\n</ul>\n\n<p>However there are caveats, from Apple&#8217;s as well as TestFlight&#8217;s side which make the process a pain in the butt! So, here is the workflow that works for me. This is being written from the perspective of a developer.</p>\n\n<ol>\n<li>Setup\n\n<ol>\n<li>If you don&#8217;t have a TF account, create one → <a href=\"https://testflightapp.com/register/\">TestFlight » Beta Testing On The Fly</a>. If you have a tester account, flip the switch in &#8216;Account Settings&#8217; to allow access to developer features → <a href=\"https://testflightapp.com/account/\">TestFlight » Your Account</a>.</li>\n<li>Create a team if you don&#8217;t have one already. All apps uploaded to a team will be visible to all the team members. However, you can configure access to build granularly, as I discuss in 3.2.</li>\n<li>In your Xcode project, add and enable TF SDK → <a href=\"https://testflightapp.com/sdk/download/\">TestFlight » SDK</a>. Follow the instructions that ship in &#8216;Readme.md&#8217;.</li>\n</ol></li>\n<li>Generating and uploading a build\n\n<ol>\n<li>Set the deployment device to <em>iOS Device</em> in Xcode.</li>\n<li>Then archive a build. <strong>Product » Archive</strong>. If the build fails with an error about missing provisioning profile, set the appropriate <strong>team</strong> profile here: <strong>Build Setting » Code Signing » Provisioning Profile</strong>. If you set a distribution profile, TF will reject the build.</li>\n<li>Once the build is archived, organizer will pop-up: <strong>Distribute » Save For Enterprise or Ad Hoc Deployment</strong>.</li>\n<li>Having generated the IPA, upload it to TF → <a href=\"https://testflightapp.com/dashboard/\">TestFlight » Dashboard</a>. You can also use their desktop app → <a href=\"https://testflightapp.com/dashboard/tools\">TestFlight » Tools</a>.</li>\n</ol></li>\n<li>What devices have access?\n\n<ol>\n<li>TF can read the provisioning profile that is embedded in your uploaded IPA. So, all the devices you have in you provisioning portal at the time of generating the IPA will show up in TF. Those devices which have associated TF accounts appear as testers&#8217; names with device details, others will be just UDIDs.</li>\n<li>To see all the devices in the current profile follow these breadcrumbs: <strong><a href=\"https://testflightapp.com/dashboard/applications/\">Apps</a> » Your App » Build » Permissions (in the left-sidebar)</strong>. Here you can granularly configure access.</li>\n</ol></li>\n<li>Inviting testers\n\n<ol>\n<li>TF cannot directly add or modify devices in your developer account. However, it does send you a nice email with UDID and other device info from testers which you can use to add devices to the developer portal.</li>\n<li>Invite new testers via TF → <a href=\"https://testflightapp.com/dashboard/team/members/add/\">TestFlight » Add a Teammate</a>. Better than sending emails is just sharing recruitment links. Grab it here → <a href=\"https://www.testflightapp.com/dashboard/team/recruitment/edit\">TestFlight » Recruitment</a></li>\n<li>They will receive an email with an invite which they can follow to create a new account and/or install your provisioning profile on their device. Once they do so, you&#8217;ll receive an email with their device details. Sometimes, this can take a while; you need to wait this out or ask testers to send you their UDIDs manually<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a>.</li>\n<li>Add the device(s) to provisioning portal → <a href=\"https://developer.apple.com/account/ios/device/deviceList.action\">iOS Devices - Apple Developer</a>. You can upload the file(s) TF sent you in the email.</li>\n<li>Now, your new testers will show up in TF under <em>Teammate Devices Not On This Profile</em>. Apps will start showing up for new testers but they will be denied installation.</li>\n</ol></li>\n<li>Adding testers to profile\n\n<ol>\n<li>The simplest way to add new testers to a TF profile is to upload a new build after refreshing Xcode<a href=\"#fn:2\" id=\"fnref:2\" title=\"see footnote\" class=\"footnote\">[2]</a>. To refresh Xcode: <strong>Preferences » Accounts » Select your Apple ID » View Details » Refresh arrow</strong>. Now generate a new IPA and upload it to TF. On the <em>Permissions</em> page for your build, check the new devices and voila.. Your testers will now have access (ask them to refresh the TF page in their browser).</li>\n<li>If you&#8217;re not ready to upload a new build, you can add new testers by updating the profile in TF.\n\n<ol>\n<li>After adding devices in iOS Provisioning Portal, download the updated profile → <a href=\"https://developer.apple.com/account/ios/profile/profileList.action\">iOS Provisioning Profiles - Apple Developer</a>.</li>\n<li>In TF, on <em>Permissions</em> page: <strong>Update Profile » Upload</strong>.</li>\n<li>Check the new teammates/devices to permit them to install the build.</li>\n<li>Ask your testers to refresh TF on their devices and they will be prompted to install a new profile<a href=\"#fn:3\" id=\"fnref:3\" title=\"see footnote\" class=\"footnote\">[3]</a>. Once they do, they can access and install your apps!</li>\n<li>You won&#8217;t have to do this for new builds as they will come embedded with these new devices, as detailed in 5.1.</li>\n</ol></li>\n</ol></li>\n</ol>\n\n<p>And that is that. TF is a little overwhelming for new users; I should know! If I missed anything or you need clarification about something, feel free to let me know or ask me <a href=\"https://twitter.com/gravicle\">@gravicle</a>.</p>\n\n<p>Happy building!</p>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n\n<li id=\"fn:1\">\n<p>Please ask them to not use apps like <a href=\"https://itunes.apple.com/us/app/udid-sender/id306603975?mt=8\">this</a>. iOS 7 onwards Apple has blocked access to UDIDs and all these apps can return are advertising identifiers which are useless for distribution purposes. An alternative is to use iTunes → <a href=\"http://whatsmyudid.com/\">What&#8217;s my UDID?</a>. <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\n</li>\n\n<li id=\"fn:2\">\n<p>You don&#8217;t <em>have</em> to. The changes might propagate in time, but it sometimes takes a long time for me. Refreshing ensures that new devices are included in the embedded profile. <a href=\"#fnref:2\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\n</li>\n\n<li id=\"fn:3\">\n<p>Another reason why this route is sub-optimal. <a href=\"#fnref:3\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>\n</li>\n\n</ol>\n</div>","html":"<p>While <a href=\"http://help.testflightapp.com/customer/portal/articles/1352859-getting-started-as-a-developer\">TestFlight</a> is an incredibly useful service, it has been a bit of a skirmish for me to get around. The workflow can be very convoluted. I am not sure it is my own dense brain or the process is indeed intricate. So, I wanted to write a guide for my own reference and for new developers.</p>\n\n<p>First, here are TestFlight&#8217;s guides for getting started:</p>\n\n<ul>  \n<li><a href=\"http://help.testflightapp.com/customer/portal/articles/1352859-getting-started-as-a-developer\">TestFlight | Getting started as a Developer</a></li>  \n<li><a href=\"http://help.testflightapp.com/customer/portal/articles/1339397-getting-started-as-a-tester\">TestFlight | Getting started as a Tester</a></li>  \n</ul>\n\n<p>However there are caveats, from Apple&#8217;s as well as TestFlight&#8217;s side which make the process a pain in the butt! So, here is the workflow that works for me. This is being written from the perspective of a developer.</p>\n\n<ol>  \n<li>Setup\n\n<ol>  \n<li>If you don&#8217;t have a TF account, create one → <a href=\"https://testflightapp.com/register/\">TestFlight » Beta Testing On The Fly</a>. If you have a tester account, flip the switch in &#8216;Account Settings&#8217; to allow access to developer features → <a href=\"https://testflightapp.com/account/\">TestFlight » Your Account</a>.</li>  \n<li>Create a team if you don&#8217;t have one already. All apps uploaded to a team will be visible to all the team members. However, you can configure access to build granularly, as I discuss in 3.2.</li>  \n<li>In your Xcode project, add and enable TF SDK → <a href=\"https://testflightapp.com/sdk/download/\">TestFlight » SDK</a>. Follow the instructions that ship in &#8216;Readme.md&#8217;.</li>  \n</ol></li>  \n<li>Generating and uploading a build\n\n<ol>  \n<li>Set the deployment device to <em>iOS Device</em> in Xcode.</li>  \n<li>Then archive a build. <strong>Product » Archive</strong>. If the build fails with an error about missing provisioning profile, set the appropriate <strong>team</strong> profile here: <strong>Build Setting » Code Signing » Provisioning Profile</strong>. If you set a distribution profile, TF will reject the build.</li>  \n<li>Once the build is archived, organizer will pop-up: <strong>Distribute » Save For Enterprise or Ad Hoc Deployment</strong>.</li>  \n<li>Having generated the IPA, upload it to TF → <a href=\"https://testflightapp.com/dashboard/\">TestFlight » Dashboard</a>. You can also use their desktop app → <a href=\"https://testflightapp.com/dashboard/tools\">TestFlight » Tools</a>.</li>  \n</ol></li>  \n<li>What devices have access?\n\n<ol>  \n<li>TF can read the provisioning profile that is embedded in your uploaded IPA. So, all the devices you have in you provisioning portal at the time of generating the IPA will show up in TF. Those devices which have associated TF accounts appear as testers&#8217; names with device details, others will be just UDIDs.</li>  \n<li>To see all the devices in the current profile follow these breadcrumbs: <strong><a href=\"https://testflightapp.com/dashboard/applications/\">Apps</a> » Your App » Build » Permissions (in the left-sidebar)</strong>. Here you can granularly configure access.</li>  \n</ol></li>  \n<li>Inviting testers\n\n<ol>  \n<li>TF cannot directly add or modify devices in your developer account. However, it does send you a nice email with UDID and other device info from testers which you can use to add devices to the developer portal.</li>  \n<li>Invite new testers via TF → <a href=\"https://testflightapp.com/dashboard/team/members/add/\">TestFlight » Add a Teammate</a>. Better than sending emails is just sharing recruitment links. Grab it here → <a href=\"https://www.testflightapp.com/dashboard/team/recruitment/edit\">TestFlight » Recruitment</a></li>  \n<li>They will receive an email with an invite which they can follow to create a new account and/or install your provisioning profile on their device. Once they do so, you&#8217;ll receive an email with their device details. Sometimes, this can take a while; you need to wait this out or ask testers to send you their UDIDs manually<a href=\"#fn:1\" id=\"fnref:1\" title=\"see footnote\" class=\"footnote\">[1]</a>.</li>  \n<li>Add the device(s) to provisioning portal → <a href=\"https://developer.apple.com/account/ios/device/deviceList.action\">iOS Devices - Apple Developer</a>. You can upload the file(s) TF sent you in the email.</li>  \n<li>Now, your new testers will show up in TF under <em>Teammate Devices Not On This Profile</em>. Apps will start showing up for new testers but they will be denied installation.</li>  \n</ol></li>  \n<li>Adding testers to profile\n\n<ol>  \n<li>The simplest way to add new testers to a TF profile is to upload a new build after refreshing Xcode<a href=\"#fn:2\" id=\"fnref:2\" title=\"see footnote\" class=\"footnote\">[2]</a>. To refresh Xcode: <strong>Preferences » Accounts » Select your Apple ID » View Details » Refresh arrow</strong>. Now generate a new IPA and upload it to TF. On the <em>Permissions</em> page for your build, check the new devices and voila.. Your testers will now have access (ask them to refresh the TF page in their browser).</li>  \n<li>If you&#8217;re not ready to upload a new build, you can add new testers by updating the profile in TF.\n\n<ol>  \n<li>After adding devices in iOS Provisioning Portal, download the updated profile → <a href=\"https://developer.apple.com/account/ios/profile/profileList.action\">iOS Provisioning Profiles - Apple Developer</a>.</li>  \n<li>In TF, on <em>Permissions</em> page: <strong>Update Profile » Upload</strong>.</li>  \n<li>Check the new teammates/devices to permit them to install the build.</li>  \n<li>Ask your testers to refresh TF on their devices and they will be prompted to install a new profile<a href=\"#fn:3\" id=\"fnref:3\" title=\"see footnote\" class=\"footnote\">[3]</a>. Once they do, they can access and install your apps!</li>  \n<li>You won&#8217;t have to do this for new builds as they will come embedded with these new devices, as detailed in 5.1.</li>  \n</ol></li>  \n</ol></li>  \n</ol>\n\n<p>And that is that. TF is a little overwhelming for new users; I should know! If I missed anything or you need clarification about something, feel free to let me know or ask me <a href=\"https://twitter.com/gravicle\">@gravicle</a>.</p>\n\n<p>Happy building!</p>\n\n<div class=\"footnotes\">  \n<hr />  \n<ol>\n\n<li id=\"fn:1\">  \n<p>Please ask them to not use apps like <a href=\"https://itunes.apple.com/us/app/udid-sender/id306603975?mt=8\">this</a>. iOS 7 onwards Apple has blocked access to UDIDs and all these apps can return are advertising identifiers which are useless for distribution purposes. An alternative is to use iTunes → <a href=\"http://whatsmyudid.com/\">What&#8217;s my UDID?</a>. <a href=\"#fnref:1\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n<li id=\"fn:2\">  \n<p>You don&#8217;t <em>have</em> to. The changes might propagate in time, but it sometimes takes a long time for me. Refreshing ensures that new devices are included in the embedded profile. <a href=\"#fnref:2\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n<li id=\"fn:3\">  \n<p>Another reason why this route is sub-optimal. <a href=\"#fnref:3\" title=\"return to article\" class=\"reversefootnote\">&#160;&#8617;</a></p>  \n</li>\n\n</ol>  \n</div>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1388939001000,"created_by":1,"updated_at":1388962556000,"updated_by":1,"published_at":1388939001000,"published_by":1},{"id":84,"uuid":"622583ed-3ae2-4e9b-a80b-cb0d74a88c28","title":"Simbol","slug":"simbol","markdown":"Yesterday I launched <a href=\"http://culturedpixel.com/simbol/\"><strong>Simbol</strong></a>, an app to quickly find and use symbols and special characters on the iPhone. I developed the app to address one of the most annoying things about writing on iOS: finding symbols. I am a mathematics major and also study quite a lot of physics. Both require a <em>very</em> frequent use of symbols and characters which aren't found on QWERTY keyboards. OS X has a very handy keyboard and character viewer that carries a big chunk of the Unicode library. However, iOS has nothing that comes even remotely close. I created a library of LaTeX snippets in TextExpander but that mostly <a href=\"http://smilesoftware.com/blog/entry/how-ios-7-affects-textexpander-touch\">went away</a> with iOS 7. As a result, I am practically unable to take notes on iOS in most of my classes.\n\nI wasn't sure that there were many people, besides myself, who would find something like this useful. However, the response from friends and new users has been great and you all seem to like the app<sup id=\"fnref-759:fn-1\"><a href=\"#fn-759:fn-1\" rel=\"footnote\">1</a></sup>. I am glad! Looking at most of the user feedback, I believe it would help to know the direction <em>Simbol</em> is headed in.\n\nThis brings us to the motive of <em>Simbol</em>: <strong>Simbol is intended to be <em>the</em> Keyboard And Character Viewer for iOS</strong>. This involves bringing the app on par with OS X. That is an enormous number of entities for the current design to efficiently support. Thus, I am already working on rethinking the workflow. That's all I can say today.\n\n<em>Simbol</em> is something I created to address one of my pains of writing and working on iOS. It is really great to know that others find it useful. I can't wait to share what's in the works!\n\nI would love to hear what you think, or if you have any feature requests. You can always find me on twitter: <a href=\"https://twitter.com/gravicle\">@gravicle</a>, or email me <a href=\"mailto:gravicle@gmail.com\">here</a>.\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n\n<li id=\"fn-759:fn-1\">\nGabe at <a href=\"http://www.macdrifter.com/2014/01/simbol-for-iphone.html\">Macdrifter</a> and Viticci at <a href=\"http://www.macstories.net/reviews/simbol-for-iphone/\">MacStories</a> even reviewed the app! I did <em>not</em> expect that to happen!&#160;<a href=\"#fnref-759:fn-1\" rev=\"footnote\">&#8617;</a>\n</li>\n\n</ol>\n</div>\n","html":"<p>Yesterday I launched <a href=\"http://culturedpixel.com/simbol/\"><strong>Simbol</strong></a>, an app to quickly find and use symbols and special characters on the iPhone. I developed the app to address one of the most annoying things about writing on iOS: finding symbols. I am a mathematics major and also study quite a lot of physics. Both require a <em>very</em> frequent use of symbols and characters which aren't found on QWERTY keyboards. OS X has a very handy keyboard and character viewer that carries a big chunk of the Unicode library. However, iOS has nothing that comes even remotely close. I created a library of LaTeX snippets in TextExpander but that mostly <a href=\"http://smilesoftware.com/blog/entry/how-ios-7-affects-textexpander-touch\">went away</a> with iOS 7. As a result, I am practically unable to take notes on iOS in most of my classes.</p>\n\n<p>I wasn't sure that there were many people, besides myself, who would find something like this useful. However, the response from friends and new users has been great and you all seem to like the app<sup id=\"fnref-759:fn-1\"><a href=\"#fn-759:fn-1\" rel=\"footnote\">1</a></sup>. I am glad! Looking at most of the user feedback, I believe it would help to know the direction <em>Simbol</em> is headed in.</p>\n\n<p>This brings us to the motive of <em>Simbol</em>: <strong>Simbol is intended to be <em>the</em> Keyboard And Character Viewer for iOS</strong>. This involves bringing the app on par with OS X. That is an enormous number of entities for the current design to efficiently support. Thus, I am already working on rethinking the workflow. That's all I can say today.</p>\n\n<p><em>Simbol</em> is something I created to address one of my pains of writing and working on iOS. It is really great to know that others find it useful. I can't wait to share what's in the works!</p>\n\n<p>I would love to hear what you think, or if you have any feature requests. You can always find me on twitter: <a href=\"https://twitter.com/gravicle\">@gravicle</a>, or email me <a href=\"mailto:gravicle@gmail.com\">here</a>.</p>\n\n<div class=\"footnotes\">  \n<hr />  \n<ol>\n\n<li id=\"fn-759:fn-1\">  \nGabe at <a href=\"http://www.macdrifter.com/2014/01/simbol-for-iphone.html\">Macdrifter</a> and Viticci at <a href=\"http://www.macstories.net/reviews/simbol-for-iphone/\">MacStories</a> even reviewed the app! I did <em>not</em> expect that to happen!&#160;<a href=\"#fnref-759:fn-1\" rev=\"footnote\">&#8617;</a>  \n</li>\n\n</ol>  \n</div>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1389632790000,"created_by":1,"updated_at":1389639397000,"updated_by":1,"published_at":1389632790000,"published_by":1},{"id":85,"uuid":"097d7822-f6ac-4806-b31d-6350a41a154e","title":"App Story with Vic Hudson","slug":"app-story-with-vic-hudson","markdown":"This week I was on Vic Hudson's new <em>App Story</em> podcast. It was a lot of fun!<br>\n<em>App Story</em> is where Vic interviews indie developers about their apps and how they came to be. A must subscribe!\n<br><br>\n<a href=\"http://www.appstorypodcast.com/apps/simbol\">Episode 2: Simbol</a><br>\niTunes: <a href=\"https://itunes.apple.com/us/podcast/app-story/id824837654?mt=2&at=11ltML&ct=ASPFeed\">App Story</a>\n","html":"<p>This week I was on Vic Hudson's new <em>App Story</em> podcast. It was a lot of fun!<br> <br />\n<em>App Story</em> is where Vic interviews indie developers about their apps and how they came to be. A must subscribe! <br />\n<br><br> <br />\n<a href=\"http://www.appstorypodcast.com/apps/simbol\">Episode 2: Simbol</a><br> <br />\niTunes: <a href=\"https://itunes.apple.com/us/podcast/app-story/id824837654?mt=2&amp;at=11ltML&amp;ct=ASPFeed\">App Story</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1394972891000,"created_by":1,"updated_at":1394972891000,"updated_by":1,"published_at":1394972891000,"published_by":1},{"id":86,"uuid":"9503bc30-1dc9-473f-9455-609799e521d9","title":"How do people buy phones?","slug":"how-do-people-buy-phones","markdown":"HTC might have revealed another <em>great</em> phone this week. Build quality looks incredible, specs excellent, and OS clean.\n\nJoanna Stern <a href=\"http://online.wsj.com/news/articles/SB10001424052702304256404579453731910023274?mg=reno64-wsj\">quips</a>:\n\n<blockquote>\n  Will anyone care?\n</blockquote>\n\nFrankly, they won't! They didn't last year. So, we know now, specs don't matter. Build quality doesn't matter. Even the OS is immaterial given that most other non-Apple phones all run Android. It begs the question, how do people even buy phones anymore? What is the inspiration behind their choice?\n\nAds? Brand? Random pick?\n\nI am losing interest now.\n","html":"<p>HTC might have revealed another <em>great</em> phone this week. Build quality looks incredible, specs excellent, and OS clean.</p>\n\n<p>Joanna Stern <a href=\"http://online.wsj.com/news/articles/SB10001424052702304256404579453731910023274?mg=reno64-wsj\">quips</a>:</p>\n\n<blockquote>  \n  Will anyone care?\n</blockquote>\n\n<p>Frankly, they won't! They didn't last year. So, we know now, specs don't matter. Build quality doesn't matter. Even the OS is immaterial given that most other non-Apple phones all run Android. It begs the question, how do people even buy phones anymore? What is the inspiration behind their choice?</p>\n\n<p>Ads? Brand? Random pick?</p>\n\n<p>I am losing interest now.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1395780355000,"created_by":1,"updated_at":1395780587000,"updated_by":1,"published_at":1395780355000,"published_by":1},{"id":87,"uuid":"f1424b37-614f-4177-9a34-10b9c7eef76f","title":"Oculus Drift","slug":"oculus-drift","markdown":"Facebook went ahead and bought Oculus Rift. This adds a few more billions to their Visa bill for this quarter. No big deal.\n\nWhat I really want to know is what the end game is? Are big companies buying ingenious little startups to lock their place in the future? Seems to me like a state of profound confusion about where things might go. Deep learning? Personal robotics? VR? \"Let's buy a major innovator in every field and let them operate independently. If we ever inch towards a future that inclines towards a particular paradigms, we already have that skunk-works lab in our basement we can start funneling money in.\"\n\nThis is pathetic. Influential companies like Google and Facebook employ some of the smartest people and are in a position to define that future. They can make it, not stalk it with spaghetti to throw at walls which haven't been built yet.","html":"<p>Facebook went ahead and bought Oculus Rift. This adds a few more billions to their Visa bill for this quarter. No big deal.</p>\n\n<p>What I really want to know is what the end game is? Are big companies buying ingenious little startups to lock their place in the future? Seems to me like a state of profound confusion about where things might go. Deep learning? Personal robotics? VR? \"Let's buy a major innovator in every field and let them operate independently. If we ever inch towards a future that inclines towards a particular paradigms, we already have that skunk-works lab in our basement we can start funneling money in.\"</p>\n\n<p>This is pathetic. Influential companies like Google and Facebook employ some of the smartest people and are in a position to define that future. They can make it, not stalk it with spaghetti to throw at walls which haven't been built yet.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1395781324000,"created_by":1,"updated_at":1395781324000,"updated_by":1,"published_at":1395781324000,"published_by":1},{"id":88,"uuid":"9d3ea041-0319-4795-b30d-35d4843a9c56","title":"Material Design, my ¢2","slug":"material-design-my-c2a22","markdown":"<p>Google's design guidelines are very good, not in a light way either. Most designers I spoke to today seem very impressed and by just looking at Google's mockups, it makes me want to make something of that flavor. There are some rough edges but that is to be expected from such a new paradigm. So, does this mean Android is going to be pretty now? Well yes and no.</p>\n\n<p>Stock Android will look a lot better and so will apps from good, thoughtful developers. This still leaves a huge swath of apps behind which will continue to be written in PhoneGap or other horrid tools. It also leaves out carrier apps which are spam-loaded onto every device. There is little hope there.</p>\n\n<p>What would it take to execute this monumental shift in design on Android? For one, better toolchain from Google that affirms first-party tools and reduces (if not eliminates) the need for alternative IDEs. Apple can move mountaints becuse it controls the stack, Google doesn't. This also comes into play when you look at the hardware that Android runs on. Material Design, like iOS 7, emphasizes GPU intensive animations and fluid transitions. While top-of-the-line Android devices ship with ok graphics, there is a massive swath of Android devices which are being launched/sold today that compare with iPhone 4 in hardware specs and that relic from 2010 <em>cannot</em> play animations!</p>\n\n<p>Should iOS designers, developers, users be worried that Android is now good at design? Non-sense. For one, this is a <em>document</em>, a set of guidelines. Execution is everything and Google still has to prove itself on that front. Second, it is generally good for technology that the most used operating system is finally becoming presentable. It will induce a sense of design sensibility in makers and create a demand for higher quality wares in users. That is good for everybody. Honestly, if Android wasn't around, there would be nothing pushing iOS.</p>\n","html":"<p>Google's design guidelines are very good, not in a light way either. Most designers I spoke to today seem very impressed and by just looking at Google's mockups, it makes me want to make something of that flavor. There are some rough edges but that is to be expected from such a new paradigm. So, does this mean Android is going to be pretty now? Well yes and no.</p>\n\n<p>Stock Android will look a lot better and so will apps from good, thoughtful developers. This still leaves a huge swath of apps behind which will continue to be written in PhoneGap or other horrid tools. It also leaves out carrier apps which are spam-loaded onto every device. There is little hope there.</p>\n\n<p>What would it take to execute this monumental shift in design on Android? For one, better toolchain from Google that affirms first-party tools and reduces (if not eliminates) the need for alternative IDEs. Apple can move mountaints becuse it controls the stack, Google doesn't. This also comes into play when you look at the hardware that Android runs on. Material Design, like iOS 7, emphasizes GPU intensive animations and fluid transitions. While top-of-the-line Android devices ship with ok graphics, there is a massive swath of Android devices which are being launched/sold today that compare with iPhone 4 in hardware specs and that relic from 2010 <em>cannot</em> play animations!</p>\n\n<p>Should iOS designers, developers, users be worried that Android is now good at design? Non-sense. For one, this is a <em>document</em>, a set of guidelines. Execution is everything and Google still has to prove itself on that front. Second, it is generally good for technology that the most used operating system is finally becoming presentable. It will induce a sense of design sensibility in makers and create a demand for higher quality wares in users. That is good for everybody. Honestly, if Android wasn't around, there would be nothing pushing iOS.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1403826875000,"created_by":1,"updated_at":1403828904000,"updated_by":1,"published_at":1403826875000,"published_by":1},{"id":89,"uuid":"444e0801-47ca-4ef4-a987-9b051bb8c2a5","title":"Typos","slug":"typos","markdown":"<p>I have always wondered why I am not so efficeint at reading materials on \"the web\" relative to my skill level in comprehending print or textbooks (digital or otherwise). I think I have a very substantiated hypothesis at this point: typos<sup id=\"fnref-786:fn-1\"><a href=\"#fn-786:fn-1\" rel=\"footnote\">1</a></sup>. I cannot pretend to be very thorough with things I write, far from it. However, typos have a measurable and disturbing effect on my comprehension while reading a piece of text.</p>\n\n<p>For instance, while reading this:</p>\n\n<blockquote>\n  <p>You’ve already been stuck with this problem for the last 7 hours! You finally you give up and get back to your desk few hours later (after some sleep or a walk with your dog). Voi a la! You found the problem by doing nothing. Actually your mind found the problem!</p>\n</blockquote>\n\n<p><em>You finally you give up...</em> gave me an instant pause and I had to go back and reread the sentence before it. While doing that, I slightly lost the gist of what I was thinking from the last few  paragraphs. While the brain has great discernment when it comes to identifying words spelled wrong, mine gets startled at grammatical mistakes. I immediately loose my train of thought.</p>\n\n<p>This happens all to often, more so now than before. Up until 2010, most of what I read was either textbooks or newspapers (yes!). They are very thoroughly edited and seldom carry glaring errors of this kind. On the other hand, writing on the web is very sporadic and it shows. I love how open the web is and how anyone with something valuable to say (or not!) can do so, without a lot of hassle. However, apparently my brain still expects rigor and freaks out, ever so little, every single time it encounters an anomaly.</p>\n\n<p>I hate it when that happens.</p>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n\n<li id=\"fn-786:fn-1\">\n<p>Typos, here, mean spelling and grammatical errors.&#160;<a href=\"#fnref-786:fn-1\" rev=\"footnote\">&#8617;</a></p>\n</li>\n\n</ol>\n</div>\n","html":"<p>I have always wondered why I am not so efficeint at reading materials on \"the web\" relative to my skill level in comprehending print or textbooks (digital or otherwise). I think I have a very substantiated hypothesis at this point: typos<sup id=\"fnref-786:fn-1\"><a href=\"#fn-786:fn-1\" rel=\"footnote\">1</a></sup>. I cannot pretend to be very thorough with things I write, far from it. However, typos have a measurable and disturbing effect on my comprehension while reading a piece of text.</p>\n\n<p>For instance, while reading this:</p>\n\n<blockquote>  \n  <p>You’ve already been stuck with this problem for the last 7 hours! You finally you give up and get back to your desk few hours later (after some sleep or a walk with your dog). Voi a la! You found the problem by doing nothing. Actually your mind found the problem!</p>\n</blockquote>\n\n<p><em>You finally you give up...</em> gave me an instant pause and I had to go back and reread the sentence before it. While doing that, I slightly lost the gist of what I was thinking from the last few  paragraphs. While the brain has great discernment when it comes to identifying words spelled wrong, mine gets startled at grammatical mistakes. I immediately loose my train of thought.</p>\n\n<p>This happens all to often, more so now than before. Up until 2010, most of what I read was either textbooks or newspapers (yes!). They are very thoroughly edited and seldom carry glaring errors of this kind. On the other hand, writing on the web is very sporadic and it shows. I love how open the web is and how anyone with something valuable to say (or not!) can do so, without a lot of hassle. However, apparently my brain still expects rigor and freaks out, ever so little, every single time it encounters an anomaly.</p>\n\n<p>I hate it when that happens.</p>\n\n<div class=\"footnotes\">  \n<hr />  \n<ol>\n\n<li id=\"fn-786:fn-1\">  \n<p>Typos, here, mean spelling and grammatical errors.&#160;<a href=\"#fnref-786:fn-1\" rev=\"footnote\">&#8617;</a></p>  \n</li>\n\n</ol>  \n</div>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1408240799000,"created_by":1,"updated_at":1408240799000,"updated_by":1,"published_at":1408240799000,"published_by":1},{"id":90,"uuid":"12ba9f2a-286b-4755-94d7-27cbaa748161","title":"OMG Markdown","slug":"omg-markdown","markdown":"![](http://www.arcticencounters.net/perch/resources/writing-writing-31275199-1500-1004.jpg)\n<p>Again, twitter erupted into its own little controversy. This time, <a href=\"https://twitter.com/codinghorror\">@codinghorror</a> got together with a bunch of smart fellas and tried to <a href=\"http://standardmarkdown.com\">tame Markdown</a>. This has sparked a lot of flame throwing with arguments ranging from hijacking what is, supposedly, John Gruber's project to claiming that someone on the internet is a dick (you guessed that one!).</p>\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p>Whether Gruber filed a trademark with the USPTO or not has no relevance on whether it’s a dick move to commandeer the name.</p>&mdash; Marco Arment (@marcoarment) <a href=\"https://twitter.com/marcoarment/status/507547724968128512\">September 4, 2014</a></blockquote>\n\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<p>I sympathize that Markdown is something Gruber conceived and it has been a hell of a contribution to the community. I cannot think of writing today any other way. In fact, Markdown's percolation has been astounding. It has been adopted as the de-facto input format across Github, StackOverflow, etc. and has a wonderful app ecosystem around it. However, it is a mistake to think that this happened <em>because</em> MD is so loosely defined.</p>\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p><a href=\"https://twitter.com/Gernot\">@Gernot</a> And Markdown and RSS are both incredibly successful and popular.</p>&mdash; John Gruber (@gruber) <a href=\"https://twitter.com/gruber/status/507559105977147392\">September 4, 2014</a></blockquote>\n\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<p>I believe, MD has proliferated this far, not <em>because</em> it is an ambiguous, open to interpretation spec but <em>in-spite</em> of that. Just look at RSS or CSV. Every RSS-reader developer has some very quality things (NOT) to say about the standard. It's a loose cannon and a pain in the butt to deal with. CSV? The simple, nice \"standard\"? Just <a href=\"http://tburette.github.io/blog/2014/05/25/so-you-want-to-write-your-own-CSV-code/\">try writing a parser for it</a>!</p>\n\n<blockquote>\n  <p>Writing CSV code that works with files out there in the real world is a difficult task. The rabbit hole goes deep. Ruby CSV library is 2321 lines.</p>\n</blockquote>\n\n<p>Markdown is getting there.</p>\n\n<p>There are a lot of MD flavors. This is good. Most of these flavors implement core features differently. This is bad. As Markdown attains more and more popularity, the situation is just going to get worse. Remember the days when IE could not be bothered to care about standards compliant CSS implementations? This makes it hard for developers of services to roll out a simple MD parser to suit their needs. Instead, they need to go hunting for edge cases and account for all the different ways people can write the syntax. Makes it even more difficult to write apps which talk to each other. So, I do not concur with the argument that Markdown can succeed thru neglect. Proof? What people actually write in apps is some strict superset of MD which is defined by the developer. MD, as is used in practice, is not loose, not unsupervised. Problem is, there are too many cooks!</p>\n\n<p>What I like about this effort to cast MD into a standard is that it will remove ambiguity from core features. This does not, in any way, strip anyone's ability to extend MD. Implement the standard core and then expand on it to better suit your and your users' needs. Most of the time, you won't need to.</p>\n\n<p>Back to the issue of name!</p>\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p>If you didn’t like how I ran Overcast and started your own “Standard Overcast” project, you’d be hearing from my trademark lawyer.</p>&mdash; Marco Arment (@marcoarment) <a href=\"https://twitter.com/marcoarment/status/507531412594233344\">September 4, 2014</a></blockquote>\n\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<p>This is not a cogent argument. Overcast, for one, is not open source. It does not lend itself to forking. Markdown, on the other hand, is. However, <em>Standard Markdown</em> does violate <a href=\"http://daringfireball.net/projects/markdown/license\">MD's BSD license</a>:</p>\n\n<blockquote>\n  <p>Neither the name “Markdown” nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</p>\n</blockquote>\n\n<p>So does <a href=\"http://fletcherpenney.net/multimarkdown/\">MultiMarkdown</a>. So does <a href=\"https://help.github.com/articles/github-flavored-markdown\">Github Flavored Markdown</a>.\nThese are the two most popular implementations of MD and they use the word \"Markdown\" without reservation. Why the backlash now? Because, as opposed to those two, this one supposedly takes control away from John Gruber.</p>\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p>If you hate that so much that you need to make it a “standard” that YOU control, call it something new that doesn’t include “Markdown”.</p>&mdash; Marco Arment (@marcoarment) <a href=\"https://twitter.com/marcoarment/status/507528536291561472\">September 4, 2014</a></blockquote>\n\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<p>Control that he never exercised. \"Markdown\" has not changed in the slightest since Dec 2004. Any other spec out there that is as widely used and as stagnant? Do we have the audacity to claim that v1.0.1 was perfect in every way imaginable? Then why do we have so many extensions, forks, and flavors<sup id=\"fnref-789:fn-1\"><a href=\"#fn-789:fn-1\" rel=\"footnote\">1</a></sup>?</p>\n\n<p><a href=\"http://daringfireball.net/projects/markdown/\">John Gruber</a>:</p>\n\n<blockquote>\n  <p>I’ve set up a public mailing list for discussion about Markdown. Any topic related to Markdown — both its formatting syntax and its software — is fair game for discussion. Anyone who is interested is welcome to join.</p>\n  \n  <p>It’s my hope that the mailing list will lead to good ideas for future improvements to Markdown.</p>\n</blockquote>\n\n<p>On the other end, on the <a href=\"http://5by5.tv/systematic/50\">Systematic episode from June 25th 2013</a>, at 37:40 mark, Gruber attests:</p>\n\n<blockquote>\n  <p>I used to participate on that mailing list, but I don't anymore. Cuz I kinda feel like it's (MD is) is effectively done.</p>\n</blockquote>\n\n<p>You should listen to it from that point on. Doesn't take a lot to realize that MD needs some sort of stewardship and Gruber, respectfully, doesn't feel the need to. However, I do not condone violating his license and if name is the point of contention, change away. Call it whatever. At this point, it's becoming pedantic.</p>\n\n<p>However, objections to the idea of standardization are ill-informed and superstitious. It's a failure to understand what made MD a success. It's the fear that Gruber alludes to in that Systematic episode at around 38:00:</p>\n\n<blockquote>\n  <p>What's his name, Jeff Atwood, coding horror guy, every two years writes down something about how terrible I am at leading Markdown. [...]\n  In the mean time, Markdown pages on Daring Fireball get twice the page views they ever got before. And there are more and more systems everyday that come out with Markdown. <strong>And part of that is because actually I don't screw it up</strong>.\n  (emphasis mine)</p>\n</blockquote>\n\n<p>Fear of screwing up something that you do not know the cause of success of is not a healthy way to go about doing anything!</p>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n\n<li id=\"fn-789:fn-1\">\n<p>Again, I am not against extensions. They serve a purpose. They make MD versatile enough for widespread use. But the existence of one particular <em>flavor</em>, MultiMarkdown, MMD, and its popularity speaks to the need for an actively revised spec that conforms to how people are using MD.&#160;<a href=\"#fnref-789:fn-1\" rev=\"footnote\">&#8617;</a></p>\n</li>\n\n</ol>\n</div>\n","html":"<p><img src=\"http://www.arcticencounters.net/perch/resources/writing-writing-31275199-1500-1004.jpg\" alt=\"\" /></p>\n\n<p>Again, twitter erupted into its own little controversy. This time, <a href=\"https://twitter.com/codinghorror\">@codinghorror</a> got together with a bunch of smart fellas and tried to <a href=\"http://standardmarkdown.com\">tame Markdown</a>. This has sparked a lot of flame throwing with arguments ranging from hijacking what is, supposedly, John Gruber's project to claiming that someone on the internet is a dick (you guessed that one!).</p>\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p>Whether Gruber filed a trademark with the USPTO or not has no relevance on whether it’s a dick move to commandeer the name.</p>&mdash; Marco Arment (@marcoarment) <a href=\"https://twitter.com/marcoarment/status/507547724968128512\">September 4, 2014</a></blockquote>\n\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<p>I sympathize that Markdown is something Gruber conceived and it has been a hell of a contribution to the community. I cannot think of writing today any other way. In fact, Markdown's percolation has been astounding. It has been adopted as the de-facto input format across Github, StackOverflow, etc. and has a wonderful app ecosystem around it. However, it is a mistake to think that this happened <em>because</em> MD is so loosely defined.</p>\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p><a href=\"https://twitter.com/Gernot\">@Gernot</a> And Markdown and RSS are both incredibly successful and popular.</p>&mdash; John Gruber (@gruber) <a href=\"https://twitter.com/gruber/status/507559105977147392\">September 4, 2014</a></blockquote>\n\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<p>I believe, MD has proliferated this far, not <em>because</em> it is an ambiguous, open to interpretation spec but <em>in-spite</em> of that. Just look at RSS or CSV. Every RSS-reader developer has some very quality things (NOT) to say about the standard. It's a loose cannon and a pain in the butt to deal with. CSV? The simple, nice \"standard\"? Just <a href=\"http://tburette.github.io/blog/2014/05/25/so-you-want-to-write-your-own-CSV-code/\">try writing a parser for it</a>!</p>\n\n<blockquote>  \n  <p>Writing CSV code that works with files out there in the real world is a difficult task. The rabbit hole goes deep. Ruby CSV library is 2321 lines.</p>\n</blockquote>\n\n<p>Markdown is getting there.</p>\n\n<p>There are a lot of MD flavors. This is good. Most of these flavors implement core features differently. This is bad. As Markdown attains more and more popularity, the situation is just going to get worse. Remember the days when IE could not be bothered to care about standards compliant CSS implementations? This makes it hard for developers of services to roll out a simple MD parser to suit their needs. Instead, they need to go hunting for edge cases and account for all the different ways people can write the syntax. Makes it even more difficult to write apps which talk to each other. So, I do not concur with the argument that Markdown can succeed thru neglect. Proof? What people actually write in apps is some strict superset of MD which is defined by the developer. MD, as is used in practice, is not loose, not unsupervised. Problem is, there are too many cooks!</p>\n\n<p>What I like about this effort to cast MD into a standard is that it will remove ambiguity from core features. This does not, in any way, strip anyone's ability to extend MD. Implement the standard core and then expand on it to better suit your and your users' needs. Most of the time, you won't need to.</p>\n\n<p>Back to the issue of name!</p>\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p>If you didn’t like how I ran Overcast and started your own “Standard Overcast” project, you’d be hearing from my trademark lawyer.</p>&mdash; Marco Arment (@marcoarment) <a href=\"https://twitter.com/marcoarment/status/507531412594233344\">September 4, 2014</a></blockquote>\n\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<p>This is not a cogent argument. Overcast, for one, is not open source. It does not lend itself to forking. Markdown, on the other hand, is. However, <em>Standard Markdown</em> does violate <a href=\"http://daringfireball.net/projects/markdown/license\">MD's BSD license</a>:</p>\n\n<blockquote>  \n  <p>Neither the name “Markdown” nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</p>\n</blockquote>\n\n<p>So does <a href=\"http://fletcherpenney.net/multimarkdown/\">MultiMarkdown</a>. So does <a href=\"https://help.github.com/articles/github-flavored-markdown\">Github Flavored Markdown</a>.  \nThese are the two most popular implementations of MD and they use the word \"Markdown\" without reservation. Why the backlash now? Because, as opposed to those two, this one supposedly takes control away from John Gruber.</p>\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p>If you hate that so much that you need to make it a “standard” that YOU control, call it something new that doesn’t include “Markdown”.</p>&mdash; Marco Arment (@marcoarment) <a href=\"https://twitter.com/marcoarment/status/507528536291561472\">September 4, 2014</a></blockquote>\n\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<p>Control that he never exercised. \"Markdown\" has not changed in the slightest since Dec 2004. Any other spec out there that is as widely used and as stagnant? Do we have the audacity to claim that v1.0.1 was perfect in every way imaginable? Then why do we have so many extensions, forks, and flavors<sup id=\"fnref-789:fn-1\"><a href=\"#fn-789:fn-1\" rel=\"footnote\">1</a></sup>?</p>\n\n<p><a href=\"http://daringfireball.net/projects/markdown/\">John Gruber</a>:</p>\n\n<blockquote>  \n  <p>I’ve set up a public mailing list for discussion about Markdown. Any topic related to Markdown — both its formatting syntax and its software — is fair game for discussion. Anyone who is interested is welcome to join.</p>\n\n  <p>It’s my hope that the mailing list will lead to good ideas for future improvements to Markdown.</p>\n</blockquote>\n\n<p>On the other end, on the <a href=\"http://5by5.tv/systematic/50\">Systematic episode from June 25th 2013</a>, at 37:40 mark, Gruber attests:</p>\n\n<blockquote>  \n  <p>I used to participate on that mailing list, but I don't anymore. Cuz I kinda feel like it's (MD is) is effectively done.</p>\n</blockquote>\n\n<p>You should listen to it from that point on. Doesn't take a lot to realize that MD needs some sort of stewardship and Gruber, respectfully, doesn't feel the need to. However, I do not condone violating his license and if name is the point of contention, change away. Call it whatever. At this point, it's becoming pedantic.</p>\n\n<p>However, objections to the idea of standardization are ill-informed and superstitious. It's a failure to understand what made MD a success. It's the fear that Gruber alludes to in that Systematic episode at around 38:00:</p>\n\n<blockquote>  \n  <p>What's his name, Jeff Atwood, coding horror guy, every two years writes down something about how terrible I am at leading Markdown. [...]\n  In the mean time, Markdown pages on Daring Fireball get twice the page views they ever got before. And there are more and more systems everyday that come out with Markdown. <strong>And part of that is because actually I don't screw it up</strong>.\n  (emphasis mine)</p>\n</blockquote>\n\n<p>Fear of screwing up something that you do not know the cause of success of is not a healthy way to go about doing anything!</p>\n\n<div class=\"footnotes\">  \n<hr />  \n<ol>\n\n<li id=\"fn-789:fn-1\">  \n<p>Again, I am not against extensions. They serve a purpose. They make MD versatile enough for widespread use. But the existence of one particular <em>flavor</em>, MultiMarkdown, MMD, and its popularity speaks to the need for an actively revised spec that conforms to how people are using MD.&#160;<a href=\"#fnref-789:fn-1\" rev=\"footnote\">&#8617;</a></p>  \n</li>\n\n</ol>  \n</div>","image":"/content/images/2014/10/writing-writing-31275199-1500-1004.jpg","featured":1,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1409834573000,"created_by":1,"updated_at":1412576319289,"updated_by":1,"published_at":1409834573000,"published_by":1},{"id":92,"uuid":"ad57e670-2a44-4ab7-892d-df43c33fbe00","title":"OTA","slug":"ota","markdown":"So, there's this problem on the Internet and its being caused by a seeming lack of foresight. What a shock! I am referring to iOS 8's (not so) mysterious stall in upgrade pace. The prime suspect is a lack of free space on the target devices. iOS 8 asks for 5GB of free space on the disk for update. That's a near impossible ask for devices with only 16GB of onboard storage. After the OS taking up about 4 and people using the device for a year taking photos and installing apps, not much is really left. I personally know people who constantly tap \"OK\" on low space warning on their device. It's unacceptable that Apple still sells these! Anyway, let's talk about *why* iOS 8 needs 5BG of free space.\n\nSpoiler: No it's not a senseless threshold set by morons.\n\n### Here's how the update process works\n\n1. When you hit update, the OS downloads a heavily compressed binary from Apple's servers. \n2. This binary needs to be uncompressed while the compressed one is still on the disk. This is where your phone is \"Preparing for update\". So, you need enough space to store both! The uncompressed image is probably deleted once decompression is finished and data is verified for consistency.\n3. At this point, your device reboots and you see the progress bar. Now, the real task of updating the OS starts. The downloaded update is a delta update. What this means is that it only consists of files which were changed over the previous version. For point releases its a smaller number of files; for whole number releases, it's a **lot** of files. A lot of little 2, 3, 10KB files. One might think that if the uncompressed update is, say, 2GB, the update will need just that 2GB free space. Nope! A whole lot more. See, the files aren't committed on the fly. What this means is that if a file, File.m, needs to be changed, it won't be written right onto the disk replacing the older File.m. No. It's actually copied, the copy is modified to be like the new File.m. Then, this is done for *all* the files. So, now you have on disk all the original File.m's, their updated copies, and the downloaded File.m's. So, practically, you are using 2x as much storage as the uncompressed update occupies + the original files' storage hasn't been freed up yet. When all the files are updated and their consistency is verified, the OS deletes the older files, deletes the uncompressed update, updates locations of the new files in the file table to be in the right place and your phone reboots into the updated OS.\n\nSo, why not just write over files on the fly? It'll take, probably, less than half the space. Imagine, what if, while updating, the phone shuts off? The user turns it off? The kernel panics for whatever reason? Now you have an OS with some files which it either does not recognize or which do not work with files from the older version. In short, a bricked phone with no hope to salvage data. The only solution at this point is DFU mode and a clean restore. Imagine if this happened to you! Clearly this not a situation that can be allowed to be an outcome of any scenario. So, the OS waits to commit the files until the very last moment when it can just run a *very* quick sweep across the file table and update records. The risk of bricking the device is confined within those very very quick moments instead of spreading it over a period of 15-20 minutes! That's a great solution.\n\nAlso, why not update it over the air? Meaning, why not download individual files and update them? That's horrible! We are then racing against one of the most finicky parameters in computing.. Network! It goes dark and.. 💩\n\nSo, no, the update space requirements aren't a drunken folly! They're the consequence of thoughtfulness. What's the issue here is giving people 16GB devices in 2014. Apple might solve it by pushing out smaller updates which need to be applied in succession, but then again, many people don't even have space for a single photo on their device! A solution could be recall-style Apple Store updates. iCloud Photo Library is a solution to space problems but only if you can get over the iOS 8 bump. Apple might (somehow) back-port it to iOS 7, explain to users that their photos are going to the cloud to free up space, wait for the upload (a very tall order), and then update the devices OTA. Apple can also ask users to plug into a PC and update using iTunes. We all know how likely people are to do that! In any scenario, the outcome is going to be nasty!\n\nIf anything, this will be the thorn in iOS' rosy garden.","html":"<p>So, there's this problem on the Internet and its being caused by a seeming lack of foresight. What a shock! I am referring to iOS 8's (not so) mysterious stall in upgrade pace. The prime suspect is a lack of free space on the target devices. iOS 8 asks for 5GB of free space on the disk for update. That's a near impossible ask for devices with only 16GB of onboard storage. After the OS taking up about 4 and people using the device for a year taking photos and installing apps, not much is really left. I personally know people who constantly tap \"OK\" on low space warning on their device. It's unacceptable that Apple still sells these! Anyway, let's talk about <em>why</em> iOS 8 needs 5BG of free space.</p>\n\n<p>Spoiler: No it's not a senseless threshold set by morons.</p>\n\n<h3 id=\"hereshowtheupdateprocessworks\">Here's how the update process works</h3>\n\n<ol>\n<li>When you hit update, the OS downloads a heavily compressed binary from Apple's servers.  </li>\n<li>This binary needs to be uncompressed while the compressed one is still on the disk. This is where your phone is \"Preparing for update\". So, you need enough space to store both! The uncompressed image is probably deleted once decompression is finished and data is verified for consistency.  </li>\n<li>At this point, your device reboots and you see the progress bar. Now, the real task of updating the OS starts. The downloaded update is a delta update. What this means is that it only consists of files which were changed over the previous version. For point releases its a smaller number of files; for whole number releases, it's a <strong>lot</strong> of files. A lot of little 2, 3, 10KB files. One might think that if the uncompressed update is, say, 2GB, the update will need just that 2GB free space. Nope! A whole lot more. See, the files aren't committed on the fly. What this means is that if a file, File.m, needs to be changed, it won't be written right onto the disk replacing the older File.m. No. It's actually copied, the copy is modified to be like the new File.m. Then, this is done for <em>all</em> the files. So, now you have on disk all the original File.m's, their updated copies, and the downloaded File.m's. So, practically, you are using 2x as much storage as the uncompressed update occupies + the original files' storage hasn't been freed up yet. When all the files are updated and their consistency is verified, the OS deletes the older files, deletes the uncompressed update, updates locations of the new files in the file table to be in the right place and your phone reboots into the updated OS.</li>\n</ol>\n\n<p>So, why not just write over files on the fly? It'll take, probably, less than half the space. Imagine, what if, while updating, the phone shuts off? The user turns it off? The kernel panics for whatever reason? Now you have an OS with some files which it either does not recognize or which do not work with files from the older version. In short, a bricked phone with no hope to salvage data. The only solution at this point is DFU mode and a clean restore. Imagine if this happened to you! Clearly this not a situation that can be allowed to be an outcome of any scenario. So, the OS waits to commit the files until the very last moment when it can just run a <em>very</em> quick sweep across the file table and update records. The risk of bricking the device is confined within those very very quick moments instead of spreading it over a period of 15-20 minutes! That's a great solution.</p>\n\n<p>Also, why not update it over the air? Meaning, why not download individual files and update them? That's horrible! We are then racing against one of the most finicky parameters in computing.. Network! It goes dark and.. 💩</p>\n\n<p>So, no, the update space requirements aren't a drunken folly! They're the consequence of thoughtfulness. What's the issue here is giving people 16GB devices in 2014. Apple might solve it by pushing out smaller updates which need to be applied in succession, but then again, many people don't even have space for a single photo on their device! A solution could be recall-style Apple Store updates. iCloud Photo Library is a solution to space problems but only if you can get over the iOS 8 bump. Apple might (somehow) back-port it to iOS 7, explain to users that their photos are going to the cloud to free up space, wait for the upload (a very tall order), and then update the devices OTA. Apple can also ask users to plug into a PC and update using iTunes. We all know how likely people are to do that! In any scenario, the outcome is going to be nasty!</p>\n\n<p>If anything, this will be the thorn in iOS' rosy garden.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1412813551566,"created_by":1,"updated_at":1412817482720,"updated_by":1,"published_at":1412813551569,"published_by":1},{"id":93,"uuid":"6df68430-65a1-4f48-8a6a-8aa6bed1b045","title":"Longevity of Apps","slug":"longevity-of-apps","markdown":"> Going with indie software can be safer than the alternatives.\n\nBrent Simmons [makes a point](http://inessential.com/2014/10/10/the_risk_of_products_failing) about indie apps and developers which can be true in some cases. However, my experience has been not that black and white. Individual developers and small shops have the advantage of working on things which bigger companies couldn't ever justify and this brings immense value to any ecosystem. However, only a few sustain their apps. Most (rightly) move on to other things if the app isn't a run-away success (most aren't!) while it's possible that it still has a core group of users who swear by it. Unread is an example, amongst many. Only today, the news of Glassboard being shut down broke. Now, Glassboard was something that was used by some of the most influential people in the industry. It didn't make business sense and it's going away.\n\nThe point I am trying to make is that indie apps and projects aren't any *safer* or less vulnerable than software from bigger enterprises. If anything, bigger development houses have the resources to see a project thru periods of slump and explore alternative strategies before stuttering anything. However, be it an app from Apple or John Appleseed, at the end, what goes up must come down.","html":"<blockquote>\n  <p>Going with indie software can be safer than the alternatives.</p>\n</blockquote>\n\n<p>Brent Simmons <a href=\"http://inessential.com/2014/10/10/the_risk_of_products_failing\">makes a point</a> about indie apps and developers which can be true in some cases. However, my experience has been not that black and white. Individual developers and small shops have the advantage of working on things which bigger companies couldn't ever justify and this brings immense value to any ecosystem. However, only a few sustain their apps. Most (rightly) move on to other things if the app isn't a run-away success (most aren't!) while it's possible that it still has a core group of users who swear by it. Unread is an example, amongst many. Only today, the news of Glassboard being shut down broke. Now, Glassboard was something that was used by some of the most influential people in the industry. It didn't make business sense and it's going away.</p>\n\n<p>The point I am trying to make is that indie apps and projects aren't any <em>safer</em> or less vulnerable than software from bigger enterprises. If anything, bigger development houses have the resources to see a project thru periods of slump and explore alternative strategies before stuttering anything. However, be it an app from Apple or John Appleseed, at the end, what goes up must come down.</p>","image":"","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1412991084372,"created_by":1,"updated_at":1413305562609,"updated_by":1,"published_at":1412991084388,"published_by":1},{"id":94,"uuid":"4b1bce5e-318c-4182-891f-555bf6bb55c6","title":"Remote Work","slug":"remote-work","markdown":"> In a region that prides itself on disruption and working from first principles, San Francisco’s scaling problem is pretty humorous if you look at it from the outside: otherwise smart and inventive founders continue to set up offices and try to hire or move people in the most overheated environment since there were carphones in Cadillac Allantes. This is where I feel like Paul Graham misses the most obvious solution to the problem. [∞](http://ma.tt/2014/12/how-paul-graham-is-wrong/)\n\nWell, yes. Cities have faced scaling issues since the dawn of time. It's also true that solutions like Slack and Google Hangouts make this time unlike others in the past. However, there is something to be said about in-person collaboration and workspaces which spur spontaneous inetractions. Working as a part of a great remote team, I can attest that there is simply nothing that stands in the way of a distributed functional office environment today, however, the pinch of just sitting in a room with someone and whiteboarding is a lacuna.\n\nThis is even more evident when looking beyond software teams. Hardware engineering is still nearly impossible to accomplish online alone. So are diciplines which require physical spaces like a lab. Until we have holodecks, this will be the case.\n\nSo, yes, while distibuted teams are a possibility and even a great solution at times, they do not address the problems caused by the current immigration policies.","html":"<blockquote>\n  <p>In a region that prides itself on disruption and working from first principles, San Francisco’s scaling problem is pretty humorous if you look at it from the outside: otherwise smart and inventive founders continue to set up offices and try to hire or move people in the most overheated environment since there were carphones in Cadillac Allantes. This is where I feel like Paul Graham misses the most obvious solution to the problem. <a href=\"http://ma.tt/2014/12/how-paul-graham-is-wrong/\">∞</a></p>\n</blockquote>\n\n<p>Well, yes. Cities have faced scaling issues since the dawn of time. It's also true that solutions like Slack and Google Hangouts make this time unlike others in the past. However, there is something to be said about in-person collaboration and workspaces which spur spontaneous inetractions. Working as a part of a great remote team, I can attest that there is simply nothing that stands in the way of a distributed functional office environment today, however, the pinch of just sitting in a room with someone and whiteboarding is a lacuna.</p>\n\n<p>This is even more evident when looking beyond software teams. Hardware engineering is still nearly impossible to accomplish online alone. So are diciplines which require physical spaces like a lab. Until we have holodecks, this will be the case.</p>\n\n<p>So, yes, while distibuted teams are a possibility and even a great solution at times, they do not address the problems caused by the current immigration policies.</p>","image":null,"featured":1,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1419918052091,"created_by":1,"updated_at":1419918605543,"updated_by":1,"published_at":1419918561994,"published_by":1}],"users":[{"id":1,"uuid":"dc1258a7-869a-4229-82e3-8ba230038db6","name":"Amit Jain","slug":"amit-jain","password":"$2a$10$Tmv8ml1UVYaC2euWK/pCf.4JOF1NXrLBfUAYkyeawIuhtkJezGbk2","email":"gravicle@gmail.com","image":"/content/images/2014/10/IMG_0427-1.JPG","cover":null,"bio":"iOS Engineer. Physics Geek.","website":"http://amitjain.me","location":"Kansas City","accessibility":null,"status":"active","language":"en_US","meta_title":null,"meta_description":null,"last_login":1420326957605,"created_at":1412556154751,"created_by":1,"updated_at":1420326957608,"updated_by":1}],"roles":[{"id":1,"uuid":"40f08b22-5d1d-4650-80ee-b4fd829eac00","name":"Administrator","description":"Administrators","created_at":1412556153449,"created_by":1,"updated_at":1412556153449,"updated_by":1},{"id":2,"uuid":"2899e8cc-91bc-4d79-8b03-d7ac2f88ed9a","name":"Editor","description":"Editors","created_at":1412556153450,"created_by":1,"updated_at":1412556153450,"updated_by":1},{"id":3,"uuid":"536766a7-4c77-4c0f-ae76-506ea9f95499","name":"Author","description":"Authors","created_at":1412556153450,"created_by":1,"updated_at":1412556153450,"updated_by":1},{"id":4,"uuid":"8071e01f-5cff-46f8-8836-c93c9396bab4","name":"Owner","description":"Blog Owner","created_at":1412556153452,"created_by":1,"updated_at":1412556153452,"updated_by":1}],"roles_users":[{"id":1,"role_id":4,"user_id":1}],"permissions":[{"id":1,"uuid":"dc484a4c-9ff7-463c-87eb-d207416745f0","name":"Export database","object_type":"db","action_type":"exportContent","object_id":null,"created_at":1412556153570,"created_by":1,"updated_at":1412556153570,"updated_by":1},{"id":2,"uuid":"261f5a54-5e37-4c8d-88a4-703481bc9a46","name":"Import database","object_type":"db","action_type":"importContent","object_id":null,"created_at":1412556153581,"created_by":1,"updated_at":1412556153581,"updated_by":1},{"id":3,"uuid":"455b2a44-74bb-4d1b-af9b-5232c948952c","name":"Delete all content","object_type":"db","action_type":"deleteAllContent","object_id":null,"created_at":1412556153590,"created_by":1,"updated_at":1412556153590,"updated_by":1},{"id":4,"uuid":"14c25580-38dd-48bd-ac19-a6d215797bf8","name":"Send mail","object_type":"mail","action_type":"send","object_id":null,"created_at":1412556153596,"created_by":1,"updated_at":1412556153596,"updated_by":1},{"id":5,"uuid":"e596cf10-8b73-47a1-9d33-d72d425c3d7e","name":"Browse notifications","object_type":"notification","action_type":"browse","object_id":null,"created_at":1412556153608,"created_by":1,"updated_at":1412556153608,"updated_by":1},{"id":6,"uuid":"1c48a513-11de-47e5-ad59-dd505e7e6cd5","name":"Add notifications","object_type":"notification","action_type":"add","object_id":null,"created_at":1412556153612,"created_by":1,"updated_at":1412556153612,"updated_by":1},{"id":7,"uuid":"a288a379-f71f-4bc2-b5a1-f49472b54d58","name":"Delete notifications","object_type":"notification","action_type":"destroy","object_id":null,"created_at":1412556153622,"created_by":1,"updated_at":1412556153622,"updated_by":1},{"id":8,"uuid":"ab068a7c-d5dd-47b9-850d-b124b54a048d","name":"Browse posts","object_type":"post","action_type":"browse","object_id":null,"created_at":1412556153626,"created_by":1,"updated_at":1412556153626,"updated_by":1},{"id":9,"uuid":"fef55dde-00bf-403c-b64f-2c68bfb5645e","name":"Read posts","object_type":"post","action_type":"read","object_id":null,"created_at":1412556153636,"created_by":1,"updated_at":1412556153636,"updated_by":1},{"id":10,"uuid":"57976d95-a44a-42a9-9986-b83ba6200801","name":"Edit posts","object_type":"post","action_type":"edit","object_id":null,"created_at":1412556153640,"created_by":1,"updated_at":1412556153640,"updated_by":1},{"id":11,"uuid":"47e1df5d-e82f-4e8e-8cd5-5cd496c73058","name":"Add posts","object_type":"post","action_type":"add","object_id":null,"created_at":1412556153645,"created_by":1,"updated_at":1412556153645,"updated_by":1},{"id":12,"uuid":"6a8e4367-e8ad-46b2-aff0-6fc207a90172","name":"Delete posts","object_type":"post","action_type":"destroy","object_id":null,"created_at":1412556153653,"created_by":1,"updated_at":1412556153653,"updated_by":1},{"id":13,"uuid":"fc16bf61-3738-45cb-a9c7-01d1ab37d5d0","name":"Browse settings","object_type":"setting","action_type":"browse","object_id":null,"created_at":1412556153660,"created_by":1,"updated_at":1412556153660,"updated_by":1},{"id":14,"uuid":"8ffb651b-1379-4b45-8d9b-3424a6c68930","name":"Read settings","object_type":"setting","action_type":"read","object_id":null,"created_at":1412556153667,"created_by":1,"updated_at":1412556153667,"updated_by":1},{"id":15,"uuid":"a93fe60a-f95d-483d-9092-c9c2248f6ede","name":"Edit settings","object_type":"setting","action_type":"edit","object_id":null,"created_at":1412556153672,"created_by":1,"updated_at":1412556153672,"updated_by":1},{"id":16,"uuid":"678da7bd-a2a7-4403-82da-651f93062051","name":"Generate slugs","object_type":"slug","action_type":"generate","object_id":null,"created_at":1412556153682,"created_by":1,"updated_at":1412556153682,"updated_by":1},{"id":17,"uuid":"29aff183-0f8d-4e13-b29c-3ed117427795","name":"Browse tags","object_type":"tag","action_type":"browse","object_id":null,"created_at":1412556153689,"created_by":1,"updated_at":1412556153689,"updated_by":1},{"id":18,"uuid":"1226d5bf-9869-4b78-92cb-98866970a06b","name":"Read tags","object_type":"tag","action_type":"read","object_id":null,"created_at":1412556153696,"created_by":1,"updated_at":1412556153696,"updated_by":1},{"id":19,"uuid":"585162ab-7808-4478-b2b6-26b3a8bd840c","name":"Edit tags","object_type":"tag","action_type":"edit","object_id":null,"created_at":1412556153700,"created_by":1,"updated_at":1412556153700,"updated_by":1},{"id":20,"uuid":"47877335-7371-4fc5-80c2-72e95bfd1518","name":"Add tags","object_type":"tag","action_type":"add","object_id":null,"created_at":1412556153704,"created_by":1,"updated_at":1412556153704,"updated_by":1},{"id":21,"uuid":"1a1e4b13-a5ef-4b99-8fdc-532dd25fd0f7","name":"Delete tags","object_type":"tag","action_type":"destroy","object_id":null,"created_at":1412556153712,"created_by":1,"updated_at":1412556153712,"updated_by":1},{"id":22,"uuid":"eb319dc0-5e23-49a5-b1da-63a106c3e2be","name":"Browse themes","object_type":"theme","action_type":"browse","object_id":null,"created_at":1412556153716,"created_by":1,"updated_at":1412556153716,"updated_by":1},{"id":23,"uuid":"08f0e34c-150a-4c78-8b7f-28d028cc6ca6","name":"Edit themes","object_type":"theme","action_type":"edit","object_id":null,"created_at":1412556153719,"created_by":1,"updated_at":1412556153719,"updated_by":1},{"id":24,"uuid":"ba836b0c-13f1-442d-a4b2-c9f3e747383a","name":"Browse users","object_type":"user","action_type":"browse","object_id":null,"created_at":1412556153728,"created_by":1,"updated_at":1412556153728,"updated_by":1},{"id":25,"uuid":"84abd754-09de-4276-8d64-bbfa2b163e4e","name":"Read users","object_type":"user","action_type":"read","object_id":null,"created_at":1412556153732,"created_by":1,"updated_at":1412556153732,"updated_by":1},{"id":26,"uuid":"2089633c-6109-4106-a416-a6fd3666539e","name":"Edit users","object_type":"user","action_type":"edit","object_id":null,"created_at":1412556153736,"created_by":1,"updated_at":1412556153736,"updated_by":1},{"id":27,"uuid":"7638a8bb-af2f-41dd-9093-78e471b0beff","name":"Add users","object_type":"user","action_type":"add","object_id":null,"created_at":1412556153748,"created_by":1,"updated_at":1412556153748,"updated_by":1},{"id":28,"uuid":"eef79864-f663-4f1d-b427-e8e23fec7faf","name":"Delete users","object_type":"user","action_type":"destroy","object_id":null,"created_at":1412556153752,"created_by":1,"updated_at":1412556153752,"updated_by":1},{"id":29,"uuid":"63da690a-41ec-46b9-a3ff-d118403a037b","name":"Assign a role","object_type":"role","action_type":"assign","object_id":null,"created_at":1412556153755,"created_by":1,"updated_at":1412556153755,"updated_by":1},{"id":30,"uuid":"2623baa7-eb34-4ce1-9405-73477bcc2afe","name":"Browse roles","object_type":"role","action_type":"browse","object_id":null,"created_at":1412556153760,"created_by":1,"updated_at":1412556153760,"updated_by":1}],"permissions_users":[],"permissions_roles":[{"id":1,"role_id":1,"permission_id":1},{"id":2,"role_id":1,"permission_id":2},{"id":3,"role_id":1,"permission_id":3},{"id":4,"role_id":1,"permission_id":4},{"id":5,"role_id":1,"permission_id":5},{"id":6,"role_id":1,"permission_id":6},{"id":7,"role_id":1,"permission_id":7},{"id":8,"role_id":1,"permission_id":8},{"id":9,"role_id":1,"permission_id":9},{"id":10,"role_id":1,"permission_id":10},{"id":11,"role_id":1,"permission_id":11},{"id":12,"role_id":1,"permission_id":12},{"id":13,"role_id":1,"permission_id":13},{"id":14,"role_id":1,"permission_id":14},{"id":15,"role_id":1,"permission_id":15},{"id":16,"role_id":1,"permission_id":16},{"id":17,"role_id":1,"permission_id":17},{"id":18,"role_id":1,"permission_id":18},{"id":19,"role_id":1,"permission_id":19},{"id":20,"role_id":1,"permission_id":20},{"id":21,"role_id":1,"permission_id":21},{"id":22,"role_id":1,"permission_id":22},{"id":23,"role_id":1,"permission_id":23},{"id":24,"role_id":1,"permission_id":24},{"id":25,"role_id":1,"permission_id":25},{"id":26,"role_id":1,"permission_id":26},{"id":27,"role_id":1,"permission_id":27},{"id":28,"role_id":1,"permission_id":28},{"id":29,"role_id":1,"permission_id":29},{"id":30,"role_id":1,"permission_id":30},{"id":31,"role_id":2,"permission_id":8},{"id":32,"role_id":2,"permission_id":9},{"id":33,"role_id":2,"permission_id":10},{"id":34,"role_id":2,"permission_id":11},{"id":35,"role_id":2,"permission_id":12},{"id":36,"role_id":2,"permission_id":13},{"id":37,"role_id":2,"permission_id":14},{"id":38,"role_id":2,"permission_id":16},{"id":39,"role_id":2,"permission_id":17},{"id":40,"role_id":2,"permission_id":18},{"id":41,"role_id":2,"permission_id":19},{"id":42,"role_id":2,"permission_id":20},{"id":43,"role_id":2,"permission_id":21},{"id":44,"role_id":2,"permission_id":24},{"id":45,"role_id":2,"permission_id":25},{"id":46,"role_id":2,"permission_id":26},{"id":47,"role_id":2,"permission_id":27},{"id":48,"role_id":2,"permission_id":28},{"id":49,"role_id":2,"permission_id":29},{"id":50,"role_id":2,"permission_id":30},{"id":51,"role_id":3,"permission_id":8},{"id":52,"role_id":3,"permission_id":9},{"id":53,"role_id":3,"permission_id":11},{"id":54,"role_id":3,"permission_id":13},{"id":55,"role_id":3,"permission_id":14},{"id":56,"role_id":3,"permission_id":16},{"id":57,"role_id":3,"permission_id":17},{"id":58,"role_id":3,"permission_id":18},{"id":59,"role_id":3,"permission_id":20},{"id":60,"role_id":3,"permission_id":24},{"id":61,"role_id":3,"permission_id":25},{"id":62,"role_id":3,"permission_id":30}],"permissions_apps":[],"settings":[{"id":1,"uuid":"2ec21f57-e9e5-4d34-b2b6-9b5a9b399ab0","key":"databaseVersion","value":"003","type":"core","created_at":1412556154775,"created_by":1,"updated_at":1412556154775,"updated_by":1},{"id":2,"uuid":"798422c9-01e4-4c0c-931c-402026d22daa","key":"dbHash","value":"876514ae-d79e-44c6-9a80-6caf27c9c850","type":"core","created_at":1412556154787,"created_by":1,"updated_at":1412556154910,"updated_by":1},{"id":3,"uuid":"7b9f923a-de43-48dd-acfa-709a37c5f532","key":"nextUpdateCheck","value":"1420400740","type":"core","created_at":1412556154787,"created_by":1,"updated_at":1420314340958,"updated_by":1},{"id":4,"uuid":"dd17d6c7-615e-4143-9cbd-58f6d5888a67","key":"displayUpdateNotification","value":"0.5.0","type":"core","created_at":1412556154789,"created_by":1,"updated_at":1420314340984,"updated_by":1},{"id":5,"uuid":"b3f7f03d-ef49-48be-932c-2d149d80ef7f","key":"title","value":"spin ½","type":"blog","created_at":1412556154789,"created_by":1,"updated_at":1412571402947,"updated_by":1},{"id":6,"uuid":"c943b1f7-c64b-4808-89b1-73d032bd269b","key":"description","value":"spindump of thoughts and ideas","type":"blog","created_at":1412556154789,"created_by":1,"updated_at":1412571402955,"updated_by":1},{"id":7,"uuid":"f20140e2-6d50-4f32-a8c8-dc6085f5a94c","key":"email","value":"gravicle@gmail.com","type":"blog","created_at":1412556154790,"created_by":1,"updated_at":1412571402957,"updated_by":1},{"id":8,"uuid":"0ce494c6-3d97-4e4a-a249-2b6d4a8f5fc6","key":"logo","value":"/content/images/2014/10/logo.png","type":"blog","created_at":1412556154790,"created_by":1,"updated_at":1412571402960,"updated_by":1},{"id":9,"uuid":"031a1511-df2e-4365-96b5-851ad42920da","key":"cover","value":"/content/images/2014/10/IMG_0427.JPG","type":"blog","created_at":1412556154791,"created_by":1,"updated_at":1412571402962,"updated_by":1},{"id":10,"uuid":"5a7fa008-f0ec-4649-9292-6f11d0ec5f10","key":"defaultLang","value":"en_US","type":"blog","created_at":1412556154791,"created_by":1,"updated_at":1412571402964,"updated_by":1},{"id":11,"uuid":"a2585f0f-8c90-4b00-8a90-672e16f0e332","key":"postsPerPage","value":"5","type":"blog","created_at":1412556154791,"created_by":1,"updated_at":1412571402968,"updated_by":1},{"id":12,"uuid":"ee4c6921-0a41-4487-a5c9-ebdb1a0dfadb","key":"forceI18n","value":"true","type":"blog","created_at":1412556154791,"created_by":1,"updated_at":1412571402970,"updated_by":1},{"id":13,"uuid":"f9268967-381e-4cb0-8e21-a2425583b1aa","key":"permalinks","value":"/:year/:month/:day/:slug/","type":"blog","created_at":1412556154797,"created_by":1,"updated_at":1412571402973,"updated_by":1},{"id":14,"uuid":"43765ae7-c476-4fcd-8b7b-7de673ca12a8","key":"activeApps","value":"[]","type":"app","created_at":1412556154798,"created_by":1,"updated_at":1412556154798,"updated_by":1},{"id":15,"uuid":"006ab526-48eb-4e32-8da1-c714c451d15c","key":"installedApps","value":"[]","type":"app","created_at":1412556154798,"created_by":1,"updated_at":1418470626572,"updated_by":1},{"id":16,"uuid":"baf658eb-4722-4d55-bb17-e89393ee8a71","key":"activeTheme","value":"ghosttheme","type":"theme","created_at":1412556154797,"created_by":1,"updated_at":1412571402976,"updated_by":1}],"tags":[{"id":1,"uuid":"80ce590f-d78b-429b-b211-20b7c1634bc5","name":"Getting Started","slug":"getting-started","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1412556153445,"created_by":1,"updated_at":1412556153445,"updated_by":1},{"id":2,"uuid":"a1945504-87ce-4e7e-ab19-b64aa7a68289","name":"context","slug":"context","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1412562653827,"created_by":1,"updated_at":1412562653827,"updated_by":1},{"id":3,"uuid":"3aba0003-c012-4b96-89ad-e299df9ca45a","name":"data","slug":"data","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1412562653831,"created_by":1,"updated_at":1412562653831,"updated_by":1},{"id":4,"uuid":"03f3726f-bdb5-4378-a960-98f8212887ec","name":"facebook","slug":"facebook","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1412562653833,"created_by":1,"updated_at":1412562653833,"updated_by":1},{"id":5,"uuid":"bcd22824-719a-43bd-9437-ddd14554c9d4","name":"home","slug":"home","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1412562653834,"created_by":1,"updated_at":1412562653834,"updated_by":1},{"id":6,"uuid":"c0f6abac-02ce-415c-90c5-c0509fb2e679","name":"information","slug":"information","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1412562653835,"created_by":1,"updated_at":1412562653835,"updated_by":1},{"id":7,"uuid":"c65adc14-10c5-4466-9bbb-436b6c132395","name":"iOS","slug":"ios","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1412562653840,"created_by":1,"updated_at":1412562653840,"updated_by":1},{"id":8,"uuid":"9c52ddbb-1370-41c6-a15b-9082e4d5fb4d","name":"paul graham","slug":"paul-graham","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1412562653842,"created_by":1,"updated_at":1412562653842,"updated_by":1},{"id":9,"uuid":"094dbee3-ee19-4dfc-812e-35cbd2f04fcf","name":"readlist","slug":"readlist","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1412562653844,"created_by":1,"updated_at":1412562653844,"updated_by":1},{"id":10,"uuid":"0880cd65-822b-47ed-91d3-123e0beadee8","name":"singularity","slug":"singularity","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1412562653845,"created_by":1,"updated_at":1412562653845,"updated_by":1},{"id":11,"uuid":"bed88e76-ffe3-46f2-b7bd-c86a28b5c23b","name":"startups","slug":"startups","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1412562653849,"created_by":1,"updated_at":1412562653849,"updated_by":1},{"id":12,"uuid":"c98e4457-2736-4422-9ccb-f67496f7f5ec","name":"stupidity","slug":"stupidity","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1412562653851,"created_by":1,"updated_at":1412562653851,"updated_by":1},{"id":13,"uuid":"6f88d140-a16f-4240-8174-2e839166e71c","name":"the future","slug":"the-future","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1412562653852,"created_by":1,"updated_at":1412562653852,"updated_by":1},{"id":14,"uuid":"cd63be32-9793-47f8-b242-dd40cae66a01","name":"articleImage","slug":"articleimage","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1412575924383,"created_by":1,"updated_at":1412575924383,"updated_by":1},{"id":15,"uuid":"dc88d719-ff5d-4855-a6e2-e13d8be18ee0","name":"markdown","slug":"markdown","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1412576319367,"created_by":1,"updated_at":1412576319367,"updated_by":1},{"id":16,"uuid":"04aa5ad2-6412-4760-b21a-c1ce6b6faea1","name":"OTA","slug":"ota","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1412813551632,"created_by":1,"updated_at":1412813551632,"updated_by":1}],"posts_tags":[{"id":7,"post_id":16,"tag_id":4},{"id":8,"post_id":16,"tag_id":12},{"id":9,"post_id":19,"tag_id":8},{"id":10,"post_id":19,"tag_id":9},{"id":11,"post_id":19,"tag_id":11},{"id":12,"post_id":20,"tag_id":2},{"id":13,"post_id":20,"tag_id":3},{"id":14,"post_id":20,"tag_id":6},{"id":15,"post_id":20,"tag_id":10},{"id":16,"post_id":21,"tag_id":4},{"id":17,"post_id":21,"tag_id":5},{"id":18,"post_id":21,"tag_id":7},{"id":19,"post_id":21,"tag_id":13},{"id":22,"post_id":90,"tag_id":14},{"id":23,"post_id":90,"tag_id":15},{"id":28,"post_id":92,"tag_id":7},{"id":29,"post_id":92,"tag_id":16}],"apps":[],"app_settings":[],"app_fields":[]}}]}