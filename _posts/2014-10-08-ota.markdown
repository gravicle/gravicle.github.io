---
layout: post
title: OTA
date: 2014-10-08 19:12:31.000000000 -05:00
summary: So, there's this problem on the Internet and its being caused by a seeming lack of foresight. What a shock! I am referring to iOS 8's (not so) mysterious stall in upgrade pace.
---
So, there's this problem on the Internet and its being caused by a seeming lack of foresight. What a shock! I am referring to iOS 8's (not so) mysterious stall in upgrade pace. The prime suspect is a lack of free space on the target devices. iOS 8 asks for 5GB of free space on the disk for update. That's a near impossible ask for devices with only 16GB of onboard storage. After the OS taking up about 4 and people using the device for a year taking photos and installing apps, not much is really left. I personally know people who constantly tap "OK" on low space warning on their device. It's unacceptable that Apple still sells these! Anyway, let's talk about *why* iOS 8 needs 5BG of free space.

Spoiler: No it's not a senseless threshold set by morons.

### Here's how the update process works

1. When you hit update, the OS downloads a heavily compressed binary from Apple's servers. 
2. This binary needs to be uncompressed while the compressed one is still on the disk. This is where your phone is "Preparing for update". So, you need enough space to store both! The uncompressed image is probably deleted once decompression is finished and data is verified for consistency.
3. At this point, your device reboots and you see the progress bar. Now, the real task of updating the OS starts. The downloaded update is a delta update. What this means is that it only consists of files which were changed over the previous version. For point releases its a smaller number of files; for whole number releases, it's a **lot** of files. A lot of little 2, 3, 10KB files. One might think that if the uncompressed update is, say, 2GB, the update will need just that 2GB free space. Nope! A whole lot more. See, the files aren't committed on the fly. What this means is that if a file, File.m, needs to be changed, it won't be written right onto the disk replacing the older File.m. No. It's actually copied, the copy is modified to be like the new File.m. Then, this is done for *all* the files. So, now you have on disk all the original File.m's, their updated copies, and the downloaded File.m's. So, practically, you are using 2x as much storage as the uncompressed update occupies + the original files' storage hasn't been freed up yet. When all the files are updated and their consistency is verified, the OS deletes the older files, deletes the uncompressed update, updates locations of the new files in the file table to be in the right place and your phone reboots into the updated OS.

So, why not just write over files on the fly? It'll take, probably, less than half the space. Imagine, what if, while updating, the phone shuts off? The user turns it off? The kernel panics for whatever reason? Now you have an OS with some files which it either does not recognize or which do not work with files from the older version. In short, a bricked phone with no hope to salvage data. The only solution at this point is DFU mode and a clean restore. Imagine if this happened to you! Clearly this not a situation that can be allowed to be an outcome of any scenario. So, the OS waits to commit the files until the very last moment when it can just run a *very* quick sweep across the file table and update records. The risk of bricking the device is confined within those very very quick moments instead of spreading it over a period of 15-20 minutes! That's a great solution.

Also, why not update it over the air? Meaning, why not download individual files and update them? That's horrible! We are then racing against one of the most finicky parameters in computing.. Network! It goes dark and.. ðŸ’©

So, no, the update space requirements aren't a drunken folly! They're the consequence of thoughtfulness. What's the issue here is giving people 16GB devices in 2014. Apple might solve it by pushing out smaller updates which need to be applied in succession, but then again, many people don't even have space for a single photo on their device! A solution could be recall-style Apple Store updates. iCloud Photo Library is a solution to space problems but only if you can get over the iOS 8 bump. Apple might (somehow) back-port it to iOS 7, explain to users that their photos are going to the cloud to free up space, wait for the upload (a very tall order), and then update the devices OTA. Apple can also ask users to plug into a PC and update using iTunes. We all know how likely people are to do that! In any scenario, the outcome is going to be nasty!

If anything, this will be the thorn in iOS' rosy garden.
